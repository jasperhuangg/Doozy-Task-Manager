{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/Login.js\";\nimport React, { Component } from \"react\";\nimport \"./Login-Register.css\";\nimport { GoogleLogin } from \"react-google-login\";\nimport \"./GoogleButton.css\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleGoogleOAuth = response => {\n      console.log(response);\n      const username = response.profileObj.email;\n      const firstName = response.profileObj.givenName;\n      const lastName = response.profileObj.lastName;\n      var password = response.profileObj.googleId; // add some sort of hashing function to this\n\n      const domain = \"http://localhost:9000\";\n      const url = domain + \"/accountExists\";\n      const body = JSON.stringify({\n        username: username\n      });\n      password = \"Jasper99!\";\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: body\n      }).then(res => res.json()).then(res => {\n        if (res) this.props.verifyLogin(username, password);else this.props.createAccount(username, firstName, lastName, password);\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      usernameEntered: false,\n      nextClicked: false\n    };\n    this.passwordInput = React.createRef();\n    this.inputRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    if (this.state.usernameEntered === false && this.state.email !== \"\") this.setState({\n      usernameEntered: true\n    });\n  }\n\n  handleEmailInput(e) {\n    var entered = e.target.value === \"\";\n    this.setState({\n      email: e.target.value,\n      usernameEntered: !entered\n    });\n  }\n\n  handleEmailEnter(e) {\n    if (this.state.usernameEntered && (e.keyCode === 13 || e.keyCode === 9)) {\n      e.preventDefault();\n      this.setState({\n        nextClicked: true\n      });\n      this.passwordInput.current.focus();\n    }\n  }\n\n  handlePasswordEnter(e) {\n    if (this.state.nextClicked && e.keyCode === 13 && e.target.value !== \"\") {\n      e.preventDefault();\n      this.props.verifyLogin(this.state.email, this.state.password); // this.setState({ usernameEntered: false, nextClicked: false });\n    }\n  }\n\n  handlePasswordInput(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLoginBtnClick(e) {\n    e.preventDefault();\n    if (!this.state.nextClicked) this.setState({\n      nextClicked: true\n    });else {\n      this.props.verifyLogin(this.state.email, this.state.password); // this.setState({ usernameEntered: false, nextClicked: false });\n    }\n  }\n\n  reverseStr(str) {\n    str = str.split(\"\");\n  }\n\n  hashGoogleInfo(responseObj) {\n    const profileObj = responseObj.profileObj;\n    const firstName = profileObj.givenName;\n    const lastName = profileObj.familyName;\n    const googleId = profileObj.googleId;\n    const email = profileObj.email;\n  }\n\n  render() {\n    const sentBack = this.props.loginInfo !== \"not yet\";\n\n    if (this.state.nextClicked && !sentBack) {\n      this.passwordInput.current.focus();\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Login py-5 px-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"LOGO\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"text-center\",\n      style: {\n        fontWeight: \"600\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"Log in to your account\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"google-btn\",\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"google-icon-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"google-icon\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"google-button-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      clientId: \"777242510220-80aoinvqo7q39g1iqtafjet4stv1nnu7.apps.googleusercontent.com\",\n      render: renderProps => /*#__PURE__*/React.createElement(\"a\", {\n        onClick: renderProps.onClick,\n        disabled: renderProps.disabled,\n        className: \"btn-text no-bg-no-borders text-white text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, \"Log in with Google\"),\n      buttonText: \"Log in with Google\",\n      onSuccess: this.handleGoogleOAuth,\n      onFailure: () => {\n        alert(\"Google OAuth Failed.\");\n      },\n      cookiePolicy: \"single_host_origin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"or-separator my-2 w-100 text-center font-grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"px-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \"or\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"font-small-login-reg text-danger\" + (this.props.loginInfo === \"not yet\" ? \" d-none\" : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, \"Please provide a valid username and password.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"font-grey font-small-login-reg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"login-email-input\",\n      style: {\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"Email Address\", \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group input-group-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control form-control-sm\" + (this.state.usernameEntered ? \" input-validated\" : \"\") + (sentBack && this.props.loginInfo === \"username does not exist\" ? \" border-danger\" : \"\"),\n      id: \"login-email-input\",\n      \"aria-describedby\": \"emailHelp\",\n      onChange: e => this.handleEmailInput(e),\n      onKeyDown: e => this.handleEmailEnter(e),\n      disabled: this.state.nextClicked && this.props.loginInfo !== \"username does not exist\",\n      ref: this.inputRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\" + (this.state.nextClicked && this.props.loginInfo !== \"username does not exist\" ? \"\" : \" d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text email-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\" + (this.state.nextClicked ? \"\" : \" d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"login-password-input\",\n      style: {\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control form-control-sm\" + (sentBack ? \" border-danger\" : \"\"),\n      id: \"login-password-input\",\n      onChange: e => this.handlePasswordInput(e),\n      ref: this.passwordInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary px-4 font-small-login-reg\",\n      type: this.state.nextClicked ? \"submit\" : \"button\",\n      disabled: !this.state.usernameEntered || this.inputRef.current.value === \"\",\n      onClick: e => this.handleLoginBtnClick(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, this.state.nextClicked ? \"Log In\" : \"Next\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-3 font-small-login-reg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, \"Don't have an account?\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => {\n        this.props.switchToRegister();\n      },\n      className: \"text-primary toggle-prompt-text\",\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, \"Sign Up\"))));\n  }\n\n}\n\nconst responseGoogle = response => {\n  console.log(response);\n};","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/Login.js"],"names":["React","Component","GoogleLogin","Login","constructor","props","handleGoogleOAuth","response","console","log","username","profileObj","email","firstName","givenName","lastName","password","googleId","domain","url","body","JSON","stringify","fetch","method","headers","then","res","json","verifyLogin","createAccount","state","usernameEntered","nextClicked","passwordInput","createRef","inputRef","componentDidUpdate","setState","handleEmailInput","e","entered","target","value","handleEmailEnter","keyCode","preventDefault","current","focus","handlePasswordEnter","handlePasswordInput","handleLoginBtnClick","reverseStr","str","split","hashGoogleInfo","responseObj","familyName","render","sentBack","loginInfo","fontWeight","cursor","renderProps","onClick","disabled","alert","switchToRegister","responseGoogle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Login-Register.css\";\nimport { GoogleLogin } from \"react-google-login\";\nimport \"./GoogleButton.css\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      usernameEntered: false,\n      nextClicked: false,\n    };\n    this.passwordInput = React.createRef();\n    this.inputRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    if (this.state.usernameEntered === false && this.state.email !== \"\")\n      this.setState({ usernameEntered: true });\n  }\n\n  handleEmailInput(e) {\n    var entered = e.target.value === \"\";\n\n    this.setState({\n      email: e.target.value,\n      usernameEntered: !entered,\n    });\n  }\n\n  handleEmailEnter(e) {\n    if (this.state.usernameEntered && (e.keyCode === 13 || e.keyCode === 9)) {\n      e.preventDefault();\n      this.setState({ nextClicked: true });\n      this.passwordInput.current.focus();\n    }\n  }\n\n  handlePasswordEnter(e) {\n    if (this.state.nextClicked && e.keyCode === 13 && e.target.value !== \"\") {\n      e.preventDefault();\n      this.props.verifyLogin(this.state.email, this.state.password);\n      // this.setState({ usernameEntered: false, nextClicked: false });\n    }\n  }\n\n  handlePasswordInput(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleLoginBtnClick(e) {\n    e.preventDefault();\n    if (!this.state.nextClicked) this.setState({ nextClicked: true });\n    else {\n      this.props.verifyLogin(this.state.email, this.state.password);\n      // this.setState({ usernameEntered: false, nextClicked: false });\n    }\n  }\n\n  reverseStr(str) {\n    str = str.split(\"\");\n  }\n\n  hashGoogleInfo(responseObj) {\n    const profileObj = responseObj.profileObj;\n\n    const firstName = profileObj.givenName;\n    const lastName = profileObj.familyName;\n    const googleId = profileObj.googleId;\n    const email = profileObj.email;\n  }\n\n  handleGoogleOAuth = (response) => {\n    console.log(response);\n    const username = response.profileObj.email;\n    const firstName = response.profileObj.givenName;\n    const lastName = response.profileObj.lastName;\n    var password = response.profileObj.googleId; // add some sort of hashing function to this\n    const domain = \"http://localhost:9000\";\n    const url = domain + \"/accountExists\";\n    const body = JSON.stringify({\n      username: username,\n    });\n\n    password = \"Jasper99!\";\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res) this.props.verifyLogin(username, password);\n        else this.props.createAccount(username, firstName, lastName, password);\n      });\n  };\n\n  render() {\n    const sentBack = this.props.loginInfo !== \"not yet\";\n\n    if (this.state.nextClicked && !sentBack) {\n      this.passwordInput.current.focus();\n    }\n\n    return (\n      <div className=\"Login py-5 px-4\">\n        <h1>LOGO</h1>\n        <br />\n        <br />\n        <h5 className=\"text-center\" style={{ fontWeight: \"600\" }}>\n          Log in to your account\n        </h5>\n        <br />\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"google-btn\" style={{ cursor: \"pointer\" }}>\n            <div className=\"google-icon-wrapper\">\n              <img\n                className=\"google-icon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n              />\n            </div>\n            <div className=\"google-button-text\">\n              <GoogleLogin\n                clientId=\"777242510220-80aoinvqo7q39g1iqtafjet4stv1nnu7.apps.googleusercontent.com\"\n                render={(renderProps) => (\n                  <a\n                    onClick={renderProps.onClick}\n                    disabled={renderProps.disabled}\n                    className=\"btn-text no-bg-no-borders text-white text-center\"\n                  >\n                    Log in with Google\n                  </a>\n                )}\n                buttonText=\"Log in with Google\"\n                onSuccess={this.handleGoogleOAuth}\n                onFailure={() => {\n                  alert(\"Google OAuth Failed.\");\n                }}\n                cookiePolicy={\"single_host_origin\"}\n              />\n            </div>\n          </div>\n        </div>\n        <br />\n        <div className=\"or-separator my-2 w-100 text-center font-grey\">\n          <span className=\"px-1\">or</span>\n        </div>\n        <div\n          className={\n            \"font-small-login-reg text-danger\" +\n            (this.props.loginInfo === \"not yet\" ? \" d-none\" : \"\")\n          }\n        >\n          Please provide a valid username and password.\n        </div>\n        <br />\n        <form className=\"font-grey font-small-login-reg\">\n          <label htmlFor=\"login-email-input\" style={{ fontWeight: \"500\" }}>\n            Email Address{\" \"}\n          </label>\n          <div className=\"input-group input-group-sm\">\n            <input\n              type=\"email\"\n              className={\n                \"form-control form-control-sm\" +\n                (this.state.usernameEntered ? \" input-validated\" : \"\") +\n                (sentBack && this.props.loginInfo === \"username does not exist\"\n                  ? \" border-danger\"\n                  : \"\")\n              }\n              id=\"login-email-input\"\n              aria-describedby=\"emailHelp\"\n              onChange={(e) => this.handleEmailInput(e)}\n              onKeyDown={(e) => this.handleEmailEnter(e)}\n              disabled={\n                this.state.nextClicked &&\n                this.props.loginInfo !== \"username does not exist\"\n              }\n              ref={this.inputRef}\n            />\n            <div\n              className={\n                \"input-group-append\" +\n                (this.state.nextClicked &&\n                this.props.loginInfo !== \"username does not exist\"\n                  ? \"\"\n                  : \" d-none\")\n              }\n            >\n              <span className=\"input-group-text email-check\">\n                <i className=\"fas fa-check\"></i>\n              </span>\n            </div>\n\n            {/* <small id=\"emailHelp\" className=\"form-text text-muted\">\n              This is your email address you used when you registered.\n            </small> */}\n          </div>\n\n          <div\n            className={\"form-group\" + (this.state.nextClicked ? \"\" : \" d-none\")}\n          >\n            <br></br>\n            <label htmlFor=\"login-password-input\" style={{ fontWeight: \"500\" }}>\n              Password\n            </label>\n            <input\n              type=\"password\"\n              className={\n                \"form-control form-control-sm\" +\n                (sentBack ? \" border-danger\" : \"\")\n              }\n              id=\"login-password-input\"\n              onChange={(e) => this.handlePasswordInput(e)}\n              ref={this.passwordInput}\n            />\n          </div>\n          <br />\n          <br />\n\n          <button\n            className=\"btn btn-primary px-4 font-small-login-reg\"\n            type={this.state.nextClicked ? \"submit\" : \"button\"}\n            disabled={\n              !this.state.usernameEntered || this.inputRef.current.value === \"\"\n            }\n            onClick={(e) => this.handleLoginBtnClick(e)}\n          >\n            {this.state.nextClicked ? \"Log In\" : \"Next\"}\n          </button>\n\n          <span className=\"ml-3 font-small-login-reg\">\n            Don't have an account?{\" \"}\n            <span\n              onClick={() => {\n                this.props.switchToRegister();\n              }}\n              className=\"text-primary toggle-prompt-text\"\n              style={{ cursor: \"pointer\" }}\n            >\n              Sign Up\n            </span>\n          </span>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst responseGoogle = (response) => {\n  console.log(response);\n};\n"]},"metadata":{},"sourceType":"module"}