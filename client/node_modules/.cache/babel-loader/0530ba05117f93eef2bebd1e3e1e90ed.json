{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/todolist/ListItem.js\";\nimport React, { Component } from \"react\";\nimport \"./Todolist.css\";\nexport default class ListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemID: props.itemID\n    };\n  }\n\n  render() {\n    const title = this.props.title;\n    const dueDate = this.props.dueDate;\n    const formattedDate = formatDate(dueDate);\n    const isLate = getIsLate(dueDate);\n    const rowClasses = \"row justify-content-center pt-2 pb-2 pl-4 pr-1 align-items-center\" + (this.props.completed ? \" completed\" : \"\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: rowClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      value: \"\" // checked={this.props.completed}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2 item-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 text-right item-due-date font-small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, formattedDate));\n  }\n\n}\n\nfunction formatDate(str) {\n  if (str === \"\") return \"\";\n  const today = new Date();\n  const currYear = today.getFullYear();\n  const monthAbbr = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const year = parseInt(str.substring(0, 4));\n  const month = parseInt(str.substring(5, 7));\n  const day = parseInt(str.substring(8, 10));\n  var formatted = monthAbbr[month - 1] + \" \" + day + (currYear === year ? \"\" : \", \" + year);\n  return formatted;\n}\n\nfunction getIsLate(date) {\n  const today = new Date();\n  const d = new Date(date);\n  return d < today;\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/todolist/ListItem.js"],"names":["React","Component","ListItem","constructor","props","state","itemID","render","title","dueDate","formattedDate","formatDate","isLate","getIsLate","rowClasses","completed","str","today","Date","currYear","getFullYear","monthAbbr","year","parseInt","substring","month","day","formatted","date","d"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,gBAAP;AAEA,eAAe,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC9CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEF,KAAK,CAACE;AADH,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKJ,KAAL,CAAWI,KAAzB;AACA,UAAMC,OAAO,GAAG,KAAKL,KAAL,CAAWK,OAA3B;AACA,UAAMC,aAAa,GAAGC,UAAU,CAACF,OAAD,CAAhC;AACA,UAAMG,MAAM,GAAGC,SAAS,CAACJ,OAAD,CAAxB;AAEA,UAAMK,UAAU,GACd,uEACC,KAAKV,KAAL,CAAWW,SAAX,GAAuB,YAAvB,GAAsC,EADvC,CADF;AAGA,wBACE;AAAK,MAAA,SAAS,EAAED,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAC,EAHR,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCN,KAAnC,CAPF,CADF,eAWE;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,aADH,CAXF,CADF;AAiBD;;AAlC6C;;AAqChD,SAASC,UAAT,CAAoBK,GAApB,EAAyB;AACvB,MAAIA,GAAG,KAAK,EAAZ,EAAgB,OAAO,EAAP;AAChB,QAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,QAAQ,GAAGF,KAAK,CAACG,WAAN,EAAjB;AAEA,QAAMC,SAAS,GAAG,CAChB,KADgB,EAEhB,KAFgB,EAGhB,KAHgB,EAIhB,KAJgB,EAKhB,KALgB,EAMhB,KANgB,EAOhB,KAPgB,EAQhB,KARgB,EAShB,KATgB,EAUhB,KAVgB,EAWhB,KAXgB,EAYhB,KAZgB,CAAlB;AAeA,QAAMC,IAAI,GAAGC,QAAQ,CAACP,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAD,CAArB;AACA,QAAMC,KAAK,GAAGF,QAAQ,CAACP,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAD,CAAtB;AACA,QAAME,GAAG,GAAGH,QAAQ,CAACP,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiB,EAAjB,CAAD,CAApB;AAEA,MAAIG,SAAS,GACXN,SAAS,CAACI,KAAK,GAAG,CAAT,CAAT,GAAuB,GAAvB,GAA6BC,GAA7B,IAAoCP,QAAQ,KAAKG,IAAb,GAAoB,EAApB,GAAyB,OAAOA,IAApE,CADF;AAGA,SAAOK,SAAP;AACD;;AAED,SAASd,SAAT,CAAmBe,IAAnB,EAAyB;AACvB,QAAMX,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMW,CAAC,GAAG,IAAIX,IAAJ,CAASU,IAAT,CAAV;AAEA,SAAOC,CAAC,GAAGZ,KAAX;AACD","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./Todolist.css\";\n\nexport default class ListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemID: props.itemID,\n    };\n  }\n\n  render() {\n    const title = this.props.title;\n    const dueDate = this.props.dueDate;\n    const formattedDate = formatDate(dueDate);\n    const isLate = getIsLate(dueDate);\n\n    const rowClasses =\n      \"row justify-content-center pt-2 pb-2 pl-4 pr-1 align-items-center\" +\n      (this.props.completed ? \" completed\" : \"\");\n    return (\n      <div className={rowClasses}>\n        <div className=\"col-10 text-left\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            value=\"\"\n            // checked={this.props.completed}\n          />\n          <span className=\"ml-2 item-title\">{title}</span>\n        </div>\n\n        <div className=\"col-2 text-right item-due-date font-small\">\n          {formattedDate}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction formatDate(str) {\n  if (str === \"\") return \"\";\n  const today = new Date();\n  const currYear = today.getFullYear();\n\n  const monthAbbr = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  const year = parseInt(str.substring(0, 4));\n  const month = parseInt(str.substring(5, 7));\n  const day = parseInt(str.substring(8, 10));\n\n  var formatted =\n    monthAbbr[month - 1] + \" \" + day + (currYear === year ? \"\" : \", \" + year);\n\n  return formatted;\n}\n\nfunction getIsLate(date) {\n  const today = new Date();\n  const d = new Date(date);\n\n  return d < today;\n}\n"]},"metadata":{},"sourceType":"module"}