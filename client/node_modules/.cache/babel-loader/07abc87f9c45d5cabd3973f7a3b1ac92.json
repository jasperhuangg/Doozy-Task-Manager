{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/todolist/CalendarOverlay.js\";\nimport React, { Component } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nexport default class CalendarOverlay extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedDate: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Calendar, {\n      onChange: date => this.setDate(date),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary calendar-overlay-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, \"Clear\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary  calendar-overlay-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"OK\"))));\n  }\n\n  setDate(date) {\n    console.log(date);\n    var formatted = formatDate(date);\n    this.setState({\n      selectedDate: formatted\n    });\n    console.log(this.state.selectedDate);\n  }\n\n}\n\nfunction formatDate(date) {\n  var day = date.getDate();\n\n  if (day < 10) {\n    day = \"0\" + day.toString();\n  }\n\n  console.log(\"date: \" + date.getFullYear());\n  var month = (date.getMonth() + 1).toString();\n\n  if (day < 10) {\n    day = \"0\" + day.toString();\n  }\n\n  var year = date.getFullYear().toString();\n  var formatted = year + \"-\" + month + \"-\" + day;\n  return formatted;\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/todolist/CalendarOverlay.js"],"names":["React","Component","Calendar","CalendarOverlay","state","selectedDate","render","date","setDate","console","log","formatted","formatDate","setState","day","getDate","toString","getFullYear","month","getMonth","year"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;AAEA,eAAe,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACrDG,KADqD,GAC7C;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAD6C;AAAA;;AAErDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAGC,IAAD,IAAU,KAAKC,OAAL,CAAaD,IAAb,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,2CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eASE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,0CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CATF,CAFF,CADF;AAuBD;;AAEDC,EAAAA,OAAO,CAACD,IAAD,EAAO;AACZE,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAII,SAAS,GAAGC,UAAU,CAACL,IAAD,CAA1B;AAEA,SAAKM,QAAL,CAAc;AAAER,MAAAA,YAAY,EAAEM;AAAhB,KAAd;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,YAAvB;AACD;;AAnCoD;;AAsCvD,SAASO,UAAT,CAAoBL,IAApB,EAA0B;AACxB,MAAIO,GAAG,GAAGP,IAAI,CAACQ,OAAL,EAAV;;AACA,MAAID,GAAG,GAAG,EAAV,EAAc;AACZA,IAAAA,GAAG,GAAG,MAAMA,GAAG,CAACE,QAAJ,EAAZ;AACD;;AAEDP,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWH,IAAI,CAACU,WAAL,EAAvB;AAEA,MAAIC,KAAK,GAAG,CAACX,IAAI,CAACY,QAAL,KAAkB,CAAnB,EAAsBH,QAAtB,EAAZ;;AAEA,MAAIF,GAAG,GAAG,EAAV,EAAc;AACZA,IAAAA,GAAG,GAAG,MAAMA,GAAG,CAACE,QAAJ,EAAZ;AACD;;AAED,MAAII,IAAI,GAAGb,IAAI,CAACU,WAAL,GAAmBD,QAAnB,EAAX;AAEA,MAAIL,SAAS,GAAGS,IAAI,GAAG,GAAP,GAAaF,KAAb,GAAqB,GAArB,GAA2BJ,GAA3C;AAEA,SAAOH,SAAP;AACD","sourcesContent":["import React, { Component } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\n\nexport default class CalendarOverlay extends Component {\n  state = { selectedDate: \"\" };\n  render() {\n    return (\n      <div className=\"overlay\">\n        <Calendar onChange={(date) => this.setDate(date)} />\n        <div className=\"row mt-4\">\n          <div className=\"col-6\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary calendar-overlay-button\"\n            >\n              Clear\n            </button>\n          </div>\n          <div className=\"col-6\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary  calendar-overlay-button\"\n            >\n              OK\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  setDate(date) {\n    console.log(date);\n    var formatted = formatDate(date);\n\n    this.setState({ selectedDate: formatted });\n\n    console.log(this.state.selectedDate);\n  }\n}\n\nfunction formatDate(date) {\n  var day = date.getDate();\n  if (day < 10) {\n    day = \"0\" + day.toString();\n  }\n\n  console.log(\"date: \" + date.getFullYear());\n\n  var month = (date.getMonth() + 1).toString();\n\n  if (day < 10) {\n    day = \"0\" + day.toString();\n  }\n\n  var year = date.getFullYear().toString();\n\n  var formatted = year + \"-\" + month + \"-\" + day;\n\n  return formatted;\n}\n"]},"metadata":{},"sourceType":"module"}