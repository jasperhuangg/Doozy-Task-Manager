{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/todolist/ListItem.js\";\nimport React, { Component } from \"react\";\nimport \"./Todolist.css\";\nimport \"./Checkbox.css\";\nexport default class ListItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = e => {\n      if (e.keyCode === 13) {\n        this.inputRef.current.blur();\n      }\n    };\n\n    this.handleBlur = e => {\n      const title = e.target.value;\n      if (title !== this.props.title) this.props.setItemTitle(this.props.listName, this.state.itemID, title);\n    };\n\n    this.inputRef = React.createRef();\n    this.state = {\n      itemID: props.itemID,\n      title: this.props.title,\n      dueDate: this.props.dueDate\n    };\n    this.handleCheck = this.handleCheck.bind(this);\n  }\n\n  async handleCheck(e) {\n    var completed = e.target.checked;\n    this.props.setItemCompleted(this.props.listName, this.state.itemID, completed);\n  }\n\n  handleItemSelection(e) {\n    this.props.setSelectedItem(this.state.itemID);\n  }\n\n  componentDidUpdate(prevProp) {\n    if (prevProp.title === this.props.title && prevProp.dueDate === this.props.dueDate) return;\n    this.setState({\n      title: this.props.title,\n      dueDate: this.props.dueDate\n    });\n  }\n\n  render() {\n    const title = this.props.title;\n    const dueDate = this.props.dueDate;\n    const completed = this.props.completed;\n    const formattedDate = formatDate(dueDate);\n    const isLate = getIsLate(dueDate);\n    var dueDateClassList = \"col-2 text-right item-due-date font-small\" + (isLate ? \" text-danger\" : \"\");\n    const rowClasses = \"row justify-content-center pt-2 pb-2 pl-4 pr-1 align-items-center font-color todo-item\" + (this.props.completed ? \" completed\" : \"\") + (this.state.itemID === this.props.selectedItemID ? \" selected-item\" : \"\");\n    const rowBorderColor = getRowBorderColor(this.props.priority);\n    const titleInputClasses = \"ml-2 title-input\" + (this.state.itemID === this.props.selectedItemID ? \" selected-item-input\" : \"\");\n    if (!this.props.completed) console.log(\"in list item: \" + title);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: rowClasses,\n      onClick: e => this.handleItemSelection(e),\n      onContextMenu: e => this.handleItemSelection(e),\n      style: {\n        borderColor: rowBorderColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input font-color\",\n      type: \"checkbox\",\n      value: \"\",\n      checked: completed,\n      onChange: this.handleCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      spellCheck: \"false\",\n      className: titleInputClasses,\n      value: title,\n      ref: this.inputRef,\n      onKeyDown: e => this.handleKeyPress(e),\n      onBlur: e => this.handleBlur(e),\n      onChange: e => this.setState({\n        title: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: dueDateClassList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, formattedDate));\n  }\n\n}\n\nfunction formatDate(str) {\n  if (str === \"\") return \"\";\n  const today = new Date();\n  const currYear = today.getFullYear();\n  const monthAbbr = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const year = parseInt(str.substring(0, 4));\n  const month = parseInt(str.substring(5, 7));\n  const day = parseInt(str.substring(8, 10));\n  var dateObj = new Date(year + \"-\" + month + \"-\" + day + \" 00:00\");\n\n  if (dateObj.getFullYear() === today.getFullYear() && dateObj.getMonth() === today.getMonth()) {\n    var yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    var tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    if (dateObj.getDate() === today.getDate()) return \"Today\";else if (dateObj.getDate() === yesterday.getDate()) return \"Yesterday\";else if (dateObj.getDate() === tomorrow.getDate()) return \"Tomorrow\";\n  }\n\n  var formatted = monthAbbr[month - 1] + \" \" + day + (currYear === year ? \"\" : \", \" + year);\n  return formatted;\n}\n\nfunction getIsLate(date) {\n  if (date === \"\") return false;\n  const today = new Date() - 1;\n  const d = new Date(date + \" 00:00\");\n  return d < today;\n}\n\nfunction getRowBorderColor(priority) {\n  if (priority === \"high\") return \"rgb(218, 56, 73)\";else if (priority === \"medium\") return \"rgb(21, 127, 251)\";else if (priority === \"low\") return \"rgb(37, 162, 183)\";\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/todolist/ListItem.js"],"names":["React","Component","ListItem","constructor","props","handleKeyPress","e","keyCode","inputRef","current","blur","handleBlur","title","target","value","setItemTitle","listName","state","itemID","createRef","dueDate","handleCheck","bind","completed","checked","setItemCompleted","handleItemSelection","setSelectedItem","componentDidUpdate","prevProp","setState","render","formattedDate","formatDate","isLate","getIsLate","dueDateClassList","rowClasses","selectedItemID","rowBorderColor","getRowBorderColor","priority","titleInputClasses","console","log","borderColor","str","today","Date","currYear","getFullYear","monthAbbr","year","parseInt","substring","month","day","dateObj","getMonth","yesterday","setDate","getDate","tomorrow","formatted","date","d"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./Todolist.css\";\nimport \"./Checkbox.css\";\n\nexport default class ListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      itemID: props.itemID,\n      title: this.props.title,\n      dueDate: this.props.dueDate,\n    };\n\n    this.handleCheck = this.handleCheck.bind(this);\n  }\n\n  async handleCheck(e) {\n    var completed = e.target.checked;\n\n    this.props.setItemCompleted(\n      this.props.listName,\n      this.state.itemID,\n      completed\n    );\n  }\n\n  handleItemSelection(e) {\n    this.props.setSelectedItem(this.state.itemID);\n  }\n\n  handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      this.inputRef.current.blur();\n    }\n  };\n\n  handleBlur = (e) => {\n    const title = e.target.value;\n    if (title !== this.props.title)\n      this.props.setItemTitle(this.props.listName, this.state.itemID, title);\n  };\n\n  componentDidUpdate(prevProp) {\n    if (\n      prevProp.title === this.props.title &&\n      prevProp.dueDate === this.props.dueDate\n    )\n      return;\n    this.setState({ title: this.props.title, dueDate: this.props.dueDate });\n  }\n\n  render() {\n    const title = this.props.title;\n    const dueDate = this.props.dueDate;\n    const completed = this.props.completed;\n    const formattedDate = formatDate(dueDate);\n    const isLate = getIsLate(dueDate);\n\n    var dueDateClassList =\n      \"col-2 text-right item-due-date font-small\" +\n      (isLate ? \" text-danger\" : \"\");\n\n    const rowClasses =\n      \"row justify-content-center pt-2 pb-2 pl-4 pr-1 align-items-center font-color todo-item\" +\n      (this.props.completed ? \" completed\" : \"\") +\n      (this.state.itemID === this.props.selectedItemID ? \" selected-item\" : \"\");\n\n    const rowBorderColor = getRowBorderColor(this.props.priority);\n\n    const titleInputClasses =\n      \"ml-2 title-input\" +\n      (this.state.itemID === this.props.selectedItemID\n        ? \" selected-item-input\"\n        : \"\");\n\n    if (!this.props.completed) console.log(\"in list item: \" + title);\n\n    return (\n      <div\n        className={rowClasses}\n        onClick={(e) => this.handleItemSelection(e)}\n        onContextMenu={(e) => this.handleItemSelection(e)}\n        style={{ borderColor: rowBorderColor }}\n      >\n        <div className=\"col-10 text-left\">\n          <input\n            className=\"form-check-input font-color\"\n            type=\"checkbox\"\n            value=\"\"\n            checked={completed}\n            onChange={this.handleCheck}\n          />\n          <input\n            spellCheck=\"false\"\n            className={titleInputClasses}\n            value={title}\n            ref={this.inputRef}\n            onKeyDown={(e) => this.handleKeyPress(e)}\n            onBlur={(e) => this.handleBlur(e)}\n            onChange={(e) => this.setState({ title: e.target.value })}\n          />\n        </div>\n\n        <div className={dueDateClassList}>{formattedDate}</div>\n      </div>\n    );\n  }\n}\n\nfunction formatDate(str) {\n  if (str === \"\") return \"\";\n  const today = new Date();\n  const currYear = today.getFullYear();\n\n  const monthAbbr = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  const year = parseInt(str.substring(0, 4));\n  const month = parseInt(str.substring(5, 7));\n  const day = parseInt(str.substring(8, 10));\n\n  var dateObj = new Date(year + \"-\" + month + \"-\" + day + \" 00:00\");\n\n  if (\n    dateObj.getFullYear() === today.getFullYear() &&\n    dateObj.getMonth() === today.getMonth()\n  ) {\n    var yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    var tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    if (dateObj.getDate() === today.getDate()) return \"Today\";\n    else if (dateObj.getDate() === yesterday.getDate()) return \"Yesterday\";\n    else if (dateObj.getDate() === tomorrow.getDate()) return \"Tomorrow\";\n  }\n\n  var formatted =\n    monthAbbr[month - 1] + \" \" + day + (currYear === year ? \"\" : \", \" + year);\n\n  return formatted;\n}\n\nfunction getIsLate(date) {\n  if (date === \"\") return false;\n  const today = new Date() - 1;\n  const d = new Date(date + \" 00:00\");\n\n  return d < today;\n}\n\nfunction getRowBorderColor(priority) {\n  if (priority === \"high\") return \"rgb(218, 56, 73)\";\n  else if (priority === \"medium\") return \"rgb(21, 127, 251)\";\n  else if (priority === \"low\") return \"rgb(37, 162, 183)\";\n}\n"]},"metadata":{},"sourceType":"module"}