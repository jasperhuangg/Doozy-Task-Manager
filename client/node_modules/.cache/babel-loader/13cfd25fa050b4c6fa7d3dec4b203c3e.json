{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/todolist/CalendarOverlay.js\";\nimport React, { Component } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nexport default class CalendarOverlay extends Component {\n  handleClear() {\n    this.props.handleCalendarOverlayClear();\n  }\n\n  render() {\n    var date = undefined;\n    if (this.props.currentlySelectedDate !== \"\") date = new Date(this.props.currentlySelectedDate + \" 00:00\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar-overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Calendar, {\n      selectedValue: date,\n      onChange: date => this.setDate(date),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary calendar-overlay-button\",\n      onClick: () => this.handleClear(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, \"Clear\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary  calendar-overlay-button\",\n      onClick: () => this.props.handleCalendarOverlayOK(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"OK\"))));\n  }\n\n  setDate(date) {\n    var formatted = formatDate(date);\n    this.props.setAddItemDate(formatted);\n  }\n\n}\n\nfunction formatDate(date) {\n  var day = date.getDate();\n  if (day < 10) day = \"0\" + day.toString();\n  var month = date.getMonth() + 1;\n  if (month < 10) month = \"0\" + month.toString();\n  var year = date.getFullYear().toString();\n  var formatted = year + \"-\" + month + \"-\" + day;\n  return formatted;\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/todolist/CalendarOverlay.js"],"names":["React","Component","Calendar","CalendarOverlay","handleClear","props","handleCalendarOverlayClear","render","date","undefined","currentlySelectedDate","Date","setDate","handleCalendarOverlayOK","formatted","formatDate","setAddItemDate","day","getDate","toString","month","getMonth","year","getFullYear"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,kCAAP;AAEA,eAAe,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AACrDG,EAAAA,WAAW,GAAG;AACZ,SAAKC,KAAL,CAAWC,0BAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,IAAI,GAAGC,SAAX;AAEA,QAAI,KAAKJ,KAAL,CAAWK,qBAAX,KAAqC,EAAzC,EACEF,IAAI,GAAG,IAAIG,IAAJ,CAAS,KAAKN,KAAL,CAAWK,qBAAX,GAAmC,QAA5C,CAAP;AAEF,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,aAAa,EAAEF,IADjB;AAEE,MAAA,QAAQ,EAAGA,IAAD,IAAU,KAAKI,OAAL,CAAaJ,IAAb,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,2CAFZ;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKJ,WAAL,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAUE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,0CAFZ;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWQ,uBAAX,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAVF,CALF,CADF;AA4BD;;AAEDD,EAAAA,OAAO,CAACJ,IAAD,EAAO;AACZ,QAAIM,SAAS,GAAGC,UAAU,CAACP,IAAD,CAA1B;AACA,SAAKH,KAAL,CAAWW,cAAX,CAA0BF,SAA1B;AACD;;AA5CoD;;AA+CvD,SAASC,UAAT,CAAoBP,IAApB,EAA0B;AACxB,MAAIS,GAAG,GAAGT,IAAI,CAACU,OAAL,EAAV;AACA,MAAID,GAAG,GAAG,EAAV,EAAcA,GAAG,GAAG,MAAMA,GAAG,CAACE,QAAJ,EAAZ;AAEd,MAAIC,KAAK,GAAGZ,IAAI,CAACa,QAAL,KAAkB,CAA9B;AACA,MAAID,KAAK,GAAG,EAAZ,EAAgBA,KAAK,GAAG,MAAMA,KAAK,CAACD,QAAN,EAAd;AAEhB,MAAIG,IAAI,GAAGd,IAAI,CAACe,WAAL,GAAmBJ,QAAnB,EAAX;AAEA,MAAIL,SAAS,GAAGQ,IAAI,GAAG,GAAP,GAAaF,KAAb,GAAqB,GAArB,GAA2BH,GAA3C;AAEA,SAAOH,SAAP;AACD","sourcesContent":["import React, { Component } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\n\nexport default class CalendarOverlay extends Component {\n  handleClear() {\n    this.props.handleCalendarOverlayClear();\n  }\n\n  render() {\n    var date = undefined;\n\n    if (this.props.currentlySelectedDate !== \"\")\n      date = new Date(this.props.currentlySelectedDate + \" 00:00\");\n\n    return (\n      <div className=\"calendar-overlay\">\n        <Calendar\n          selectedValue={date}\n          onChange={(date) => this.setDate(date)}\n        />\n        <div className=\"row mt-4\">\n          <div className=\"col-6\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary calendar-overlay-button\"\n              onClick={() => this.handleClear()}\n            >\n              Clear\n            </button>\n          </div>\n          <div className=\"col-6\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary  calendar-overlay-button\"\n              onClick={() => this.props.handleCalendarOverlayOK()}\n            >\n              OK\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  setDate(date) {\n    var formatted = formatDate(date);\n    this.props.setAddItemDate(formatted);\n  }\n}\n\nfunction formatDate(date) {\n  var day = date.getDate();\n  if (day < 10) day = \"0\" + day.toString();\n\n  var month = date.getMonth() + 1;\n  if (month < 10) month = \"0\" + month.toString();\n\n  var year = date.getFullYear().toString();\n\n  var formatted = year + \"-\" + month + \"-\" + day;\n\n  return formatted;\n}\n"]},"metadata":{},"sourceType":"module"}