{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport \"./App.css\"; // import $ from \"jquery\";\n\nimport Todolist from \"./todolist/Todolist.js\";\nimport Details from \"./todolist/Details.js\";\nimport Login from \"./todolist/Login.js\";\nimport Register from \"./todolist/Register.js\";\nimport Sidebar from \"./todolist/Sidebar.js\";\n\nvar ObjectID = require(\"bson-objectid\");\n\nconst cookies = new Cookies();\nconst domain = \"http://localhost:9000\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      error: null,\n      lists: [],\n      username: \"\",\n      currentlySelectedListIndex: 0,\n      currentlySelectedListName: \"\",\n      currentlySelectedItemID: \"\",\n      bgURL: \"\",\n      firstName: \"\",\n      lastName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // this will be where you check for the cookie\n    // if the cookie is valid, then\n    // this.setState({\n    //   loggedIn: \"successful\",\n    //   username: \"[whatever was in the cookie]\",\n    // });\n    var username = \"\";\n    var firstName = \"\";\n    var lastName = \"\";\n    var loggedIn = \"not yet\";\n\n    if (cookies.get(\"DoozyLogin\") !== undefined) {\n      username = cookies.get(\"DoozyLogin\").email;\n      firstName = cookies.get(\"DoozyLogin\").firstName;\n      lastName = cookies.get(\"DoozyLogin\").lastName;\n      loggedIn = \"successful\";\n    } // visit https://freeimage.host/ to host more background images\n\n\n    const backgroundURLs = [\"https://iili.io/J4xbBS.jpg\", \"https://iili.io/J4xtQ2.jpg\", \"https://iili.io/J4z92e.jpg\", \"https://iili.io/J4zdpj.jpg\", \"https://iili.io/J4zJkb.jpg\", \"https://iili.io/J4zWZl.jpg\", \"https://iili.io/J4Weln.jpg\", \"https://iili.io/J4WhoN.jpg\", \"https://iili.io/J4WwPt.jpg\", \"https://iili.io/J4WOKX.jpg\", \"https://iili.io/J4WUN4.jpg\", \"https://iili.io/J4WgDl.jpg\", \"https://iili.io/J4WSRf.jpg\", \"https://iili.io/J4WmDQ.jpg\", \"https://iili.io/J4X9WB.jpg\", \"https://iili.io/J4XHiP.jpg\", \"https://iili.io/J4WyxV.jpg\"];\n    var currBackground = Math.floor(Math.random() * Math.floor(backgroundURLs.length));\n    const bgURL = 'url(\"' + backgroundURLs[currBackground] + '\")';\n    this.setState({\n      bgURL: bgURL,\n      username: username,\n      firstName: firstName,\n      lastName: lastName,\n      loggedIn: \"successful\"\n    });\n  }\n\n  verifyLogin(username, password) {\n    const url = domain + \"/verifyLogin\";\n    const body = JSON.stringify({\n      username: username,\n      password: password\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      if (res.success) {\n        this.setState({\n          docTitle: \"Lists | Doozy\",\n          loggedIn: \"successful\",\n          username: username,\n          firstName: res.firstName,\n          lastName: res.lastName\n        });\n        this.getLists();\n      } else if (res.info === \"username does not exist\") this.setState({\n        loggedIn: \"username does not exist\"\n      });else if (res.info === \"incorrect password\") this.setState({\n        loggedIn: \"incorrect password\"\n      });\n    });\n  }\n\n  createAccount(email, firstName, lastName, password) {\n    if (email === \"\" || firstName === \"\" || lastName === \"\" || password === \"\") this.setState({\n      registered: \"empty field(s)\"\n    });else if (!ValidateEmail(email)) this.setState({\n      registered: \"invalid email\"\n    });else if (password.length < 6) this.setState({\n      registered: \"password length\"\n    });else {\n      const url = domain + \"/createAccount\";\n      const body = JSON.stringify({\n        username: email,\n        firstName: firstName,\n        lastName: lastName,\n        password: password\n      });\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: body\n      }).then(res => res.json()).then(res => {\n        if (res.success) {\n          console.log(\"register success!\");\n          this.setState({\n            docTitle: \"Lists | Doozy\",\n            loggedIn: \"successful\",\n            registered: \"successful\",\n            username: email,\n            firstName: firstName,\n            lastName: lastName\n          });\n          this.getLists(); // set a cookie\n\n          var aWeekFromNow = new Date();\n          aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n          cookies.set(\"DoozyLogin\", {\n            email: email,\n            firstName: firstName,\n            lastName: lastName\n          }, {\n            path: \"/\",\n            expires: aWeekFromNow\n          });\n        } else if (res.info === \"username already exists\") {\n          this.setState({\n            registered: \"username already exists\"\n          });\n          console.log(\"hit\");\n        }\n      });\n    }\n  }\n\n  setSelectedItem(itemID) {\n    this.setState({\n      currentlySelectedItemID: itemID\n    });\n  }\n\n  setSelectedList(listName) {\n    this.setState({\n      currentlySelectedListName: listName\n    });\n  }\n\n  verifyCookie() {}\n\n  toggleLoginRegister() {\n    if (this.state.loginOrRegister === \"login\") this.setState({\n      docTitle: \"Sign Up | Doozy\",\n      loginOrRegister: \"register\"\n    });else if (this.state.loginOrRegister === \"register\") this.setState({\n      docTitle: \"Log In | Doozy\",\n      loginOrRegister: \"login\"\n    });\n  }\n\n  getCurrentlySelectedItem() {\n    if (this.state.currentlySelectedItemID === \"\") return {\n      title: \"\",\n      description: \"\",\n      dueDate: \"\",\n      priority: \"\",\n      completed: false,\n      itemID: \"\"\n    };\n    var items = this.state.lists.slice(this.state.currentlySelectedListIndex)[0].items;\n\n    for (let i = 0; i < items.length; i++) if (items[i].itemID === this.state.currentlySelectedItemID) return items[i];\n  } // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n\n\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: this.state.username\n      /*this.props.username*/\n\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      var lists = res;\n      this.setState({\n        lists: lists,\n        currentlySelectedListName: lists[0].name\n      });\n    });\n  }\n\n  addListItem(listName, title, dueDate, description, priority) {\n    const lists = this.state.lists.slice();\n    var id = null;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        var item = {\n          title: title,\n          description: description,\n          dueDate: dueDate,\n          priority: priority,\n          completed: false,\n          itemID: new ObjectID().toString()\n        };\n        items.push(item);\n        id = item.itemID;\n        items.sort(sortListItems);\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: id\n    });\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n      itemID: id\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  deleteListItem(listName, itemID) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        var items = lists[i].items;\n        var idx = -1;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            idx = j;\n            break;\n          }\n        }\n\n        items = items.splice(idx, 1);\n      }\n    }\n\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: \"\"\n    });\n    const url = domain + \"/deleteListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.text());\n  }\n\n  setItemTitle(listName, itemID, title) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].title = title;\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemTitle\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      title: title\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.text());\n  }\n\n  setItemCompleted(listName, itemID, completed) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].completed = completed;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemCompleted\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      completed: completed\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setListName(oldListName, newListName) {}\n\n  setItemDueDate(listName, itemID, dueDate) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].dueDate = dueDate;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemDueDate\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      dueDate: dueDate\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setItemPriority(listName, itemID, priority) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].priority = priority;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemPriority\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      priority: priority\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setItemDescription(listName, itemID, description) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].description = description;\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemDescription\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      description: description\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  render() {\n    document.title = this.state.docTitle;\n    const listArr = this.state.lists.slice(this.state.currentlySelectedListIndex, 1);\n    const selectedItem = this.getCurrentlySelectedItem();\n    const appClasses = \"row align-items-center\" + (this.state.loggedIn === \"successful\" ? \"\" : \" d-none\");\n    const loginRegClasses = \"container-fluid align-items-center\" + (this.state.loggedIn === \"successful\" ? \" d-none\" : \" d-flex \");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login-register\",\n      style: {\n        backgroundImage: this.state.bgURL\n      },\n      className: loginRegClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-section\" + (this.state.loginOrRegister === \"login\" ? \"\" : \" d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      loginInfo: this.state.loggedIn,\n      verifyLogin: (username, password) => this.verifyLogin(username, password),\n      switchToRegister: () => this.toggleLoginRegister(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-section\" + (this.state.loginOrRegister === \"register\" ? \"\" : \" d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Register, {\n      switchToLogin: () => this.toggleLoginRegister(),\n      createAccount: (email, fName, lName, password) => this.createAccount(email, fName, lName, password),\n      registerInfo: this.state.registered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"app\",\n      style: {\n        backgroundImage: this.state.bgURL\n      },\n      className: appClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sidebar\",\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      lists: this.state.lists,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      currentlySelectedListName: this.state.currentlySelectedListName,\n      setSelectedList: listName => this.setSelectedList(listName),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 13\n      }\n    })), listArr.map((list, i) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: list.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"todolist\",\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Todolist, {\n        color: list.color,\n        name: list.name,\n        items: list.items,\n        addListItem: (listName, title, dueDate, description, priority) => this.addListItem(listName, title, dueDate, description, priority),\n        deleteListItem: (listName, itemID) => this.deleteListItem(listName, itemID),\n        setItemTitle: (listName, itemID, title) => this.setItemTitle(listName, itemID, title),\n        setItemCompleted: (listName, itemID, completed) => this.setItemCompleted(listName, itemID, completed),\n        setSelectedItem: itemID => this.setSelectedItem(itemID),\n        selectedItemID: this.state.currentlySelectedItemID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"details\",\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Details, {\n        listName: list.name,\n        selectedItemID: selectedItem.itemID,\n        selectedItemTitle: selectedItem.title,\n        selectedItemDueDate: selectedItem.dueDate,\n        selectedItemDescription: selectedItem.description,\n        selectedItemPriority: selectedItem.priority,\n        selectedItemCompleted: selectedItem.completed,\n        setItemTitle: (listName, itemID, title) => this.setItemTitle(listName, itemID, title),\n        setItemCompleted: (listName, itemID, completed) => this.setItemCompleted(listName, itemID, completed),\n        setItemDueDate: (listName, itemID, dueDate) => this.setItemDueDate(listName, itemID, dueDate),\n        setItemPriority: (listName, itemID, priority) => this.setItemPriority(listName, itemID, priority),\n        setItemDescription: (listName, itemID, description) => this.setItemDescription(listName, itemID, description),\n        handleDelete: (listName, itemID) => this.deleteListItem(listName, itemID),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"toolbar\",\n        className: \"pl-2 pr-2 h-25 row justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-cogs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-hand-sparkles\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-sign-out-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 21\n        }\n      }))));\n    })));\n  }\n\n}\n\nfunction sortListItems(a, b) {\n  if (a.completed && !b.completed) return 1;else if (!a.completed && b.completed) return -1;else if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;else {\n    // both are either completed or incomplete or have a due date set or no due date set\n    if (a.dueDate === b.dueDate) {\n      // sort items due on the same day by priority\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n      if (priorityA !== priorityB) return priorityB - priorityA;else {\n        // sort by itemID\n        const itemIDA = a.itemID;\n        const itemIDB = b.itemID;\n        return itemIDA - itemIDB;\n      }\n    } else {\n      // sort items based on date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      return dateA - dateB;\n    }\n  }\n}\n\nfunction ValidateEmail(mail) {\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js"],"names":["React","Component","Cookies","Todolist","Details","Login","Register","Sidebar","ObjectID","require","cookies","domain","App","constructor","props","state","docTitle","loggedIn","registered","loginOrRegister","error","lists","username","currentlySelectedListIndex","currentlySelectedListName","currentlySelectedItemID","bgURL","firstName","lastName","componentDidMount","get","undefined","email","backgroundURLs","currBackground","Math","floor","random","length","setState","verifyLogin","password","url","body","JSON","stringify","fetch","method","headers","then","res","json","success","getLists","info","createAccount","ValidateEmail","console","log","aWeekFromNow","Date","setDate","getDate","set","path","expires","setSelectedItem","itemID","setSelectedList","listName","verifyCookie","toggleLoginRegister","getCurrentlySelectedItem","title","description","dueDate","priority","completed","items","slice","i","name","addListItem","id","item","toString","push","sort","sortListItems","deleteListItem","idx","j","splice","text","setItemTitle","setItemCompleted","setListName","oldListName","newListName","setItemDueDate","setItemPriority","setItemDescription","render","document","listArr","selectedItem","appClasses","loginRegClasses","backgroundImage","fName","lName","map","list","color","a","b","priorities","priorityA","indexOf","priorityB","itemIDA","itemIDB","dateA","dateB","mail","test"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport \"./App.css\";\n\n// import $ from \"jquery\";\n\nimport Todolist from \"./todolist/Todolist.js\";\nimport Details from \"./todolist/Details.js\";\nimport Login from \"./todolist/Login.js\";\nimport Register from \"./todolist/Register.js\";\nimport Sidebar from \"./todolist/Sidebar.js\";\n\nvar ObjectID = require(\"bson-objectid\");\nconst cookies = new Cookies();\n\nconst domain = \"http://localhost:9000\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      error: null,\n      lists: [],\n      username: \"\",\n      currentlySelectedListIndex: 0,\n      currentlySelectedListName: \"\",\n      currentlySelectedItemID: \"\",\n      bgURL: \"\",\n      firstName: \"\",\n      lastName: \"\",\n    };\n  }\n\n  componentDidMount() {\n    // this will be where you check for the cookie\n    // if the cookie is valid, then\n    // this.setState({\n    //   loggedIn: \"successful\",\n    //   username: \"[whatever was in the cookie]\",\n    // });\n\n    var username = \"\";\n    var firstName = \"\";\n    var lastName = \"\";\n    var loggedIn = \"not yet\";\n    if (cookies.get(\"DoozyLogin\") !== undefined) {\n      username = cookies.get(\"DoozyLogin\").email;\n      firstName = cookies.get(\"DoozyLogin\").firstName;\n      lastName = cookies.get(\"DoozyLogin\").lastName;\n      loggedIn = \"successful\";\n    }\n    // visit https://freeimage.host/ to host more background images\n    const backgroundURLs = [\n      \"https://iili.io/J4xbBS.jpg\",\n      \"https://iili.io/J4xtQ2.jpg\",\n      \"https://iili.io/J4z92e.jpg\",\n      \"https://iili.io/J4zdpj.jpg\",\n      \"https://iili.io/J4zJkb.jpg\",\n      \"https://iili.io/J4zWZl.jpg\",\n      \"https://iili.io/J4Weln.jpg\",\n      \"https://iili.io/J4WhoN.jpg\",\n      \"https://iili.io/J4WwPt.jpg\",\n      \"https://iili.io/J4WOKX.jpg\",\n      \"https://iili.io/J4WUN4.jpg\",\n      \"https://iili.io/J4WgDl.jpg\",\n      \"https://iili.io/J4WSRf.jpg\",\n      \"https://iili.io/J4WmDQ.jpg\",\n      \"https://iili.io/J4X9WB.jpg\",\n      \"https://iili.io/J4XHiP.jpg\",\n      \"https://iili.io/J4WyxV.jpg\",\n    ];\n    var currBackground = Math.floor(\n      Math.random() * Math.floor(backgroundURLs.length)\n    );\n\n    const bgURL = 'url(\"' + backgroundURLs[currBackground] + '\")';\n\n    this.setState({\n      bgURL: bgURL,\n      username: username,\n      firstName: firstName,\n      lastName: lastName,\n      loggedIn: \"successful\",\n    });\n  }\n\n  verifyLogin(username, password) {\n    const url = domain + \"/verifyLogin\";\n    const body = JSON.stringify({\n      username: username,\n      password: password,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.success) {\n          this.setState({\n            docTitle: \"Lists | Doozy\",\n            loggedIn: \"successful\",\n            username: username,\n            firstName: res.firstName,\n            lastName: res.lastName,\n          });\n          this.getLists();\n        } else if (res.info === \"username does not exist\")\n          this.setState({ loggedIn: \"username does not exist\" });\n        else if (res.info === \"incorrect password\")\n          this.setState({ loggedIn: \"incorrect password\" });\n      });\n  }\n\n  createAccount(email, firstName, lastName, password) {\n    if (email === \"\" || firstName === \"\" || lastName === \"\" || password === \"\")\n      this.setState({ registered: \"empty field(s)\" });\n    else if (!ValidateEmail(email))\n      this.setState({ registered: \"invalid email\" });\n    else if (password.length < 6)\n      this.setState({ registered: \"password length\" });\n    else {\n      const url = domain + \"/createAccount\";\n      const body = JSON.stringify({\n        username: email,\n        firstName: firstName,\n        lastName: lastName,\n        password: password,\n      });\n\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: body,\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          if (res.success) {\n            console.log(\"register success!\");\n            this.setState({\n              docTitle: \"Lists | Doozy\",\n              loggedIn: \"successful\",\n              registered: \"successful\",\n              username: email,\n              firstName: firstName,\n              lastName: lastName,\n            });\n            this.getLists();\n            // set a cookie\n            var aWeekFromNow = new Date();\n            aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n            cookies.set(\n              \"DoozyLogin\",\n              { email: email, firstName: firstName, lastName: lastName },\n              {\n                path: \"/\",\n                expires: aWeekFromNow,\n              }\n            );\n          } else if (res.info === \"username already exists\") {\n            this.setState({ registered: \"username already exists\" });\n            console.log(\"hit\");\n          }\n        });\n    }\n  }\n\n  setSelectedItem(itemID) {\n    this.setState({ currentlySelectedItemID: itemID });\n  }\n\n  setSelectedList(listName) {\n    this.setState({ currentlySelectedListName: listName });\n  }\n\n  verifyCookie() {}\n\n  toggleLoginRegister() {\n    if (this.state.loginOrRegister === \"login\")\n      this.setState({\n        docTitle: \"Sign Up | Doozy\",\n        loginOrRegister: \"register\",\n      });\n    else if (this.state.loginOrRegister === \"register\")\n      this.setState({\n        docTitle: \"Log In | Doozy\",\n        loginOrRegister: \"login\",\n      });\n  }\n\n  getCurrentlySelectedItem() {\n    if (this.state.currentlySelectedItemID === \"\")\n      return {\n        title: \"\",\n        description: \"\",\n        dueDate: \"\",\n        priority: \"\",\n        completed: false,\n        itemID: \"\",\n      };\n\n    var items = this.state.lists.slice(this.state.currentlySelectedListIndex)[0]\n      .items;\n\n    for (let i = 0; i < items.length; i++)\n      if (items[i].itemID === this.state.currentlySelectedItemID)\n        return items[i];\n  }\n\n  // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: this.state.username /*this.props.username*/,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        var lists = res;\n        this.setState({\n          lists: lists,\n          currentlySelectedListName: lists[0].name,\n        });\n      });\n  }\n\n  addListItem(listName, title, dueDate, description, priority) {\n    const lists = this.state.lists.slice();\n    var id = null;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        var item = {\n          title: title,\n          description: description,\n          dueDate: dueDate,\n          priority: priority,\n          completed: false,\n          itemID: new ObjectID().toString(),\n        };\n        items.push(item);\n        id = item.itemID;\n        items.sort(sortListItems);\n        break;\n      }\n    }\n\n    this.setState({ lists: lists, currentlySelectedItemID: id });\n\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n      itemID: id,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  deleteListItem(listName, itemID) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        var items = lists[i].items;\n        var idx = -1;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            idx = j;\n            break;\n          }\n        }\n        items = items.splice(idx, 1);\n      }\n    }\n\n    this.setState({ lists: lists, currentlySelectedItemID: \"\" });\n\n    const url = domain + \"/deleteListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    }).then((res) => res.text());\n  }\n\n  setItemTitle(listName, itemID, title) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].title = title;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemTitle\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      title: title,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    }).then((res) => res.text());\n  }\n\n  setItemCompleted(listName, itemID, completed) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].completed = completed;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemCompleted\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      completed: completed,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setListName(oldListName, newListName) {}\n\n  setItemDueDate(listName, itemID, dueDate) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].dueDate = dueDate;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemDueDate\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      dueDate: dueDate,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setItemPriority(listName, itemID, priority) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].priority = priority;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemPriority\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      priority: priority,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setItemDescription(listName, itemID, description) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].description = description;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemDescription\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      description: description,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  render() {\n    document.title = this.state.docTitle;\n\n    const listArr = this.state.lists.slice(\n      this.state.currentlySelectedListIndex,\n      1\n    );\n\n    const selectedItem = this.getCurrentlySelectedItem();\n    const appClasses =\n      \"row align-items-center\" +\n      (this.state.loggedIn === \"successful\" ? \"\" : \" d-none\");\n    const loginRegClasses =\n      \"container-fluid align-items-center\" +\n      (this.state.loggedIn === \"successful\" ? \" d-none\" : \" d-flex \");\n\n    return (\n      <>\n        <div\n          id=\"login-register\"\n          style={{ backgroundImage: this.state.bgURL }}\n          className={loginRegClasses}\n        >\n          <div\n            className={\n              \"login-section\" +\n              (this.state.loginOrRegister === \"login\" ? \"\" : \" d-none\")\n            }\n          >\n            <Login\n              loginInfo={this.state.loggedIn}\n              verifyLogin={(username, password) =>\n                this.verifyLogin(username, password)\n              }\n              switchToRegister={() => this.toggleLoginRegister()}\n            />\n          </div>\n          <div\n            className={\n              \"register-section\" +\n              (this.state.loginOrRegister === \"register\" ? \"\" : \" d-none\")\n            }\n          >\n            <Register\n              switchToLogin={() => this.toggleLoginRegister()}\n              createAccount={(email, fName, lName, password) =>\n                this.createAccount(email, fName, lName, password)\n              }\n              registerInfo={this.state.registered}\n            />\n          </div>\n        </div>\n        <div\n          id=\"app\"\n          style={{ backgroundImage: this.state.bgURL }}\n          className={appClasses}\n        >\n          <div id=\"sidebar\" className=\"p-0\">\n            <Sidebar\n              lists={this.state.lists}\n              firstName={this.state.firstName}\n              lastName={this.state.lastName}\n              currentlySelectedListName={this.state.currentlySelectedListName}\n              setSelectedList={(listName) => this.setSelectedList(listName)}\n            />\n          </div>\n          {listArr.map((list, i) => {\n            return (\n              <React.Fragment key={list.name}>\n                <div id=\"todolist\" className=\"col-5\">\n                  <Todolist\n                    color={list.color}\n                    name={list.name}\n                    items={list.items}\n                    addListItem={(\n                      listName,\n                      title,\n                      dueDate,\n                      description,\n                      priority\n                    ) =>\n                      this.addListItem(\n                        listName,\n                        title,\n                        dueDate,\n                        description,\n                        priority\n                      )\n                    }\n                    deleteListItem={(listName, itemID) =>\n                      this.deleteListItem(listName, itemID)\n                    }\n                    setItemTitle={(listName, itemID, title) =>\n                      this.setItemTitle(listName, itemID, title)\n                    }\n                    setItemCompleted={(listName, itemID, completed) =>\n                      this.setItemCompleted(listName, itemID, completed)\n                    }\n                    setSelectedItem={(itemID) => this.setSelectedItem(itemID)}\n                    selectedItemID={this.state.currentlySelectedItemID}\n                  />\n                </div>\n                <div id=\"details\" className=\"col-4\">\n                  <Details\n                    listName={list.name}\n                    selectedItemID={selectedItem.itemID}\n                    selectedItemTitle={selectedItem.title}\n                    selectedItemDueDate={selectedItem.dueDate}\n                    selectedItemDescription={selectedItem.description}\n                    selectedItemPriority={selectedItem.priority}\n                    selectedItemCompleted={selectedItem.completed}\n                    setItemTitle={(listName, itemID, title) =>\n                      this.setItemTitle(listName, itemID, title)\n                    }\n                    setItemCompleted={(listName, itemID, completed) =>\n                      this.setItemCompleted(listName, itemID, completed)\n                    }\n                    setItemDueDate={(listName, itemID, dueDate) =>\n                      this.setItemDueDate(listName, itemID, dueDate)\n                    }\n                    setItemPriority={(listName, itemID, priority) =>\n                      this.setItemPriority(listName, itemID, priority)\n                    }\n                    setItemDescription={(listName, itemID, description) =>\n                      this.setItemDescription(listName, itemID, description)\n                    }\n                    handleDelete={(listName, itemID) =>\n                      this.deleteListItem(listName, itemID)\n                    }\n                  />\n                </div>\n                <div\n                  id=\"toolbar\"\n                  className=\"pl-2 pr-2 h-25 row justify-content-center\"\n                >\n                  <div className=\"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\">\n                    <i className=\"fas fa-cogs\"></i>\n                  </div>\n                  <div className=\"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\">\n                    <i className=\"fas fa-hand-sparkles\"></i>\n                  </div>\n                  <div className=\"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\">\n                    <i className=\"fas fa-sign-out-alt\"></i>\n                  </div>\n                </div>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction sortListItems(a, b) {\n  if (a.completed && !b.completed) return 1;\n  else if (!a.completed && b.completed) return -1;\n  else if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;\n  else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;\n  else {\n    // both are either completed or incomplete or have a due date set or no due date set\n    if (a.dueDate === b.dueDate) {\n      // sort items due on the same day by priority\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n\n      if (priorityA !== priorityB) return priorityB - priorityA;\n      else {\n        // sort by itemID\n        const itemIDA = a.itemID;\n        const itemIDB = b.itemID;\n        return itemIDA - itemIDB;\n      }\n    } else {\n      // sort items based on date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      return dateA - dateB;\n    }\n  }\n}\n\nfunction ValidateEmail(mail) {\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\n    return true;\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}