{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Todolist from \"./todolist/Todolist.js\";\nconst domain = \"http://localhost:9000\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: \"\",\n      isLoaded: false,\n      error: null,\n      lists: []\n    };\n  } // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n\n\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: \"Jasper\"\n      /*this.props.username*/\n\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      console.log(res);\n      this.setState({\n        isLoaded: true,\n        lists: res\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    })).catch(err => err);\n  }\n\n  componentDidMount() {\n    this.getLists();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, this.state.lists.map((list, i) => /*#__PURE__*/React.createElement(Todolist, {\n      key: i,\n      color: list.color,\n      name: list.name,\n      items: list.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js"],"names":["React","Component","Todolist","domain","App","constructor","props","state","apiResponse","isLoaded","error","lists","getLists","url","body","JSON","stringify","username","fetch","method","headers","then","res","json","console","log","setState","callAPI","text","catch","err","componentDidMount","render","map","list","i","color","name","items"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,MAAMC,MAAM,GAAG,uBAAf;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,QAAQ,EAAE,KAA7B;AAAoCC,MAAAA,KAAK,EAAE,IAA3C;AAAiDC,MAAAA,KAAK,EAAE;AAAxD,KAAb;AACD,GAJwC,CAMzC;AACA;;;AACAC,EAAAA,QAAQ,GAAG;AACT,UAAMC,GAAG,GAAGV,MAAM,GAAG,WAArB;AACA,UAAMW,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BC,MAAAA,QAAQ,EAAE;AAAS;;AADO,KAAf,CAAb;AAIAC,IAAAA,KAAK,CAACL,GAAD,EAAM;AACTM,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT,CAEP;;AAFO,OAFA;AAMTN,MAAAA,IAAI,EAAEA;AANG,KAAN,CAAL,CAQGO,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CAUKC,GAAD,IAAS;AACPE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,WAAKI,QAAL,CAAc;AAAEjB,QAAAA,QAAQ,EAAE,IAAZ;AAAkBE,QAAAA,KAAK,EAAEW;AAAzB,OAAd;AACD,KAbL,EAcKZ,KAAD,IAAW;AACT,WAAKgB,QAAL,CAAc;AACZjB,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA;AAFY,OAAd;AAID,KAnBL;AAqBD;;AAEDiB,EAAAA,OAAO,GAAG;AACRT,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGG,IADH,CACSC,GAAD,IAASA,GAAG,CAACM,IAAJ,EADjB,EAEGP,IAFH,CAESC,GAAD,IAAS,KAAKI,QAAL,CAAc;AAAElB,MAAAA,WAAW,EAAEc;AAAf,KAAd,CAFjB,EAGGO,KAHH,CAGUC,GAAD,IAASA,GAHlB;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKnB,QAAL;AACD;;AAEDoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKzB,KAAL,CAAWI,KAAX,CAAiBsB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,CAAP,kBACpB,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,MAAA,IAAI,EAAEF,IAAI,CAACG,IAHb;AAIE,MAAA,KAAK,EAAEH,IAAI,CAACI,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF,CADF;AAcD;;AA/DwC","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Todolist from \"./todolist/Todolist.js\";\n\nconst domain = \"http://localhost:9000\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { apiResponse: \"\", isLoaded: false, error: null, lists: [] };\n  }\n\n  // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: \"Jasper\" /*this.props.username*/,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then(\n        (res) => {\n          console.log(res);\n          this.setState({ isLoaded: true, lists: res });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\")\n      .then((res) => res.text())\n      .then((res) => this.setState({ apiResponse: res }))\n      .catch((err) => err);\n  }\n\n  componentDidMount() {\n    this.getLists();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ul>\n          {this.state.lists.map((list, i) => (\n            <Todolist\n              key={i}\n              color={list.color}\n              name={list.name}\n              items={list.items}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}