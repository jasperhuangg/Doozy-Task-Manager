{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/AddListOverlay.js\";\nimport React, { Component } from \"react\";\nexport default class AddListOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedColor: \"\",\n      listName: \"\",\n      listNameExists: false\n    };\n  }\n\n  selectColor(e) {\n    const color = e.currentTarget.dataset.color;\n    console.log(color);\n    this.setState({\n      selectedColor: color\n    });\n  }\n\n  handleSubmit() {\n    const listName = this.state.listName;\n    const color = this.state.selectedColor;\n    console.log(\"hit\");\n    if (listNameExists(this.props.lists, listName)) this.setState({\n      listNameExists: true\n    });else {// call create list function\n    }\n  }\n\n  render() {\n    const colors = [\"#FDC5F5\", \"#861388\", \"#5E0B15\", \"#e01e37\", \"#EF476F\", \"#FFD166\", \"#fb5607\", \"#ffcdb2\", \"#8cb369\", \"#29BF12\", \"#06EFB1\", \"#0496FF\", \"#5390d9\", \"#023e7d\", \"#5448C8\", \"#131200\", \"#d9d9d9\"];\n    const classes = \"add-list-overlay shadow font-grey p-4\" + (this.props.displaying ? \" add-list-overlay-displayed\" : \"\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Add List\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"add-list-title-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"add-list-title-input\",\n      className: \"form-control form-control-sm\",\n      ref: this.props.addListTitleRef,\n      onChange: e => {\n        this.setState({\n          listName: e.currentTarget.value,\n          listNameExists: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-danger\" + (this.state.listNameExists ? \"\" : \" invisible\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"List name already exists.\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"add-list-color-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Color\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, colors.map((color, index) => {\n      return /*#__PURE__*/React.createElement(\"i\", {\n        key: color,\n        className: \"fa fa-circle add-list-overlay-color\" + (this.state.selectedColor === color ? \" add-list-overlay-color-selected\" : \"\"),\n        style: {\n          color: color\n        },\n        \"data-color\": color,\n        onClick: e => this.selectColor(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mt-5 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-secondary mr-2 px-3\",\n      style: {\n        borderRadius: \"5px\"\n      },\n      onClick: () => {\n        this.setState({\n          selectedColor: \"\",\n          listName: \"\",\n          listNameExists: false\n        });\n        this.props.hideOverlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary ml-2 px-3\",\n      style: {\n        borderRadius: \"5px\"\n      },\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Save\")));\n  }\n\n}\n\nfunction listNameExists(lists, listName) {\n  for (let i = 0; i < lists.length; i++) if (lists.name === listName) return true;\n\n  return false;\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/AddListOverlay.js"],"names":["React","Component","AddListOverlay","constructor","props","state","selectedColor","listName","listNameExists","selectColor","e","color","currentTarget","dataset","console","log","setState","handleSubmit","lists","render","colors","classes","displaying","addListTitleRef","value","map","index","borderRadius","hideOverlay","i","length","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class AddListOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selectedColor: \"\", listName: \"\", listNameExists: false };\n  }\n\n  selectColor(e) {\n    const color = e.currentTarget.dataset.color;\n    console.log(color);\n    this.setState({ selectedColor: color });\n  }\n\n  handleSubmit() {\n    const listName = this.state.listName;\n    const color = this.state.selectedColor;\n\n    console.log(\"hit\");\n\n    if (listNameExists(this.props.lists, listName))\n      this.setState({ listNameExists: true });\n    else {\n      // call create list function\n    }\n  }\n\n  render() {\n    const colors = [\n      \"#FDC5F5\",\n      \"#861388\",\n      \"#5E0B15\",\n      \"#e01e37\",\n      \"#EF476F\",\n      \"#FFD166\",\n      \"#fb5607\",\n      \"#ffcdb2\",\n      \"#8cb369\",\n      \"#29BF12\",\n      \"#06EFB1\",\n      \"#0496FF\",\n      \"#5390d9\",\n      \"#023e7d\",\n      \"#5448C8\",\n      \"#131200\",\n      \"#d9d9d9\",\n    ];\n\n    const classes =\n      \"add-list-overlay shadow font-grey p-4\" +\n      (this.props.displaying ? \" add-list-overlay-displayed\" : \"\");\n    return (\n      <div className={classes}>\n        <div className=\"text-center\">\n          <h5>Add List</h5>\n        </div>\n        <label htmlFor=\"add-list-title-input\">Title</label>\n        <input\n          id=\"add-list-title-input\"\n          className=\"form-control form-control-sm\"\n          ref={this.props.addListTitleRef}\n          onChange={(e) => {\n            this.setState({\n              listName: e.currentTarget.value,\n              listNameExists: false,\n            });\n          }}\n        />\n        <small\n          className={\n            \"text-danger\" + (this.state.listNameExists ? \"\" : \" invisible\")\n          }\n        >\n          List name already exists.\n        </small>\n        <br />\n\n        <label htmlFor=\"add-list-color-input\">Color</label>\n\n        <div className=\"d-flex justify-content-around\">\n          {colors.map((color, index) => {\n            return (\n              <i\n                key={color}\n                className={\n                  \"fa fa-circle add-list-overlay-color\" +\n                  (this.state.selectedColor === color\n                    ? \" add-list-overlay-color-selected\"\n                    : \"\")\n                }\n                style={{ color: color }}\n                data-color={color}\n                onClick={(e) => this.selectColor(e)}\n              />\n            );\n          })}\n        </div>\n        <div className=\"d-flex justify-content-center mt-5 pb-2\">\n          <button\n            className=\"btn btn-sm btn-secondary mr-2 px-3\"\n            style={{ borderRadius: \"5px\" }}\n            onClick={() => {\n              this.setState({\n                selectedColor: \"\",\n                listName: \"\",\n                listNameExists: false,\n              });\n              this.props.hideOverlay();\n            }}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"btn btn-sm btn-primary ml-2 px-3\"\n            style={{ borderRadius: \"5px\" }}\n            onClick={() => this.handleSubmit()}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction listNameExists(lists, listName) {\n  for (let i = 0; i < lists.length; i++)\n    if (lists.name === listName) return true;\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}