{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport \"./App.css\";\nimport $ from \"jquery\";\nimport Todolist from \"./todolist/Todolist.js\";\nimport Details from \"./todolist/Details.js\";\nimport Login from \"./todolist/Login.js\";\nimport Register from \"./todolist/Register.js\";\nimport Sidebar from \"./todolist/Sidebar.js\";\nimport Notification from \"./todolist/Notification.js\";\nimport Toolbar from \"./todolist/Toolbar.js\";\nimport AddListOverlay from \"./todolist/AddListOverlay.js\";\nimport EditListOverlay from \"./todolist/EditListOverlay.js\";\n\nvar ObjectID = require(\"bson-objectid\");\n\nconst cookies = new Cookies();\nconst domain = \"http://localhost:9000\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      lists: [],\n      username: \"\",\n      currentlySelectedListIndex: 0,\n      currentlySelectedListName: \"\",\n      currentlySelectedItemID: \"\",\n      bgURL: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      loaded: false,\n      notificationDisplaying: false,\n      lastDeletedItem: {},\n      lastDeletedItemListName: \"\",\n      addListOverlayDisplaying: false,\n      editListOverlayDisplaying: false,\n      editListName: \"\",\n      editListColor: \"\"\n    };\n    this.addListTitleRef = React.createRef();\n    this.editListTitleRef = React.createRef();\n  }\n\n  componentDidMount() {\n    var username = \"\";\n    var firstName = \"\";\n    var lastName = \"\";\n    var loggedIn = \"not yet\";\n    var docTitle = this.state.docTitle;\n\n    if (cookies.get(\"DoozyLogin\") !== undefined) {\n      username = cookies.get(\"DoozyLogin\").email;\n      firstName = cookies.get(\"DoozyLogin\").firstName;\n      lastName = cookies.get(\"DoozyLogin\").lastName;\n      loggedIn = \"successful\"; // extend the expiration date of the cookie\n\n      var aWeekFromNow = new Date();\n      aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n      cookies.set(\"DoozyLogin\", {\n        email: username,\n        firstName: firstName,\n        lastName: lastName\n      }, {\n        path: \"/\",\n        expires: aWeekFromNow\n      });\n      docTitle = \"Lists | Doozy\";\n    }\n\n    const bgURL = getRandomBGURL();\n    this.setState({\n      bgURL: bgURL,\n      username: username,\n      firstName: firstName,\n      lastName: lastName,\n      loggedIn: loggedIn,\n      docTitle: docTitle\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.loaded === false && this.state.loggedIn === \"successful\") {\n      this.setState({\n        loaded: true\n      });\n      this.getLists();\n    }\n  }\n\n  verifyLogin(username, password, authType) {\n    const url = domain + \"/verifyLogin\";\n    const body = JSON.stringify({\n      username: username,\n      password: password,\n      authType: authType\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      if (res.success) {\n        this.setState({\n          docTitle: \"Lists | Doozy\",\n          loggedIn: \"successful\",\n          username: username,\n          firstName: res.firstName,\n          lastName: res.lastName\n        });\n        this.getLists(); // set a cookie\n\n        var aWeekFromNow = new Date();\n        aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n        cookies.set(\"DoozyLogin\", {\n          email: username,\n          firstName: res.firstName,\n          lastName: res.lastName\n        }, {\n          path: \"/\",\n          expires: aWeekFromNow\n        });\n      } else if (res.info === \"username does not exist\") this.setState({\n        loggedIn: \"username does not exist\"\n      });else if (res.info === \"auth type\") this.setState({\n        loggedIn: \"auth type\"\n      });else if (res.info === \"incorrect password\") this.setState({\n        loggedIn: \"incorrect password\"\n      });\n    });\n  }\n\n  createAccount(email, firstName, lastName, password, authType) {\n    if (email === \"\" || firstName === \"\" || lastName === \"\" || password === \"\") this.setState({\n      registered: \"empty field(s)\"\n    });else if (!ValidateEmail(email)) this.setState({\n      registered: \"invalid email\"\n    });else if (password.length < 6) this.setState({\n      registered: \"password length\"\n    });else {\n      const url = domain + \"/createAccount\";\n      const body = JSON.stringify({\n        username: email,\n        firstName: firstName,\n        lastName: lastName,\n        password: password,\n        authType: authType\n      });\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: body\n      }).then(res => res.json()).then(res => {\n        if (res.success) {\n          this.setState({\n            docTitle: \"Lists | Doozy\",\n            loggedIn: \"successful\",\n            registered: \"successful\",\n            username: email,\n            firstName: firstName,\n            lastName: lastName\n          });\n          this.getLists(); // set a cookie\n\n          var aWeekFromNow = new Date();\n          aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n          cookies.set(\"DoozyLogin\", {\n            email: email,\n            firstName: firstName,\n            lastName: lastName\n          }, {\n            path: \"/\",\n            expires: aWeekFromNow\n          });\n        } else if (res.info === \"username already exists\") {\n          this.setState({\n            registered: \"username already exists\"\n          });\n        }\n      });\n    }\n  }\n\n  deleteAllCompletedItems() {\n    var lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      var items = lists[i].items;\n      var firstCompletedIndex = 0;\n\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].completed) {\n          firstCompletedIndex = j;\n          break;\n        }\n      }\n\n      items = items.slice(0, firstCompletedIndex);\n    }\n\n    this.setState({\n      lists: lists\n    });\n    console.log(this.state.username);\n    const url = domain + \"/deleteCompletedItems\";\n    const body = JSON.stringify({\n      username: this.state.username\n    });\n    console.log(body);\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.text()).then(res => {\n      console.log(res);\n    });\n  }\n\n  setSelectedItem(itemID) {\n    this.setState({\n      currentlySelectedItemID: itemID,\n      addListOverlayDisplaying: false\n    });\n  }\n\n  setSelectedList(listName) {\n    var index;\n    if (listName === \"Today\") index = this.state.lists.length - 3;\n    if (listName === \"Next 7 Days\") index = this.state.lists.length - 2;\n    if (listName === \"All\") index = this.state.lists.length - 1;else {\n      for (let i = 0; i < this.state.lists.length; i++) {\n        if (this.state.lists[i].name === listName) {\n          index = i;\n          break;\n        }\n      }\n    }\n    this.setState({\n      currentlySelectedListName: listName,\n      currentlySelectedListIndex: index,\n      currentlySelectedItemID: \"\",\n      addListOverlayDisplaying: false\n    });\n  }\n\n  toggleLoginRegister() {\n    if (this.state.loginOrRegister === \"login\") this.setState({\n      docTitle: \"Sign Up | Doozy\",\n      loginOrRegister: \"register\"\n    });else if (this.state.loginOrRegister === \"register\") this.setState({\n      docTitle: \"Log In | Doozy\",\n      loginOrRegister: \"login\"\n    });\n  }\n\n  getCurrentlySelectedItem() {\n    if (this.state.currentlySelectedItemID === \"\") return {\n      title: \"\",\n      description: \"\",\n      dueDate: \"\",\n      priority: \"\",\n      completed: false,\n      itemID: \"\"\n    };\n    var items = this.state.lists.slice(this.state.currentlySelectedListIndex)[0].items;\n\n    for (let i = 0; i < items.length; i++) if (items[i].itemID === this.state.currentlySelectedItemID) return items[i];\n\n    return {\n      title: \"\",\n      description: \"\",\n      dueDate: \"\",\n      priority: \"\",\n      completed: false,\n      itemID: \"\"\n    };\n  } // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n\n\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: this.state.username\n      /*this.props.username*/\n\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      var lists = res;\n      lists = this.appendSmartLists(lists);\n      const index = this.state.registered === \"successful\" ? 0 : lists.length - 1;\n      const name = lists[index].name;\n      this.setState({\n        lists: lists,\n        currentlySelectedListIndex: index,\n        currentlySelectedListName: name\n      });\n    });\n  }\n\n  appendSmartLists(lists) {\n    var next7Days = this.getNext7Days(lists);\n    var today = this.getToday(lists);\n    var all = this.getAll(lists);\n    lists.push(today);\n    lists.push(next7Days);\n    lists.push(all);\n    return lists;\n  }\n\n  getNext7Days(lists) {\n    var next7Days = {\n      name: \"Next 7 Days\",\n      color: \"\",\n      items: []\n    };\n\n    for (let i = 0; i < lists.length; i++) {\n      const items = lists[i].items;\n\n      for (let j = 0; j < items.length; j++) {\n        if (checkIfNext7Days(items[j].dueDate)) {\n          items[j].originalList = lists[i].name;\n          next7Days.items.push(items[j]);\n        }\n      }\n    }\n\n    next7Days.items.sort(sortListItems);\n    return next7Days;\n  }\n\n  getAll(lists) {\n    var all = {\n      name: \"All\",\n      color: \"\",\n      items: []\n    };\n\n    for (let i = 0; i < lists.length; i++) {\n      const items = lists[i].items;\n\n      for (let j = 0; j < items.length; j++) items[j].originalList = lists[i].name;\n\n      all.items = all.items.concat(lists[i].items);\n    }\n\n    all.items.sort(sortListItems);\n    return all;\n  }\n\n  getToday(lists) {\n    var today = {\n      name: \"Today\",\n      color: \"\",\n      items: []\n    };\n    var t = dateToStr(new Date());\n\n    for (let i = 0; i < lists.length; i++) {\n      const items = lists[i].items;\n\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].dueDate === t) {\n          items[j].originalList = lists[i].name;\n          today.items.push(items[j]);\n        }\n      }\n    }\n\n    today.items.sort(sortListItems);\n    return today;\n  }\n\n  addListItem(listName, title, dueDate, description, priority) {\n    const lists = this.state.lists.slice();\n    var id = null;\n    var item = {\n      title: title,\n      description: description,\n      dueDate: dueDate,\n      priority: priority,\n      completed: false,\n      originalList: listName,\n      itemID: new ObjectID().toString()\n    };\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        items.push(item);\n        id = item.itemID;\n        items.sort(sortListItems);\n        break;\n      }\n    }\n\n    var today = dateToStr(new Date());\n\n    if (dueDate === today) {\n      lists[lists.length - 3].items.push(item);\n      lists[lists.length - 3].items.sort(sortListItems);\n    }\n\n    if (checkIfNext7Days(dueDate)) {\n      lists[lists.length - 2].items.push(item);\n      lists[lists.length - 2].items.sort(sortListItems);\n    }\n\n    lists[lists.length - 1].items.push(item);\n    lists[lists.length - 1].items.sort(sortListItems);\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: id\n    });\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n      itemID: id\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  deleteListItem(listName, itemID) {\n    var dueDate = \"\";\n    var item;\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        var items = lists[i].items;\n        var idx = -1;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            idx = j;\n            dueDate = items[j].dueDate;\n            item = items[j];\n            break;\n          }\n        }\n\n        items = items.splice(idx, 1);\n      }\n    }\n\n    let index = -1;\n    var today = dateToStr(new Date());\n\n    if (dueDate === today) {\n      items = lists[lists.length - 3].items;\n\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].itemID === itemID) {\n          index = j;\n          break;\n        }\n      }\n\n      items = items.splice(index, 1);\n    }\n\n    if (checkIfNext7Days(dueDate)) {\n      items = lists[lists.length - 2].items;\n\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].itemID === itemID) {\n          index = j;\n          break;\n        }\n      }\n\n      items = items.splice(index, 1);\n    }\n\n    items = lists[lists.length - 1].items;\n\n    for (let j = 0; j < items.length; j++) {\n      if (items[j].itemID === itemID) {\n        index = j;\n        break;\n      }\n    }\n\n    items = items.splice(index, 1);\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: \"\",\n      lastDeletedItem: item,\n      lastDeletedItemListName: listName\n    });\n    const url = domain + \"/deleteListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\" ? item.originalList : listName,\n      itemID: itemID\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.text());\n    this.handleDisplayNotification();\n  }\n\n  setItemTitle(listName, itemID, title) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].title = title;\n            item = items[j];\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].title = title;\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n    const url = domain + \"/setItemTitle\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\" ? item.originalList : listName,\n      itemID: itemID,\n      title: title\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.text());\n  }\n\n  setItemCompleted(listName, itemID, completed) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].completed = completed;\n            item = items[j];\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].completed = completed;\n              items.sort(sortListItems);\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemCompleted\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\" ? item.originalList : listName,\n      itemID: itemID,\n      completed: completed\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setItemDueDate(listName, itemID, dueDate) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].dueDate = dueDate;\n            item = items[j];\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].dueDate = dueDate;\n              items.sort(sortListItems);\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemDueDate\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\" ? item.originalList : listName,\n      itemID: itemID,\n      dueDate: dueDate\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setItemPriority(listName, itemID, priority) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].priority = priority;\n            item = items[j];\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].priority = priority;\n              items.sort(sortListItems);\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemPriority\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\" ? item.originalList : listName,\n      itemID: itemID,\n      priority: priority\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setItemDescription(listName, itemID, description) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].description = description;\n            item = items[j];\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].description = description;\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemDescription\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\" ? item.originalList : listName,\n      itemID: itemID,\n      description: description\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  handleLogOut() {\n    // delete the cookie\n    cookies.remove(\"DoozyLogin\"); // const bgURL = getRandomBGURL();\n    // reset state back to start\n\n    this.setState({\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      lists: [],\n      username: \"\",\n      currentlySelectedListIndex: 0,\n      currentlySelectedListName: \"\",\n      currentlySelectedItemID: \"\",\n      // bgURL: bgURL,\n      firstName: \"\",\n      lastName: \"\",\n      loaded: false\n    });\n  }\n\n  createEmptyList(listName, color) {\n    var list = {\n      name: listName,\n      color: color,\n      items: []\n    };\n    var lists = this.state.lists.slice();\n    lists.splice(lists.length - 3, 0, list);\n    this.setState({\n      lists: lists,\n      currentlySelectedListIndex: lists.length - 4,\n      currentlySelectedListName: listName\n    });\n    const url = domain + \"/createEmptyList\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      color: color\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  focusAddListOverlayTitleInput() {\n    this.addListTitleRef.current.focus();\n  }\n\n  focusEditListOverlayTitleInput() {\n    this.editListTitleRef.current.focus();\n  }\n\n  deleteList(listName) {\n    var idx = -1;\n    var lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) if (lists[i].name === listName) {\n      idx = i;\n      break;\n    }\n\n    lists.splice(idx, 1);\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: \"\",\n      currentlySelectedListIndex: idx - 1 >= 0 ? idx - 1 : 2,\n      currentlySelectedListName: idx - 1 >= 0 ? lists[idx - 1].name : lists[2].name\n    });\n    const url = domain + \"/deleteList\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  editList(oldName, newName, color) {\n    var lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === oldName) {\n        lists[i].name = newName;\n        lists[i].color = color;\n        var items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) items[j].originalList = newName;\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/editList\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      oldName: oldName,\n      newName: newName,\n      color: color\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  handleDisplayNotification() {\n    this.setState({\n      notificationDisplaying: true\n    });\n    setTimeout(() => {\n      this.setState({\n        notificationDisplaying: false\n      });\n    }, 4000);\n  }\n\n  handleShowAddListOverlay() {\n    this.setState({\n      addListOverlayDisplaying: true\n    });\n    $(\".add-list-overlay-color-selected\").removeClass(\".add-list-overlay-color-selected\");\n    this.addListTitleRef.current.value = \"\";\n    setTimeout(() => {\n      this.addListTitleRef.current.focus();\n    }, 500);\n  }\n\n  handleShowEditListOverlay(listName, color) {\n    this.setState({\n      editListOverlayDisplaying: true,\n      editListColor: color,\n      editListName: listName\n    });\n    this.editListTitleRef.current.value = listName;\n    setTimeout(() => {\n      this.editListTitleRef.current.focus();\n    }, 500);\n  }\n\n  handleHideAddListOverlay() {\n    this.setState({\n      addListOverlayDisplaying: false\n    });\n  }\n\n  handleHideEditListOverlay() {\n    this.setState({\n      editListOverlayDisplaying: false,\n      editListColor: \"\",\n      editListName: \"\"\n    });\n  }\n\n  render() {\n    document.title = this.state.docTitle;\n    const listArr = this.state.lists.slice(this.state.currentlySelectedListIndex, this.state.currentlySelectedListIndex + 1);\n    var lastDeletedItemTitle = \"\";\n    if (this.state.lastDeletedItem !== undefined) lastDeletedItemTitle = this.state.lastDeletedItem.title;\n    const selectedItem = this.getCurrentlySelectedItem();\n    const appClasses = \"row align-items-center\" + (this.state.loggedIn === \"successful\" ? \"\" : \" d-none\");\n    const loginRegClasses = \"container-fluid align-items-center\" + (this.state.loggedIn === \"successful\" ? \" d-none\" : \" d-flex \");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login-register\",\n      style: {\n        backgroundImage: this.state.bgURL\n      },\n      className: loginRegClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-section\" + (this.state.loginOrRegister === \"login\" ? \"\" : \" d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      loginInfo: this.state.loggedIn,\n      verifyLogin: (username, password, authType) => this.verifyLogin(username, password, authType),\n      createAccount: (email, fName, lName, password, authType) => this.createAccount(email, fName, lName, password, authType),\n      switchToRegister: () => this.toggleLoginRegister(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-section\" + (this.state.loginOrRegister === \"register\" ? \"\" : \" d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Register, {\n      switchToLogin: () => this.toggleLoginRegister(),\n      verifyLogin: (username, password, authType) => this.verifyLogin(username, password, authType),\n      createAccount: (email, fName, lName, password, authType) => this.createAccount(email, fName, lName, password, authType),\n      registerInfo: this.state.registered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1060,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"app\",\n      style: {\n        backgroundImage: this.state.bgURL\n      },\n      className: appClasses,\n      onKeyDown: e => {\n        if (e.keyCode === 27 && this.state.addListOverlayDisplaying) this.setState({\n          addListOverlayDisplaying: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddListOverlay, {\n      id: \"addListOverlay\",\n      displaying: this.state.addListOverlayDisplaying,\n      addListTitleRef: this.addListTitleRef,\n      lists: this.state.lists,\n      hideOverlay: () => this.handleHideAddListOverlay(),\n      createList: (listName, color) => this.createEmptyList(listName, color),\n      focusTitleInput: () => this.focusAddListOverlayTitleInput(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(EditListOverlay, {\n      id: \"editListOverlay\",\n      displaying: this.state.editListOverlayDisplaying,\n      editListTitleRef: this.editListTitleRef,\n      lists: this.state.lists,\n      hideOverlay: () => this.handleHideEditListOverlay(),\n      focusTitleInput: () => this.focusEditListOverlayTitleInput(),\n      startingName: this.state.editListName,\n      startingColor: this.state.editListColor,\n      editList: (oldName, newName, color) => this.editList(oldName, newName, color),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Notification, {\n      displaying: this.state.notificationDisplaying,\n      hideNotification: () => this.setState({\n        notificationDisplaying: false\n      }),\n      title: lastDeletedItemTitle,\n      undo: () => {\n        if (this.state.lastDeletedItem.itemID !== undefined) {\n          this.addListItem(this.state.lastDeletedItemListName, this.state.lastDeletedItem.title, this.state.lastDeletedItem.dueDate, this.state.lastDeletedItem.description, this.state.lastDeletedItem.priority);\n        }\n      },\n      listName: this.state.lastDeletedItemListName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sidebar\",\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      lists: this.state.lists,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      currentlySelectedListName: this.state.currentlySelectedListName,\n      setSelectedList: listName => this.setSelectedList(listName),\n      showAddListOverlay: () => this.handleShowAddListOverlay(),\n      deleteList: listName => this.deleteList(listName),\n      showEditListOverlay: (listName, color) => this.handleShowEditListOverlay(listName, color),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1125,\n        columnNumber: 13\n      }\n    })), listArr.map((list, i) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: list.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"todolist\",\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1141,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Todolist, {\n        color: list.color,\n        name: list.name,\n        items: list.items,\n        addListItem: (listName, title, dueDate, description, priority) => this.addListItem(listName, title, dueDate, description, priority),\n        deleteListItem: (listName, itemID) => this.deleteListItem(listName, itemID),\n        setItemTitle: (listName, itemID, title) => this.setItemTitle(listName, itemID, title),\n        setItemCompleted: (listName, itemID, completed) => this.setItemCompleted(listName, itemID, completed),\n        setSelectedItem: itemID => this.setSelectedItem(itemID),\n        selectedItemID: this.state.currentlySelectedItemID,\n        hideAddListOverlay: () => this.handleHideAddListOverlay(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"details\",\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Details, {\n        listName: list.name,\n        selectedItemID: selectedItem.itemID,\n        selectedItemList: selectedItem.originalList,\n        selectedItemTitle: selectedItem.title,\n        selectedItemDueDate: selectedItem.dueDate,\n        selectedItemDescription: selectedItem.description,\n        selectedItemPriority: selectedItem.priority,\n        selectedItemCompleted: selectedItem.completed,\n        setItemTitle: (listName, itemID, title) => this.setItemTitle(listName, itemID, title),\n        setItemCompleted: (listName, itemID, completed) => this.setItemCompleted(listName, itemID, completed),\n        setItemDueDate: (listName, itemID, dueDate) => this.setItemDueDate(listName, itemID, dueDate),\n        setItemPriority: (listName, itemID, priority) => this.setItemPriority(listName, itemID, priority),\n        setItemDescription: (listName, itemID, description) => this.setItemDescription(listName, itemID, description),\n        handleDelete: (listName, itemID) => this.deleteListItem(listName, itemID),\n        hideAddListOverlay: () => this.handleHideAddListOverlay(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"toolbar\",\n        className: \"row col-1 justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Toolbar, {\n        handleLogOut: () => this.handleLogOut(),\n        deleteAllCompletedItems: () => this.deleteAllCompletedItems(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 19\n        }\n      })));\n    })));\n  }\n\n}\n\nfunction sortListItems(a, b) {\n  if (a.completed && !b.completed) return 1;else if (!a.completed && b.completed) return -1;else if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;else {\n    // both are either completed or incomplete or have a due date set or no due date set\n    if (a.dueDate === b.dueDate) {\n      // sort items due on the same day by priority\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n      if (priorityA !== priorityB) return priorityB - priorityA;else {\n        // sort by itemID\n        const itemIDA = a.itemID;\n        const itemIDB = b.itemID;\n        return itemIDA - itemIDB;\n      }\n    } else {\n      // sort items based on date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      return dateA - dateB;\n    }\n  }\n}\n\nfunction ValidateEmail(mail) {\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getRandomBGURL() {\n  // visit https://freeimage.host/ to host more background images\n  const backgroundURLs = [\"https://iili.io/J4xbBS.jpg\", \"https://iili.io/J4xtQ2.jpg\", \"https://iili.io/J4z92e.jpg\", \"https://iili.io/J4zdpj.jpg\", \"https://iili.io/J4zJkb.jpg\", \"https://iili.io/J4zWZl.jpg\", \"https://iili.io/J4Weln.jpg\", \"https://iili.io/J4WhoN.jpg\", \"https://iili.io/J4WOKX.jpg\", \"https://iili.io/J4WUN4.jpg\", \"https://iili.io/J4WgDl.jpg\", \"https://iili.io/J4WSRf.jpg\", \"https://iili.io/J4WmDQ.jpg\", \"https://iili.io/J4X9WB.jpg\", \"https://iili.io/J4XHiP.jpg\", \"https://iili.io/J4WyxV.jpg\", \"https://iili.io/JPNuGR.jpg\", \"https://iili.io/JPN53N.jpg\", \"https://iili.io/JPNTCv.jpg\", \"https://iili.io/JiKSp4.jpg\"];\n  var currBackground = Math.floor(Math.random() * Math.floor(backgroundURLs.length));\n  return 'url(\"' + backgroundURLs[currBackground] + '\")';\n}\n\nfunction dateToStr(date) {\n  var day = date.getDate();\n  if (day < 10) day = \"0\" + day.toString();\n  var month = date.getMonth() + 1;\n  if (month < 10) month = \"0\" + month.toString();\n  var year = date.getFullYear().toString();\n  var formatted = year + \"-\" + month + \"-\" + day;\n  return formatted;\n}\n\nfunction checkIfNext7Days(dateStr) {\n  var curr = new Date();\n\n  for (let i = 0; i < 7; i++) {\n    var d = dateToStr(curr);\n    if (dateStr === d) return true;\n    curr.setDate(curr.getDate() + 1);\n  }\n\n  d = dateToStr(curr);\n  if (dateStr === d) return true;\n  return false;\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/App.js"],"names":["React","Component","Cookies","$","Todolist","Details","Login","Register","Sidebar","Notification","Toolbar","AddListOverlay","EditListOverlay","ObjectID","require","cookies","domain","App","constructor","props","state","docTitle","loggedIn","registered","loginOrRegister","lists","username","currentlySelectedListIndex","currentlySelectedListName","currentlySelectedItemID","bgURL","firstName","lastName","loaded","notificationDisplaying","lastDeletedItem","lastDeletedItemListName","addListOverlayDisplaying","editListOverlayDisplaying","editListName","editListColor","addListTitleRef","createRef","editListTitleRef","componentDidMount","get","undefined","email","aWeekFromNow","Date","setDate","getDate","set","path","expires","getRandomBGURL","setState","componentDidUpdate","getLists","verifyLogin","password","authType","url","body","JSON","stringify","fetch","method","headers","then","res","json","success","info","createAccount","ValidateEmail","length","deleteAllCompletedItems","slice","i","items","firstCompletedIndex","j","completed","console","log","text","setSelectedItem","itemID","setSelectedList","listName","index","name","toggleLoginRegister","getCurrentlySelectedItem","title","description","dueDate","priority","appendSmartLists","next7Days","getNext7Days","today","getToday","all","getAll","push","color","checkIfNext7Days","originalList","sort","sortListItems","concat","t","dateToStr","addListItem","id","item","toString","deleteListItem","idx","splice","handleDisplayNotification","setItemTitle","setItemCompleted","setItemDueDate","setItemPriority","setItemDescription","handleLogOut","remove","createEmptyList","list","focusAddListOverlayTitleInput","current","focus","focusEditListOverlayTitleInput","deleteList","editList","oldName","newName","setTimeout","handleShowAddListOverlay","removeClass","value","handleShowEditListOverlay","handleHideAddListOverlay","handleHideEditListOverlay","render","document","listArr","lastDeletedItemTitle","selectedItem","appClasses","loginRegClasses","backgroundImage","fName","lName","e","keyCode","map","a","b","priorities","priorityA","indexOf","priorityB","itemIDA","itemIDB","dateA","dateB","mail","test","backgroundURLs","currBackground","Math","floor","random","date","day","month","getMonth","year","getFullYear","formatted","dateStr","curr","d"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport \"./App.css\";\n\nimport $ from \"jquery\";\n\nimport Todolist from \"./todolist/Todolist.js\";\nimport Details from \"./todolist/Details.js\";\nimport Login from \"./todolist/Login.js\";\nimport Register from \"./todolist/Register.js\";\nimport Sidebar from \"./todolist/Sidebar.js\";\nimport Notification from \"./todolist/Notification.js\";\nimport Toolbar from \"./todolist/Toolbar.js\";\nimport AddListOverlay from \"./todolist/AddListOverlay.js\";\nimport EditListOverlay from \"./todolist/EditListOverlay.js\";\n\nvar ObjectID = require(\"bson-objectid\");\nconst cookies = new Cookies();\n\nconst domain = \"http://localhost:9000\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      lists: [],\n      username: \"\",\n      currentlySelectedListIndex: 0,\n      currentlySelectedListName: \"\",\n      currentlySelectedItemID: \"\",\n      bgURL: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      loaded: false,\n      notificationDisplaying: false,\n      lastDeletedItem: {},\n      lastDeletedItemListName: \"\",\n      addListOverlayDisplaying: false,\n      editListOverlayDisplaying: false,\n      editListName: \"\",\n      editListColor: \"\",\n    };\n    this.addListTitleRef = React.createRef();\n    this.editListTitleRef = React.createRef();\n  }\n\n  componentDidMount() {\n    var username = \"\";\n    var firstName = \"\";\n    var lastName = \"\";\n    var loggedIn = \"not yet\";\n    var docTitle = this.state.docTitle;\n\n    if (cookies.get(\"DoozyLogin\") !== undefined) {\n      username = cookies.get(\"DoozyLogin\").email;\n      firstName = cookies.get(\"DoozyLogin\").firstName;\n      lastName = cookies.get(\"DoozyLogin\").lastName;\n      loggedIn = \"successful\";\n\n      // extend the expiration date of the cookie\n      var aWeekFromNow = new Date();\n      aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n      cookies.set(\n        \"DoozyLogin\",\n        { email: username, firstName: firstName, lastName: lastName },\n        {\n          path: \"/\",\n          expires: aWeekFromNow,\n        }\n      );\n      docTitle = \"Lists | Doozy\";\n    }\n\n    const bgURL = getRandomBGURL();\n\n    this.setState({\n      bgURL: bgURL,\n      username: username,\n      firstName: firstName,\n      lastName: lastName,\n      loggedIn: loggedIn,\n      docTitle: docTitle,\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.loaded === false && this.state.loggedIn === \"successful\") {\n      this.setState({ loaded: true });\n      this.getLists();\n    }\n  }\n\n  verifyLogin(username, password, authType) {\n    const url = domain + \"/verifyLogin\";\n    const body = JSON.stringify({\n      username: username,\n      password: password,\n      authType: authType,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.success) {\n          this.setState({\n            docTitle: \"Lists | Doozy\",\n            loggedIn: \"successful\",\n            username: username,\n            firstName: res.firstName,\n            lastName: res.lastName,\n          });\n          this.getLists();\n          // set a cookie\n          var aWeekFromNow = new Date();\n          aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n          cookies.set(\n            \"DoozyLogin\",\n            {\n              email: username,\n              firstName: res.firstName,\n              lastName: res.lastName,\n            },\n            {\n              path: \"/\",\n              expires: aWeekFromNow,\n            }\n          );\n        } else if (res.info === \"username does not exist\")\n          this.setState({ loggedIn: \"username does not exist\" });\n        else if (res.info === \"auth type\")\n          this.setState({ loggedIn: \"auth type\" });\n        else if (res.info === \"incorrect password\")\n          this.setState({ loggedIn: \"incorrect password\" });\n      });\n  }\n\n  createAccount(email, firstName, lastName, password, authType) {\n    if (email === \"\" || firstName === \"\" || lastName === \"\" || password === \"\")\n      this.setState({ registered: \"empty field(s)\" });\n    else if (!ValidateEmail(email))\n      this.setState({ registered: \"invalid email\" });\n    else if (password.length < 6)\n      this.setState({ registered: \"password length\" });\n    else {\n      const url = domain + \"/createAccount\";\n      const body = JSON.stringify({\n        username: email,\n        firstName: firstName,\n        lastName: lastName,\n        password: password,\n        authType: authType,\n      });\n\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: body,\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          if (res.success) {\n            this.setState({\n              docTitle: \"Lists | Doozy\",\n              loggedIn: \"successful\",\n              registered: \"successful\",\n              username: email,\n              firstName: firstName,\n              lastName: lastName,\n            });\n            this.getLists();\n            // set a cookie\n            var aWeekFromNow = new Date();\n            aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n            cookies.set(\n              \"DoozyLogin\",\n              { email: email, firstName: firstName, lastName: lastName },\n              {\n                path: \"/\",\n                expires: aWeekFromNow,\n              }\n            );\n          } else if (res.info === \"username already exists\") {\n            this.setState({ registered: \"username already exists\" });\n          }\n        });\n    }\n  }\n\n  deleteAllCompletedItems() {\n    var lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      var items = lists[i].items;\n      var firstCompletedIndex = 0;\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].completed) {\n          firstCompletedIndex = j;\n          break;\n        }\n      }\n      items = items.slice(0, firstCompletedIndex);\n    }\n\n    this.setState({ lists: lists });\n\n    console.log(this.state.username);\n\n    const url = domain + \"/deleteCompletedItems\";\n    const body = JSON.stringify({\n      username: this.state.username,\n    });\n\n    console.log(body);\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    })\n      .then((res) => res.text())\n      .then((res) => {\n        console.log(res);\n      });\n  }\n\n  setSelectedItem(itemID) {\n    this.setState({\n      currentlySelectedItemID: itemID,\n      addListOverlayDisplaying: false,\n    });\n  }\n\n  setSelectedList(listName) {\n    var index;\n\n    if (listName === \"Today\") index = this.state.lists.length - 3;\n    if (listName === \"Next 7 Days\") index = this.state.lists.length - 2;\n    if (listName === \"All\") index = this.state.lists.length - 1;\n    else {\n      for (let i = 0; i < this.state.lists.length; i++) {\n        if (this.state.lists[i].name === listName) {\n          index = i;\n          break;\n        }\n      }\n    }\n    this.setState({\n      currentlySelectedListName: listName,\n      currentlySelectedListIndex: index,\n      currentlySelectedItemID: \"\",\n      addListOverlayDisplaying: false,\n    });\n  }\n\n  toggleLoginRegister() {\n    if (this.state.loginOrRegister === \"login\")\n      this.setState({\n        docTitle: \"Sign Up | Doozy\",\n        loginOrRegister: \"register\",\n      });\n    else if (this.state.loginOrRegister === \"register\")\n      this.setState({\n        docTitle: \"Log In | Doozy\",\n        loginOrRegister: \"login\",\n      });\n  }\n\n  getCurrentlySelectedItem() {\n    if (this.state.currentlySelectedItemID === \"\")\n      return {\n        title: \"\",\n        description: \"\",\n        dueDate: \"\",\n        priority: \"\",\n        completed: false,\n        itemID: \"\",\n      };\n\n    var items = this.state.lists.slice(this.state.currentlySelectedListIndex)[0]\n      .items;\n\n    for (let i = 0; i < items.length; i++)\n      if (items[i].itemID === this.state.currentlySelectedItemID)\n        return items[i];\n\n    return {\n      title: \"\",\n      description: \"\",\n      dueDate: \"\",\n      priority: \"\",\n      completed: false,\n      itemID: \"\",\n    };\n  }\n\n  // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: this.state.username /*this.props.username*/,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        var lists = res;\n\n        lists = this.appendSmartLists(lists);\n\n        const index =\n          this.state.registered === \"successful\" ? 0 : lists.length - 1;\n        const name = lists[index].name;\n        this.setState({\n          lists: lists,\n          currentlySelectedListIndex: index,\n          currentlySelectedListName: name,\n        });\n      });\n  }\n\n  appendSmartLists(lists) {\n    var next7Days = this.getNext7Days(lists);\n    var today = this.getToday(lists);\n    var all = this.getAll(lists);\n\n    lists.push(today);\n    lists.push(next7Days);\n    lists.push(all);\n\n    return lists;\n  }\n\n  getNext7Days(lists) {\n    var next7Days = {\n      name: \"Next 7 Days\",\n      color: \"\",\n      items: [],\n    };\n\n    for (let i = 0; i < lists.length; i++) {\n      const items = lists[i].items;\n      for (let j = 0; j < items.length; j++) {\n        if (checkIfNext7Days(items[j].dueDate)) {\n          items[j].originalList = lists[i].name;\n          next7Days.items.push(items[j]);\n        }\n      }\n    }\n    next7Days.items.sort(sortListItems);\n\n    return next7Days;\n  }\n\n  getAll(lists) {\n    var all = {\n      name: \"All\",\n      color: \"\",\n      items: [],\n    };\n\n    for (let i = 0; i < lists.length; i++) {\n      const items = lists[i].items;\n\n      for (let j = 0; j < items.length; j++)\n        items[j].originalList = lists[i].name;\n\n      all.items = all.items.concat(lists[i].items);\n    }\n\n    all.items.sort(sortListItems);\n\n    return all;\n  }\n\n  getToday(lists) {\n    var today = {\n      name: \"Today\",\n      color: \"\",\n      items: [],\n    };\n\n    var t = dateToStr(new Date());\n\n    for (let i = 0; i < lists.length; i++) {\n      const items = lists[i].items;\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].dueDate === t) {\n          items[j].originalList = lists[i].name;\n          today.items.push(items[j]);\n        }\n      }\n    }\n    today.items.sort(sortListItems);\n\n    return today;\n  }\n\n  addListItem(listName, title, dueDate, description, priority) {\n    const lists = this.state.lists.slice();\n    var id = null;\n    var item = {\n      title: title,\n      description: description,\n      dueDate: dueDate,\n      priority: priority,\n      completed: false,\n      originalList: listName,\n      itemID: new ObjectID().toString(),\n    };\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        items.push(item);\n        id = item.itemID;\n        items.sort(sortListItems);\n        break;\n      }\n    }\n\n    var today = dateToStr(new Date());\n    if (dueDate === today) {\n      lists[lists.length - 3].items.push(item);\n      lists[lists.length - 3].items.sort(sortListItems);\n    }\n    if (checkIfNext7Days(dueDate)) {\n      lists[lists.length - 2].items.push(item);\n      lists[lists.length - 2].items.sort(sortListItems);\n    }\n    lists[lists.length - 1].items.push(item);\n    lists[lists.length - 1].items.sort(sortListItems);\n\n    this.setState({ lists: lists, currentlySelectedItemID: id });\n\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n      itemID: id,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  deleteListItem(listName, itemID) {\n    var dueDate = \"\";\n    var item;\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        var items = lists[i].items;\n        var idx = -1;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            idx = j;\n            dueDate = items[j].dueDate;\n            item = items[j];\n            break;\n          }\n        }\n        items = items.splice(idx, 1);\n      }\n    }\n\n    let index = -1;\n    var today = dateToStr(new Date());\n    if (dueDate === today) {\n      items = lists[lists.length - 3].items;\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].itemID === itemID) {\n          index = j;\n          break;\n        }\n      }\n      items = items.splice(index, 1);\n    }\n    if (checkIfNext7Days(dueDate)) {\n      items = lists[lists.length - 2].items;\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].itemID === itemID) {\n          index = j;\n          break;\n        }\n      }\n      items = items.splice(index, 1);\n    }\n    items = lists[lists.length - 1].items;\n    for (let j = 0; j < items.length; j++) {\n      if (items[j].itemID === itemID) {\n        index = j;\n        break;\n      }\n    }\n    items = items.splice(index, 1);\n\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: \"\",\n      lastDeletedItem: item,\n      lastDeletedItemListName: listName,\n    });\n\n    const url = domain + \"/deleteListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName:\n        listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\"\n          ? item.originalList\n          : listName,\n      itemID: itemID,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    }).then((res) => res.text());\n    this.handleDisplayNotification();\n  }\n\n  setItemTitle(listName, itemID, title) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].title = title;\n            item = items[j];\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].title = title;\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n\n    const url = domain + \"/setItemTitle\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName:\n        listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\"\n          ? item.originalList\n          : listName,\n      itemID: itemID,\n      title: title,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    }).then((res) => res.text());\n  }\n\n  setItemCompleted(listName, itemID, completed) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].completed = completed;\n            item = items[j];\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].completed = completed;\n              items.sort(sortListItems);\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemCompleted\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName:\n        listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\"\n          ? item.originalList\n          : listName,\n      itemID: itemID,\n      completed: completed,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setItemDueDate(listName, itemID, dueDate) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].dueDate = dueDate;\n            item = items[j];\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].dueDate = dueDate;\n              items.sort(sortListItems);\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemDueDate\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName:\n        listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\"\n          ? item.originalList\n          : listName,\n      itemID: itemID,\n      dueDate: dueDate,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setItemPriority(listName, itemID, priority) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].priority = priority;\n            item = items[j];\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].priority = priority;\n              items.sort(sortListItems);\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemPriority\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName:\n        listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\"\n          ? item.originalList\n          : listName,\n      itemID: itemID,\n      priority: priority,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setItemDescription(listName, itemID, description) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].description = description;\n            item = items[j];\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].description = description;\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemDescription\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName:\n        listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\"\n          ? item.originalList\n          : listName,\n      itemID: itemID,\n      description: description,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  handleLogOut() {\n    // delete the cookie\n    cookies.remove(\"DoozyLogin\");\n\n    // const bgURL = getRandomBGURL();\n\n    // reset state back to start\n    this.setState({\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      lists: [],\n      username: \"\",\n      currentlySelectedListIndex: 0,\n      currentlySelectedListName: \"\",\n      currentlySelectedItemID: \"\",\n      // bgURL: bgURL,\n      firstName: \"\",\n      lastName: \"\",\n      loaded: false,\n    });\n  }\n\n  createEmptyList(listName, color) {\n    var list = { name: listName, color: color, items: [] };\n    var lists = this.state.lists.slice();\n    lists.splice(lists.length - 3, 0, list);\n    this.setState({\n      lists: lists,\n      currentlySelectedListIndex: lists.length - 4,\n      currentlySelectedListName: listName,\n    });\n\n    const url = domain + \"/createEmptyList\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      color: color,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  focusAddListOverlayTitleInput() {\n    this.addListTitleRef.current.focus();\n  }\n\n  focusEditListOverlayTitleInput() {\n    this.editListTitleRef.current.focus();\n  }\n\n  deleteList(listName) {\n    var idx = -1;\n    var lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++)\n      if (lists[i].name === listName) {\n        idx = i;\n        break;\n      }\n    lists.splice(idx, 1);\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: \"\",\n      currentlySelectedListIndex: idx - 1 >= 0 ? idx - 1 : 2,\n      currentlySelectedListName:\n        idx - 1 >= 0 ? lists[idx - 1].name : lists[2].name,\n    });\n\n    const url = domain + \"/deleteList\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  editList(oldName, newName, color) {\n    var lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === oldName) {\n        lists[i].name = newName;\n        lists[i].color = color;\n        var items = lists[i].items;\n        for (let j = 0; j < items.length; j++) items[j].originalList = newName;\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/editList\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      oldName: oldName,\n      newName: newName,\n      color: color,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  handleDisplayNotification() {\n    this.setState({ notificationDisplaying: true });\n    setTimeout(() => {\n      this.setState({ notificationDisplaying: false });\n    }, 4000);\n  }\n\n  handleShowAddListOverlay() {\n    this.setState({ addListOverlayDisplaying: true });\n    $(\".add-list-overlay-color-selected\").removeClass(\n      \".add-list-overlay-color-selected\"\n    );\n    this.addListTitleRef.current.value = \"\";\n    setTimeout(() => {\n      this.addListTitleRef.current.focus();\n    }, 500);\n  }\n\n  handleShowEditListOverlay(listName, color) {\n    this.setState({\n      editListOverlayDisplaying: true,\n      editListColor: color,\n      editListName: listName,\n    });\n\n    this.editListTitleRef.current.value = listName;\n\n    setTimeout(() => {\n      this.editListTitleRef.current.focus();\n    }, 500);\n  }\n\n  handleHideAddListOverlay() {\n    this.setState({ addListOverlayDisplaying: false });\n  }\n\n  handleHideEditListOverlay() {\n    this.setState({\n      editListOverlayDisplaying: false,\n      editListColor: \"\",\n      editListName: \"\",\n    });\n  }\n\n  render() {\n    document.title = this.state.docTitle;\n\n    const listArr = this.state.lists.slice(\n      this.state.currentlySelectedListIndex,\n      this.state.currentlySelectedListIndex + 1\n    );\n\n    var lastDeletedItemTitle = \"\";\n    if (this.state.lastDeletedItem !== undefined)\n      lastDeletedItemTitle = this.state.lastDeletedItem.title;\n\n    const selectedItem = this.getCurrentlySelectedItem();\n    const appClasses =\n      \"row align-items-center\" +\n      (this.state.loggedIn === \"successful\" ? \"\" : \" d-none\");\n    const loginRegClasses =\n      \"container-fluid align-items-center\" +\n      (this.state.loggedIn === \"successful\" ? \" d-none\" : \" d-flex \");\n\n    return (\n      <>\n        <div\n          id=\"login-register\"\n          style={{ backgroundImage: this.state.bgURL }}\n          className={loginRegClasses}\n        >\n          <div\n            className={\n              \"login-section\" +\n              (this.state.loginOrRegister === \"login\" ? \"\" : \" d-none\")\n            }\n          >\n            <Login\n              loginInfo={this.state.loggedIn}\n              verifyLogin={(username, password, authType) =>\n                this.verifyLogin(username, password, authType)\n              }\n              createAccount={(email, fName, lName, password, authType) =>\n                this.createAccount(email, fName, lName, password, authType)\n              }\n              switchToRegister={() => this.toggleLoginRegister()}\n            />\n          </div>\n          <div\n            className={\n              \"register-section\" +\n              (this.state.loginOrRegister === \"register\" ? \"\" : \" d-none\")\n            }\n          >\n            <Register\n              switchToLogin={() => this.toggleLoginRegister()}\n              verifyLogin={(username, password, authType) =>\n                this.verifyLogin(username, password, authType)\n              }\n              createAccount={(email, fName, lName, password, authType) =>\n                this.createAccount(email, fName, lName, password, authType)\n              }\n              registerInfo={this.state.registered}\n            />\n          </div>\n        </div>\n        <div\n          id=\"app\"\n          style={{ backgroundImage: this.state.bgURL }}\n          className={appClasses}\n          onKeyDown={(e) => {\n            if (e.keyCode === 27 && this.state.addListOverlayDisplaying)\n              this.setState({ addListOverlayDisplaying: false });\n          }}\n        >\n          <AddListOverlay\n            id=\"addListOverlay\"\n            displaying={this.state.addListOverlayDisplaying}\n            addListTitleRef={this.addListTitleRef}\n            lists={this.state.lists}\n            hideOverlay={() => this.handleHideAddListOverlay()}\n            createList={(listName, color) =>\n              this.createEmptyList(listName, color)\n            }\n            focusTitleInput={() => this.focusAddListOverlayTitleInput()}\n          />\n          <EditListOverlay\n            id=\"editListOverlay\"\n            displaying={this.state.editListOverlayDisplaying}\n            editListTitleRef={this.editListTitleRef}\n            lists={this.state.lists}\n            hideOverlay={() => this.handleHideEditListOverlay()}\n            focusTitleInput={() => this.focusEditListOverlayTitleInput()}\n            startingName={this.state.editListName}\n            startingColor={this.state.editListColor}\n            editList={(oldName, newName, color) =>\n              this.editList(oldName, newName, color)\n            }\n          />\n          <Notification\n            displaying={this.state.notificationDisplaying}\n            hideNotification={() =>\n              this.setState({ notificationDisplaying: false })\n            }\n            title={lastDeletedItemTitle}\n            undo={() => {\n              if (this.state.lastDeletedItem.itemID !== undefined) {\n                this.addListItem(\n                  this.state.lastDeletedItemListName,\n                  this.state.lastDeletedItem.title,\n                  this.state.lastDeletedItem.dueDate,\n                  this.state.lastDeletedItem.description,\n                  this.state.lastDeletedItem.priority\n                );\n              }\n            }}\n            listName={this.state.lastDeletedItemListName}\n          />\n          <div id=\"sidebar\" className=\"p-0\">\n            <Sidebar\n              lists={this.state.lists}\n              firstName={this.state.firstName}\n              lastName={this.state.lastName}\n              currentlySelectedListName={this.state.currentlySelectedListName}\n              setSelectedList={(listName) => this.setSelectedList(listName)}\n              showAddListOverlay={() => this.handleShowAddListOverlay()}\n              deleteList={(listName) => this.deleteList(listName)}\n              showEditListOverlay={(listName, color) =>\n                this.handleShowEditListOverlay(listName, color)\n              }\n            />\n          </div>\n          {listArr.map((list, i) => {\n            return (\n              <React.Fragment key={list.name}>\n                <div id=\"todolist\" className=\"col-5\">\n                  <Todolist\n                    color={list.color}\n                    name={list.name}\n                    items={list.items}\n                    addListItem={(\n                      listName,\n                      title,\n                      dueDate,\n                      description,\n                      priority\n                    ) =>\n                      this.addListItem(\n                        listName,\n                        title,\n                        dueDate,\n                        description,\n                        priority\n                      )\n                    }\n                    deleteListItem={(listName, itemID) =>\n                      this.deleteListItem(listName, itemID)\n                    }\n                    setItemTitle={(listName, itemID, title) =>\n                      this.setItemTitle(listName, itemID, title)\n                    }\n                    setItemCompleted={(listName, itemID, completed) =>\n                      this.setItemCompleted(listName, itemID, completed)\n                    }\n                    setSelectedItem={(itemID) => this.setSelectedItem(itemID)}\n                    selectedItemID={this.state.currentlySelectedItemID}\n                    hideAddListOverlay={() => this.handleHideAddListOverlay()}\n                  />\n                </div>\n                <div id=\"details\" className=\"col-4\">\n                  <Details\n                    listName={list.name}\n                    selectedItemID={selectedItem.itemID}\n                    selectedItemList={selectedItem.originalList}\n                    selectedItemTitle={selectedItem.title}\n                    selectedItemDueDate={selectedItem.dueDate}\n                    selectedItemDescription={selectedItem.description}\n                    selectedItemPriority={selectedItem.priority}\n                    selectedItemCompleted={selectedItem.completed}\n                    setItemTitle={(listName, itemID, title) =>\n                      this.setItemTitle(listName, itemID, title)\n                    }\n                    setItemCompleted={(listName, itemID, completed) =>\n                      this.setItemCompleted(listName, itemID, completed)\n                    }\n                    setItemDueDate={(listName, itemID, dueDate) =>\n                      this.setItemDueDate(listName, itemID, dueDate)\n                    }\n                    setItemPriority={(listName, itemID, priority) =>\n                      this.setItemPriority(listName, itemID, priority)\n                    }\n                    setItemDescription={(listName, itemID, description) =>\n                      this.setItemDescription(listName, itemID, description)\n                    }\n                    handleDelete={(listName, itemID) =>\n                      this.deleteListItem(listName, itemID)\n                    }\n                    hideAddListOverlay={() => this.handleHideAddListOverlay()}\n                  />\n                </div>\n                <div className=\"col-1\"></div>\n                <div id=\"toolbar\" className=\"row col-1 justify-content-center\">\n                  <Toolbar\n                    handleLogOut={() => this.handleLogOut()}\n                    deleteAllCompletedItems={() =>\n                      this.deleteAllCompletedItems()\n                    }\n                  />\n                </div>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction sortListItems(a, b) {\n  if (a.completed && !b.completed) return 1;\n  else if (!a.completed && b.completed) return -1;\n  else if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;\n  else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;\n  else {\n    // both are either completed or incomplete or have a due date set or no due date set\n    if (a.dueDate === b.dueDate) {\n      // sort items due on the same day by priority\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n\n      if (priorityA !== priorityB) return priorityB - priorityA;\n      else {\n        // sort by itemID\n        const itemIDA = a.itemID;\n        const itemIDB = b.itemID;\n        return itemIDA - itemIDB;\n      }\n    } else {\n      // sort items based on date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      return dateA - dateB;\n    }\n  }\n}\n\nfunction ValidateEmail(mail) {\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\n    return true;\n  }\n  return false;\n}\n\nfunction getRandomBGURL() {\n  // visit https://freeimage.host/ to host more background images\n  const backgroundURLs = [\n    \"https://iili.io/J4xbBS.jpg\",\n    \"https://iili.io/J4xtQ2.jpg\",\n    \"https://iili.io/J4z92e.jpg\",\n    \"https://iili.io/J4zdpj.jpg\",\n    \"https://iili.io/J4zJkb.jpg\",\n    \"https://iili.io/J4zWZl.jpg\",\n    \"https://iili.io/J4Weln.jpg\",\n    \"https://iili.io/J4WhoN.jpg\",\n    \"https://iili.io/J4WOKX.jpg\",\n    \"https://iili.io/J4WUN4.jpg\",\n    \"https://iili.io/J4WgDl.jpg\",\n    \"https://iili.io/J4WSRf.jpg\",\n    \"https://iili.io/J4WmDQ.jpg\",\n    \"https://iili.io/J4X9WB.jpg\",\n    \"https://iili.io/J4XHiP.jpg\",\n    \"https://iili.io/J4WyxV.jpg\",\n    \"https://iili.io/JPNuGR.jpg\",\n    \"https://iili.io/JPN53N.jpg\",\n    \"https://iili.io/JPNTCv.jpg\",\n    \"https://iili.io/JiKSp4.jpg\",\n  ];\n  var currBackground = Math.floor(\n    Math.random() * Math.floor(backgroundURLs.length)\n  );\n\n  return 'url(\"' + backgroundURLs[currBackground] + '\")';\n}\n\nfunction dateToStr(date) {\n  var day = date.getDate();\n  if (day < 10) day = \"0\" + day.toString();\n\n  var month = date.getMonth() + 1;\n  if (month < 10) month = \"0\" + month.toString();\n\n  var year = date.getFullYear().toString();\n\n  var formatted = year + \"-\" + month + \"-\" + day;\n\n  return formatted;\n}\n\nfunction checkIfNext7Days(dateStr) {\n  var curr = new Date();\n  for (let i = 0; i < 7; i++) {\n    var d = dateToStr(curr);\n    if (dateStr === d) return true;\n    curr.setDate(curr.getDate() + 1);\n  }\n\n  d = dateToStr(curr);\n  if (dateStr === d) return true;\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}