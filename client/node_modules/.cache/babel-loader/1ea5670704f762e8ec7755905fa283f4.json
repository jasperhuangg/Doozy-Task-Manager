{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Todolist from \"./todolist/Todolist.js\";\nconst domain = \"http://localhost:9000\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: \"\",\n      isLoaded: false,\n      error: null,\n      lists: []\n    };\n  } // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n\n\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: \"Jasper\"\n      /*this.props.username*/\n\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      // order by due date and then by priority\n      var listItems = res;\n      listItems.sort((a, b) => {\n        console.log(\"is sorting\");\n        if (a.completed && !b.completed) return -1;else if (!a.completed && b.completed) return 1;else {\n          if (a.dueDate === b.dueDate) {\n            const priorities = [\"low\", \"medium\", \"high\"];\n            const priorityA = priorities.indexOf(a.priority);\n            const priorityB = priorities.indexOf(b.priority);\n            return priorityB - priorityA;\n          } else {\n            const dateA = Date.parse(a.dueDate);\n            const dateB = Date.parse(b.dueDate);\n            return dateA < dateB;\n          }\n        }\n      });\n      this.setState({\n        isLoaded: true,\n        lists: res\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  } // addItem(listName, title, dueDate, description, priority)\n\n\n  componentDidMount() {\n    this.getLists();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, this.state.lists.map((list, i) => /*#__PURE__*/React.createElement(Todolist, {\n      key: i,\n      color: list.color,\n      name: list.name,\n      items: list.items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nfunction sortListItems(a, b) {\n  console.log(\"is sorting\");\n  if (a.completed && !b.completed) return -1;else if (!a.completed && b.completed) return 1;else {\n    if (a.dueDate === b.dueDate) {\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n      return priorityB - priorityA;\n    } else {\n      const dateA = Date.parse(a.dueDate);\n      const dateB = Date.parse(b.dueDate);\n      return dateA < dateB;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js"],"names":["React","Component","Todolist","domain","App","constructor","props","state","apiResponse","isLoaded","error","lists","getLists","url","body","JSON","stringify","username","fetch","method","headers","then","res","json","listItems","sort","a","b","console","log","completed","dueDate","priorities","priorityA","indexOf","priority","priorityB","dateA","Date","parse","dateB","setState","componentDidMount","render","map","list","i","color","name","items","sortListItems"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Todolist from \"./todolist/Todolist.js\";\n\nconst domain = \"http://localhost:9000\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { apiResponse: \"\", isLoaded: false, error: null, lists: [] };\n  }\n\n  // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: \"Jasper\" /*this.props.username*/,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then(\n        (res) => {\n          // order by due date and then by priority\n          var listItems = res;\n          listItems.sort((a, b) => {\n            console.log(\"is sorting\");\n            if (a.completed && !b.completed) return -1;\n            else if (!a.completed && b.completed) return 1;\n            else {\n              if (a.dueDate === b.dueDate) {\n                const priorities = [\"low\", \"medium\", \"high\"];\n                const priorityA = priorities.indexOf(a.priority);\n                const priorityB = priorities.indexOf(b.priority);\n                return priorityB - priorityA;\n              } else {\n                const dateA = Date.parse(a.dueDate);\n                const dateB = Date.parse(b.dueDate);\n                return dateA < dateB;\n              }\n            }\n          });\n          this.setState({ isLoaded: true, lists: res });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  // addItem(listName, title, dueDate, description, priority)\n\n  componentDidMount() {\n    this.getLists();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.lists.map((list, i) => (\n          <Todolist\n            key={i}\n            color={list.color}\n            name={list.name}\n            items={list.items}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nfunction sortListItems(a, b) {\n  console.log(\"is sorting\");\n  if (a.completed && !b.completed) return -1;\n  else if (!a.completed && b.completed) return 1;\n  else {\n    if (a.dueDate === b.dueDate) {\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n      return priorityB - priorityA;\n    } else {\n      const dateA = Date.parse(a.dueDate);\n      const dateB = Date.parse(b.dueDate);\n      return dateA < dateB;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}