{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport \"./App.css\";\nimport $ from \"jquery\";\nimport Todolist from \"./todolist/Todolist\";\nimport Details from \"./todolist/Details\";\nimport Login from \"./todolist/Login\";\nimport Register from \"./todolist/Register\";\nimport Sidebar from \"./todolist/Sidebar\";\nimport Notification from \"./todolist/Notification\";\nimport Toolbar from \"./todolist/Toolbar\";\nimport AddListOverlay from \"./todolist/AddListOverlay\";\nimport EditListOverlay from \"./todolist/EditListOverlay\";\nimport SettingsOverlay from \"./todolist/SettingsOverlay\";\n\nvar ObjectID = require(\"bson-objectid\");\n\nconst cookies = new Cookies();\nconst domain = \"http://localhost:9000\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      lists: [],\n      username: \"\",\n      currentlySelectedListIndex: 0,\n      currentlySelectedListName: \"\",\n      currentlySelectedItemID: \"\",\n      bgURL: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      loaded: false,\n      notificationDisplaying: false,\n      lastDeletedItem: {},\n      lastDeletedItemListName: \"\",\n      addListOverlayDisplaying: false,\n      editListOverlayDisplaying: false,\n      settingsOverlayDisplaying: false,\n      editListName: \"\",\n      editListColor: \"\",\n      sorting: \"\",\n      background: \"random\",\n      keywords: \"both\"\n    };\n    this.addListTitleRef = React.createRef();\n    this.editListTitleRef = React.createRef();\n    this.settingsRef = React.createRef();\n  }\n\n  componentDidMount() {\n    var username = \"\";\n    var firstName = \"\";\n    var lastName = \"\";\n    var loggedIn = \"not yet\";\n    var docTitle = this.state.docTitle;\n    var sorting = \"dates first\";\n    var background = \"random\";\n    var keywords = \"both\"; // user has signed in previously\n\n    if (cookies.get(\"DoozyLogin\") !== undefined) {\n      username = cookies.get(\"DoozyLogin\").email;\n      firstName = cookies.get(\"DoozyLogin\").firstName;\n      lastName = cookies.get(\"DoozyLogin\").lastName;\n      loggedIn = \"successful\"; // extend the expiration date of the cookie\n\n      var aWeekFromNow = new Date();\n      aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n      cookies.set(\"DoozyLogin\", {\n        email: username,\n        firstName: firstName,\n        lastName: lastName\n      }, {\n        path: \"/\",\n        expires: aWeekFromNow\n      });\n      docTitle = \"Lists | Doozy\";\n    }\n\n    if (username !== \"\") {\n      // make a call to the DB to get the user's settings\n      const url = domain + \"/getSettings\";\n      const body = JSON.stringify({\n        username: username\n      });\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: body\n      }).then(res => res.json()).then(res => {\n        var bgURL = res.background === \"random\" ? getRandomBGURL() : 'url(\"' + res.background + '\")';\n        this.setState({\n          bgURL: bgURL,\n          username: username,\n          firstName: firstName,\n          lastName: lastName,\n          loggedIn: loggedIn,\n          docTitle: docTitle,\n          sorting: res.sorting,\n          keywords: res.keywords,\n          background: bgURL\n        });\n      });\n    } else {\n      $(\"#login-register\").removeClass(\"d-none\");\n      this.setState({\n        username: username,\n        firstName: firstName,\n        lastName: lastName,\n        loggedIn: loggedIn,\n        docTitle: docTitle,\n        sorting: sorting,\n        bgURL: background,\n        background: background,\n        keywords: keywords\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.loaded === false && this.state.loggedIn === \"successful\") {\n      this.setState({\n        loaded: true\n      });\n      this.getLists();\n    }\n  }\n\n  verifyLogin(username, password, authType) {\n    console.log(\"verify login with\", username, password, authType);\n    const url = domain + \"/verifyLogin\";\n    const body = JSON.stringify({\n      username: username,\n      password: password,\n      authType: authType\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      // console.log(res);\n      if (res.success) {\n        this.setState({\n          docTitle: \"Lists | Doozy\",\n          loggedIn: \"successful\",\n          username: username,\n          firstName: res.firstName,\n          lastName: res.lastName,\n          sorting: res.sorting,\n          keywords: res.keywords,\n          background: res.background\n        });\n        this.getLists(); // set a cookie\n\n        var aWeekFromNow = new Date();\n        aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n        cookies.set(\"DoozyLogin\", {\n          email: username,\n          firstName: res.firstName,\n          lastName: res.lastName\n        }, {\n          path: \"/\",\n          expires: aWeekFromNow\n        });\n      } else if (res.info === \"username does not exist\") this.setState({\n        loggedIn: \"username does not exist\"\n      });else if (res.info === \"auth type\") this.setState({\n        loggedIn: \"auth type\",\n        loginOrRegister: \"login\"\n      });else if (res.info === \"incorrect password\") this.setState({\n        loggedIn: \"incorrect password\"\n      });\n    });\n  }\n\n  createAccount(email, firstName, lastName, password, authType) {\n    if (email === \"\" || firstName === \"\" || lastName === \"\" || password === \"\") this.setState({\n      registered: \"empty field(s)\"\n    });else if (!ValidateEmail(email)) this.setState({\n      registered: \"invalid email\"\n    });else if (password.length < 6) this.setState({\n      registered: \"password length\"\n    });else {\n      const url = domain + \"/createAccount\";\n      const body = JSON.stringify({\n        username: email,\n        firstName: firstName,\n        lastName: lastName,\n        password: password,\n        authType: authType\n      });\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: body\n      }).then(res => res.json()).then(res => {\n        if (res.success) {\n          this.setState({\n            docTitle: \"Lists | Doozy\",\n            loggedIn: \"successful\",\n            registered: \"successful\",\n            username: email,\n            firstName: firstName,\n            lastName: lastName,\n            sorting: \"dates first\",\n            keywords: true,\n            background: \"random\"\n          });\n          this.getLists(); // set a cookie\n\n          var aWeekFromNow = new Date();\n          aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n          cookies.set(\"DoozyLogin\", {\n            email: email,\n            firstName: firstName,\n            lastName: lastName\n          }, {\n            path: \"/\",\n            expires: aWeekFromNow\n          });\n        } else if (res.info === \"username already exists\") {\n          this.setState({\n            registered: \"username already exists\"\n          });\n        }\n      });\n    }\n  }\n\n  deleteAllCompletedItems(listName) {\n    if (listName !== \"Today\" && listName !== \"Next 7 Days\" && listName !== \"All\") {\n      var lists = this.state.lists.slice();\n\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === listName) {\n          var items = lists[i].items;\n          var firstCompletedIndex = 0;\n\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].completed) {\n              firstCompletedIndex = j;\n              break;\n            }\n          }\n\n          items = items.slice(0, firstCompletedIndex);\n          break;\n        }\n      }\n\n      const url = domain + \"/deleteCompletedItems\";\n      const body = JSON.stringify({\n        username: this.state.username,\n        listName: listName\n      });\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: body\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          lists: lists\n        });\n        this.getLists();\n      });\n    }\n  }\n\n  setSelectedItem(itemID) {\n    console.log(itemID);\n    this.setState({\n      currentlySelectedItemID: itemID,\n      addListOverlayDisplaying: false\n    });\n  }\n\n  setSelectedList(listName) {\n    var index;\n    if (listName === \"Today\") index = this.state.lists.length - 3;\n    if (listName === \"Next 7 Days\") index = this.state.lists.length - 2;\n    if (listName === \"All\") index = this.state.lists.length - 1;else {\n      for (let i = 0; i < this.state.lists.length; i++) {\n        if (this.state.lists[i].name === listName) {\n          index = i;\n          break;\n        }\n      }\n    }\n    this.setState({\n      currentlySelectedListName: listName,\n      currentlySelectedListIndex: index,\n      currentlySelectedItemID: \"\",\n      addListOverlayDisplaying: false\n    });\n  }\n\n  toggleLoginRegister() {\n    if (this.state.loginOrRegister === \"login\") this.setState({\n      docTitle: \"Sign Up | Doozy\",\n      loginOrRegister: \"register\"\n    });else if (this.state.loginOrRegister === \"register\") this.setState({\n      docTitle: \"Log In | Doozy\",\n      loginOrRegister: \"login\"\n    });\n  }\n\n  getCurrentlySelectedItem() {\n    if (this.state.currentlySelectedItemID === \"\") return {\n      title: \"\",\n      description: \"\",\n      dueDate: \"\",\n      priority: \"\",\n      completed: false,\n      itemID: \"\"\n    };\n    var items = this.state.lists.slice(this.state.currentlySelectedListIndex)[0].items;\n\n    for (let i = 0; i < items.length; i++) if (items[i].itemID === this.state.currentlySelectedItemID) return items[i];\n\n    return {\n      title: \"\",\n      description: \"\",\n      dueDate: \"\",\n      priority: \"\",\n      completed: false,\n      itemID: \"\"\n    };\n  } // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n\n\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: this.state.username\n      /*this.props.username*/\n\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      var lists = res;\n      lists = this.appendSmartLists(lists);\n      const index = this.state.registered === \"successful\" ? 0 : lists.length - 1;\n      const name = lists[index].name;\n      this.setState({\n        lists: lists,\n        currentlySelectedListIndex: index,\n        currentlySelectedListName: name\n      });\n    });\n  }\n\n  appendSmartLists(lists) {\n    var next7Days = this.getNext7Days(lists);\n    var today = this.getToday(lists);\n    var all = this.getAll(lists);\n    lists.push(today);\n    lists.push(next7Days);\n    lists.push(all);\n    return lists;\n  }\n\n  getNext7Days(lists) {\n    var next7Days = {\n      name: \"Next 7 Days\",\n      color: \"\",\n      items: []\n    };\n\n    for (let i = 0; i < lists.length; i++) {\n      const items = lists[i].items;\n\n      for (let j = 0; j < items.length; j++) {\n        if (checkIfNext7Days(items[j].dueDate)) {\n          items[j].originalList = lists[i].name;\n          items[j].color = lists[i].color;\n          next7Days.items.push(items[j]);\n        }\n      }\n    }\n\n    var sortingFunction = this.state.sorting === \"dates first\" ? sortListItemsDatesFirst : sortListItemsPrioritiesFirst;\n    next7Days.items.sort(sortingFunction);\n    return next7Days;\n  }\n\n  getAll(lists) {\n    var all = {\n      name: \"All\",\n      color: \"\",\n      items: []\n    };\n\n    for (let i = 0; i < lists.length; i++) {\n      const items = lists[i].items;\n\n      for (let j = 0; j < items.length; j++) {\n        items[j].originalList = lists[i].name;\n        items[j].color = lists[i].color;\n      }\n\n      all.items = all.items.concat(lists[i].items);\n    }\n\n    var sortingFunction = this.state.sorting === \"dates first\" ? sortListItemsDatesFirst : sortListItemsPrioritiesFirst;\n    all.items.sort(sortingFunction);\n    return all;\n  }\n\n  getToday(lists) {\n    var today = {\n      name: \"Today\",\n      color: \"\",\n      items: []\n    };\n    var t = dateToStr(new Date());\n\n    for (let i = 0; i < lists.length; i++) {\n      const items = lists[i].items;\n\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].dueDate === t) {\n          items[j].originalList = lists[i].name;\n          items[j].color = lists[i].color;\n          today.items.push(items[j]);\n        }\n      }\n    }\n\n    var sortingFunction = this.state.sorting === \"dates first\" ? sortListItemsDatesFirst : sortListItemsPrioritiesFirst;\n    today.items.sort(sortingFunction);\n    return today;\n  }\n\n  addListItem(listName, title, dueDate, description, priority, color, itemID, completed) {\n    const lists = this.state.lists.slice();\n    var sortingFunction = this.state.sorting === \"dates first\" ? sortListItemsDatesFirst : sortListItemsPrioritiesFirst;\n    var id = null;\n    var item = {\n      title: title,\n      description: description,\n      dueDate: dueDate,\n      priority: priority,\n      completed: completed === undefined ? false : completed,\n      originalList: listName,\n      color: color,\n      itemID: itemID === undefined ? new ObjectID().toString() : itemID\n    };\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        items.push(item);\n        id = item.itemID;\n        items.sort(sortingFunction);\n        break;\n      }\n    }\n\n    var today = dateToStr(new Date());\n\n    if (dueDate === today) {\n      lists[lists.length - 3].items.push(item);\n      lists[lists.length - 3].items.sort(sortingFunction);\n    }\n\n    if (checkIfNext7Days(dueDate)) {\n      lists[lists.length - 2].items.push(item);\n      lists[lists.length - 2].items.sort(sortingFunction);\n    }\n\n    lists[lists.length - 1].items.push(item);\n    lists[lists.length - 1].items.sort(sortingFunction);\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: id\n    });\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n      itemID: id\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  deleteListItem(listName, itemID, originalList) {\n    console.log(listName, itemID, originalList);\n    var dueDate = \"\";\n    var item;\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName || lists[i].name === originalList) {\n        var items = lists[i].items;\n        var idx = -1;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            idx = j;\n            dueDate = items[j].dueDate;\n            item = items[j];\n            break;\n          }\n        }\n\n        items = items.splice(idx, 1);\n      }\n    }\n\n    let index = -1;\n    var today = dateToStr(new Date());\n\n    if (dueDate === today) {\n      items = lists[lists.length - 3].items;\n\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].itemID === itemID) {\n          index = j;\n          break;\n        }\n      }\n\n      items = items.splice(index, 1);\n    }\n\n    if (checkIfNext7Days(dueDate)) {\n      items = lists[lists.length - 2].items;\n\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].itemID === itemID) {\n          index = j;\n          break;\n        }\n      }\n\n      items = items.splice(index, 1);\n    }\n\n    items = lists[lists.length - 1].items;\n\n    for (let j = 0; j < items.length; j++) {\n      if (items[j].itemID === itemID) {\n        index = j;\n        break;\n      }\n    }\n\n    items = items.splice(index, 1);\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: \"\",\n      lastDeletedItem: item,\n      lastDeletedItemListName: listName\n    });\n    const url = domain + \"/deleteListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\" ? item.originalList : listName,\n      itemID: itemID\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.text());\n    this.handleDisplayNotification();\n  }\n\n  setItemTitle(listName, itemID, title) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].title = title;\n            item = items[j];\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].title = title;\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n    const url = domain + \"/setItemTitle\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\" ? item.originalList : listName,\n      itemID: itemID,\n      title: title\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.text());\n  }\n\n  setItemCompleted(listName, itemID, completed) {\n    var sortingFunction = this.state.sorting === \"dates first\" ? sortListItemsDatesFirst : sortListItemsPrioritiesFirst;\n    var lists = this.state.lists.slice();\n    var item = undefined;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].completed = completed;\n            item = items[j];\n            items.sort(sortingFunction);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].completed = completed;\n              items.sort(sortingFunction);\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemCompleted\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\" ? item.originalList : listName,\n      itemID: itemID,\n      completed: completed\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setItemDueDate(listName, itemID, dueDate) {\n    var sortingFunction = this.state.sorting === \"dates first\" ? sortListItemsDatesFirst : sortListItemsPrioritiesFirst;\n    var lists = this.state.lists.slice();\n    var item = undefined;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].dueDate = dueDate;\n            item = items[j];\n            items.sort(sortingFunction);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].dueDate = dueDate;\n              items.sort(sortingFunction);\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemDueDate\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\" ? item.originalList : listName,\n      itemID: itemID,\n      dueDate: dueDate\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setItemPriority(listName, itemID, priority) {\n    var sortingFunction = this.state.sorting === \"dates first\" ? sortListItemsDatesFirst : sortListItemsPrioritiesFirst;\n    var lists = this.state.lists.slice();\n    var item = undefined;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].priority = priority;\n            item = items[j];\n            items.sort(sortingFunction);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].priority = priority;\n              items.sort(sortingFunction);\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemPriority\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\" ? item.originalList : listName,\n      itemID: itemID,\n      priority: priority\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setItemDescription(listName, itemID, description) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].description = description;\n            item = items[j];\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].description = description;\n              break;\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemDescription\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\" ? item.originalList : listName,\n      itemID: itemID,\n      description: description\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  handleLogOut() {\n    // delete the cookie\n    cookies.remove(\"DoozyLogin\"); // const bgURL = getRandomBGURL();\n    // reset state back to start\n\n    this.setState({\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      lists: [],\n      username: \"\",\n      currentlySelectedListIndex: 0,\n      currentlySelectedListName: \"\",\n      currentlySelectedItemID: \"\",\n      // bgURL: bgURL,\n      firstName: \"\",\n      lastName: \"\",\n      loaded: false\n    });\n  }\n\n  createEmptyList(listName, color) {\n    var list = {\n      name: listName,\n      color: color,\n      items: []\n    };\n    var lists = this.state.lists.slice();\n    lists.splice(lists.length - 3, 0, list);\n    this.setState({\n      lists: lists,\n      currentlySelectedListIndex: lists.length - 4,\n      currentlySelectedListName: listName\n    });\n    const url = domain + \"/createEmptyList\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      color: color\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  focusAddListOverlayTitleInput() {\n    this.addListTitleRef.current.focus();\n  }\n\n  focusEditListOverlayTitleInput() {\n    this.editListTitleRef.current.focus();\n  }\n\n  deleteList(listName) {\n    var idx = -1;\n    var lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) if (lists[i].name === listName) {\n      idx = i;\n      break;\n    }\n\n    lists.splice(idx, 1);\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: \"\",\n      currentlySelectedListIndex: idx - 1 >= 0 ? idx - 1 : 2,\n      currentlySelectedListName: idx - 1 >= 0 ? lists[idx - 1].name : lists[2].name\n    });\n    const url = domain + \"/deleteList\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  editList(oldName, newName, color) {\n    var lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === oldName) {\n        lists[i].name = newName;\n        lists[i].color = color;\n        var items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          items[j].originalList = newName;\n          items[j].color = color;\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/editList\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      oldName: oldName,\n      newName: newName,\n      color: color\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  handleDisplayNotification() {\n    this.setState({\n      notificationDisplaying: true\n    });\n    setTimeout(() => {\n      this.setState({\n        notificationDisplaying: false\n      });\n    }, 4000);\n  }\n\n  handleShowAddListOverlay() {\n    this.setState({\n      addListOverlayDisplaying: true\n    });\n    $(\".add-list-overlay-color-selected\").removeClass(\".add-list-overlay-color-selected\");\n    this.addListTitleRef.current.value = \"\";\n    setTimeout(() => {\n      this.addListTitleRef.current.focus();\n    }, 500);\n  }\n\n  handleShowEditListOverlay(listName, color) {\n    this.setState({\n      editListOverlayDisplaying: true,\n      editListColor: color,\n      editListName: listName\n    });\n    this.editListTitleRef.current.value = listName;\n    setTimeout(() => {\n      this.editListTitleRef.current.focus();\n    }, 500);\n  }\n\n  handleShowSettingsOverlay() {\n    this.setState({\n      settingsOverlayDisplaying: true\n    });\n    setTimeout(() => {\n      this.settingsRef.current.focus();\n    }, 500);\n  }\n\n  handleHideAddListOverlay() {\n    this.setState({\n      addListOverlayDisplaying: false\n    });\n  }\n\n  handleHideEditListOverlay() {\n    this.setState({\n      editListOverlayDisplaying: false,\n      editListColor: \"\",\n      editListName: \"\"\n    });\n  }\n\n  setBackgroundSetting(background) {\n    this.setState({\n      background: background,\n      bgURL: 'url(\"' + background + '\")'\n    });\n  }\n\n  setKeywordsSetting(keywordsEnabled) {\n    this.setState({\n      keywords: keywordsEnabled\n    });\n  }\n\n  setSortingSetting(sortingType) {\n    this.setState({\n      sorting: sortingType\n    });\n  }\n\n  render() {\n    document.title = this.state.docTitle;\n    const listArr = this.state.lists.slice(this.state.currentlySelectedListIndex, this.state.currentlySelectedListIndex + 1);\n    var lastDeletedItemTitle = \"\";\n    if (this.state.lastDeletedItem !== undefined) lastDeletedItemTitle = this.state.lastDeletedItem.title;\n    const selectedItem = this.getCurrentlySelectedItem();\n    const appClasses = \"row align-items-center\" + (this.state.loggedIn === \"successful\" ? \"\" : \" d-none\");\n    const loginRegClasses = \"container-fluid align-items-center\" + (this.state.loggedIn === \"successful\" ? \" d-none\" : \" d-flex \");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login-register\",\n      style: {\n        backgroundImage: this.state.bgURL\n      },\n      className: loginRegClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-section\" + (this.state.loginOrRegister === \"login\" ? \"\" : \" d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1169,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      loginInfo: this.state.loggedIn,\n      verifyLogin: (username, password, authType) => this.verifyLogin(username, password, authType),\n      createAccount: (email, fName, lName, password, authType) => this.createAccount(email, fName, lName, password, authType),\n      switchToRegister: () => this.toggleLoginRegister(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-section\" + (this.state.loginOrRegister === \"register\" ? \"\" : \" d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1186,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Register, {\n      switchToLogin: () => this.toggleLoginRegister(),\n      verifyLogin: (username, password, authType) => this.verifyLogin(username, password, authType),\n      createAccount: (email, fName, lName, password, authType) => this.createAccount(email, fName, lName, password, authType),\n      registerInfo: this.state.registered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"app\",\n      style: {\n        backgroundImage: this.state.bgURL\n      },\n      className: appClasses,\n      onKeyDown: e => {\n        console.log(\"registered\");\n\n        if (e.keyCode === 27) {\n          if (this.state.addListOverlayDisplaying) this.setState({\n            addListOverlayDisplaying: false\n          });else if (this.state.settingsOverlayDisplaying) this.setState({\n            settingsOverlayDisplaying: false\n          });else if (this.state.editListOverlayDisplaying) this.setState({\n            editListOverlayDisplaying: false\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1204,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddListOverlay, {\n      id: \"addListOverlay\",\n      displaying: this.state.addListOverlayDisplaying,\n      addListTitleRef: this.addListTitleRef,\n      lists: this.state.lists,\n      hideOverlay: () => this.handleHideAddListOverlay(),\n      createList: (listName, color) => this.createEmptyList(listName, color),\n      focusTitleInput: () => this.focusAddListOverlayTitleInput(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(EditListOverlay, {\n      id: \"editListOverlay\",\n      displaying: this.state.editListOverlayDisplaying,\n      editListTitleRef: this.editListTitleRef,\n      lists: this.state.lists,\n      hideOverlay: () => this.handleHideEditListOverlay(),\n      focusTitleInput: () => this.focusEditListOverlayTitleInput(),\n      startingName: this.state.editListName,\n      startingColor: this.state.editListColor,\n      editList: (oldName, newName, color) => this.editList(oldName, newName, color),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1231,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(SettingsOverlay, {\n      settingsRef: this.settingsRef,\n      displaying: this.state.settingsOverlayDisplaying,\n      sorting: this.state.sorting,\n      keywords: this.state.keywords,\n      background: this.state.background,\n      setKeywordsSetting: keywords => this.setKeywordsSetting(keywords),\n      setSortingSetting: sorting => this.setSortingSetting(sorting),\n      setBackgroundSetting: bg => this.setBackgroundSetting(bg),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Notification, {\n      displaying: this.state.notificationDisplaying,\n      hideNotification: () => this.setState({\n        notificationDisplaying: false\n      }),\n      title: lastDeletedItemTitle,\n      undo: () => {\n        if (this.state.lastDeletedItem.itemID !== undefined) {\n          this.addListItem(this.state.lastDeletedItem.originalList, this.state.lastDeletedItem.title, this.state.lastDeletedItem.dueDate, this.state.lastDeletedItem.description, this.state.lastDeletedItem.priority, this.state.lastDeletedItem.color, this.state.lastDeletedItem.itemID, this.state.lastDeletedItem.completed);\n        }\n      },\n      listName: this.state.lastDeletedItemListName,\n      originalList: this.state.lastDeletedItem.originalList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1254,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sidebar\",\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1277,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      username: this.state.username,\n      lists: this.state.lists,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      currentlySelectedListName: this.state.currentlySelectedListName,\n      setSelectedList: listName => this.setSelectedList(listName),\n      showAddListOverlay: () => this.handleShowAddListOverlay(),\n      deleteList: listName => this.deleteList(listName),\n      showEditListOverlay: (listName, color) => this.handleShowEditListOverlay(listName, color),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 13\n      }\n    })), listArr.map((list, i) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: list.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1294,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"todolist\",\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1295,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Todolist, {\n        color: list.color,\n        name: list.name,\n        items: list.items,\n        addListItem: (listName, title, dueDate, description, priority, color) => this.addListItem(listName, title, dueDate, description, priority, color),\n        deleteListItem: (listName, itemID, originalList) => this.deleteListItem(listName, itemID, originalList),\n        setItemTitle: (listName, itemID, title) => this.setItemTitle(listName, itemID, title),\n        setItemCompleted: (listName, itemID, completed) => this.setItemCompleted(listName, itemID, completed),\n        setSelectedItem: itemID => this.setSelectedItem(itemID),\n        selectedItemID: this.state.currentlySelectedItemID,\n        hideAddListOverlay: () => this.handleHideAddListOverlay(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1296,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"details\",\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1331,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Details, {\n        listName: list.name,\n        selectedItemID: selectedItem.itemID,\n        selectedItemColor: selectedItem.color,\n        selectedItemList: selectedItem.originalList,\n        selectedItemTitle: selectedItem.title,\n        selectedItemDueDate: selectedItem.dueDate,\n        selectedItemDescription: selectedItem.description,\n        selectedItemPriority: selectedItem.priority,\n        selectedItemCompleted: selectedItem.completed,\n        setItemTitle: (listName, itemID, title) => this.setItemTitle(listName, itemID, title),\n        setItemCompleted: (listName, itemID, completed) => this.setItemCompleted(listName, itemID, completed),\n        setItemDueDate: (listName, itemID, dueDate) => this.setItemDueDate(listName, itemID, dueDate),\n        setItemPriority: (listName, itemID, priority) => this.setItemPriority(listName, itemID, priority),\n        setItemDescription: (listName, itemID, description) => this.setItemDescription(listName, itemID, description),\n        handleDelete: (listName, itemID, originalList) => this.deleteListItem(listName, itemID, originalList),\n        hideAddListOverlay: () => this.handleHideAddListOverlay(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1363,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"toolbar\",\n        className: \"row col-1 justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1364,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Toolbar, {\n        handleLogOut: () => this.handleLogOut(),\n        deleteAllCompletedItems: () => {\n          this.deleteAllCompletedItems(this.state.currentlySelectedListName);\n        },\n        currentlySelectedListName: this.state.currentlySelectedListName,\n        handleShowSettingsOverlay: () => this.handleShowSettingsOverlay(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1365,\n          columnNumber: 19\n        }\n      })));\n    })));\n  }\n\n}\n\nfunction sortListItemsDatesFirst(a, b) {\n  if (a.completed && !b.completed) return 1;else if (!a.completed && b.completed) return -1;else if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;else {\n    // both are either completed or incomplete or have a due date set or no due date set\n    if (a.dueDate === b.dueDate) {\n      // sort items due on the same day by priority\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n      if (priorityA !== priorityB) return priorityB - priorityA;else {\n        // sort by itemID\n        const itemIDA = a.itemID;\n        const itemIDB = b.itemID;\n        return itemIDA - itemIDB;\n      }\n    } else {\n      // sort items based on date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      return dateA - dateB;\n    }\n  }\n}\n\nfunction sortListItemsPrioritiesFirst(a, b) {\n  if (a.completed && !b.completed) return 1;else if (!a.completed && b.completed) return -1;else {\n    // sort items by priority first\n    const priorities = [\"low\", \"medium\", \"high\"];\n    const priorityA = priorities.indexOf(a.priority);\n    const priorityB = priorities.indexOf(b.priority); // if they have the same priority, sort by due date\n\n    if (priorityB === priorityA) {\n      if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1; // sort items based on due date\n\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      if (a.dueDate !== b.dueDate) return dateA - dateB;else {\n        // sort by itemID\n        const itemIDA = a.itemID;\n        const itemIDB = b.itemID;\n        return itemIDA - itemIDB;\n      }\n    } else return priorityB - priorityA;\n  }\n}\n\nfunction ValidateEmail(mail) {\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getRandomBGURL() {\n  // visit https://freeimage.host/ to host more background images\n  const backgroundURLs = [\"https://iili.io/J4xbBS.jpg\", \"https://iili.io/J4xtQ2.jpg\", \"https://iili.io/J4z92e.jpg\", \"https://iili.io/J4zdpj.jpg\", \"https://iili.io/J4zJkb.jpg\", \"https://iili.io/J4zWZl.jpg\", \"https://iili.io/J4Weln.jpg\", \"https://iili.io/J4WhoN.jpg\", \"https://iili.io/J4WOKX.jpg\", \"https://iili.io/J4WUN4.jpg\", \"https://iili.io/J4WgDl.jpg\", \"https://iili.io/J4WmDQ.jpg\", \"https://iili.io/J4X9WB.jpg\", \"https://iili.io/J4XHiP.jpg\", \"https://iili.io/J4WyxV.jpg\", \"https://iili.io/JPNuGR.jpg\", \"https://iili.io/JPN53N.jpg\", \"https://iili.io/JPNTCv.jpg\", \"https://iili.io/JiKSp4.jpg\", \"https://iili.io/Jszxun.jpg\", \"https://iili.io/JszAG4.jpg\", \"https://iili.io/JszIZG.jpg\", \"https://iili.io/Jszzjs.jpg\", \"https://iili.io/Jszunf.jpg\"];\n  var currBackground = Math.floor(Math.random() * Math.floor(backgroundURLs.length));\n  return 'url(\"' + backgroundURLs[currBackground] + '\")';\n}\n\nfunction dateToStr(date) {\n  var day = date.getDate();\n  if (day < 10) day = \"0\" + day.toString();\n  var month = date.getMonth() + 1;\n  if (month < 10) month = \"0\" + month.toString();\n  var year = date.getFullYear().toString();\n  var formatted = year + \"-\" + month + \"-\" + day;\n  return formatted;\n}\n\nfunction checkIfNext7Days(dateStr) {\n  var curr = new Date();\n\n  for (let i = 0; i < 7; i++) {\n    var d = dateToStr(curr);\n    if (dateStr === d) return true;\n    curr.setDate(curr.getDate() + 1);\n  }\n\n  d = dateToStr(curr);\n  if (dateStr === d) return true;\n  return false;\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/App.js"],"names":["React","Component","Cookies","$","Todolist","Details","Login","Register","Sidebar","Notification","Toolbar","AddListOverlay","EditListOverlay","SettingsOverlay","ObjectID","require","cookies","domain","App","constructor","props","state","docTitle","loggedIn","registered","loginOrRegister","lists","username","currentlySelectedListIndex","currentlySelectedListName","currentlySelectedItemID","bgURL","firstName","lastName","loaded","notificationDisplaying","lastDeletedItem","lastDeletedItemListName","addListOverlayDisplaying","editListOverlayDisplaying","settingsOverlayDisplaying","editListName","editListColor","sorting","background","keywords","addListTitleRef","createRef","editListTitleRef","settingsRef","componentDidMount","get","undefined","email","aWeekFromNow","Date","setDate","getDate","set","path","expires","url","body","JSON","stringify","fetch","method","headers","then","res","json","getRandomBGURL","setState","removeClass","componentDidUpdate","getLists","verifyLogin","password","authType","console","log","success","info","createAccount","ValidateEmail","length","deleteAllCompletedItems","listName","slice","i","name","items","firstCompletedIndex","j","completed","setSelectedItem","itemID","setSelectedList","index","toggleLoginRegister","getCurrentlySelectedItem","title","description","dueDate","priority","appendSmartLists","next7Days","getNext7Days","today","getToday","all","getAll","push","color","checkIfNext7Days","originalList","sortingFunction","sortListItemsDatesFirst","sortListItemsPrioritiesFirst","sort","concat","t","dateToStr","addListItem","id","item","toString","deleteListItem","idx","splice","text","handleDisplayNotification","setItemTitle","setItemCompleted","setItemDueDate","setItemPriority","setItemDescription","handleLogOut","remove","createEmptyList","list","focusAddListOverlayTitleInput","current","focus","focusEditListOverlayTitleInput","deleteList","editList","oldName","newName","setTimeout","handleShowAddListOverlay","value","handleShowEditListOverlay","handleShowSettingsOverlay","handleHideAddListOverlay","handleHideEditListOverlay","setBackgroundSetting","setKeywordsSetting","keywordsEnabled","setSortingSetting","sortingType","render","document","listArr","lastDeletedItemTitle","selectedItem","appClasses","loginRegClasses","backgroundImage","fName","lName","e","keyCode","bg","map","a","b","priorities","priorityA","indexOf","priorityB","itemIDA","itemIDB","dateA","dateB","mail","test","backgroundURLs","currBackground","Math","floor","random","date","day","month","getMonth","year","getFullYear","formatted","dateStr","curr","d"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport \"./App.css\";\n\nimport $ from \"jquery\";\n\nimport Todolist from \"./todolist/Todolist\";\nimport Details from \"./todolist/Details\";\nimport Login from \"./todolist/Login\";\nimport Register from \"./todolist/Register\";\nimport Sidebar from \"./todolist/Sidebar\";\nimport Notification from \"./todolist/Notification\";\nimport Toolbar from \"./todolist/Toolbar\";\nimport AddListOverlay from \"./todolist/AddListOverlay\";\nimport EditListOverlay from \"./todolist/EditListOverlay\";\nimport SettingsOverlay from \"./todolist/SettingsOverlay\";\n\nvar ObjectID = require(\"bson-objectid\");\nconst cookies = new Cookies();\n\nconst domain = \"http://localhost:9000\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      lists: [],\n      username: \"\",\n      currentlySelectedListIndex: 0,\n      currentlySelectedListName: \"\",\n      currentlySelectedItemID: \"\",\n      bgURL: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      loaded: false,\n      notificationDisplaying: false,\n      lastDeletedItem: {},\n      lastDeletedItemListName: \"\",\n      addListOverlayDisplaying: false,\n      editListOverlayDisplaying: false,\n      settingsOverlayDisplaying: false,\n      editListName: \"\",\n      editListColor: \"\",\n      sorting: \"\",\n      background: \"random\",\n      keywords: \"both\",\n    };\n    this.addListTitleRef = React.createRef();\n    this.editListTitleRef = React.createRef();\n    this.settingsRef = React.createRef();\n  }\n\n  componentDidMount() {\n    var username = \"\";\n    var firstName = \"\";\n    var lastName = \"\";\n    var loggedIn = \"not yet\";\n    var docTitle = this.state.docTitle;\n    var sorting = \"dates first\";\n    var background = \"random\";\n    var keywords = \"both\";\n\n    // user has signed in previously\n    if (cookies.get(\"DoozyLogin\") !== undefined) {\n      username = cookies.get(\"DoozyLogin\").email;\n      firstName = cookies.get(\"DoozyLogin\").firstName;\n      lastName = cookies.get(\"DoozyLogin\").lastName;\n      loggedIn = \"successful\";\n\n      // extend the expiration date of the cookie\n      var aWeekFromNow = new Date();\n      aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n      cookies.set(\n        \"DoozyLogin\",\n        { email: username, firstName: firstName, lastName: lastName },\n        {\n          path: \"/\",\n          expires: aWeekFromNow,\n        }\n      );\n      docTitle = \"Lists | Doozy\";\n    }\n\n    if (username !== \"\") {\n      // make a call to the DB to get the user's settings\n      const url = domain + \"/getSettings\";\n      const body = JSON.stringify({\n        username: username,\n      });\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: body,\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          var bgURL =\n            res.background === \"random\"\n              ? getRandomBGURL()\n              : 'url(\"' + res.background + '\")';\n\n          this.setState({\n            bgURL: bgURL,\n            username: username,\n            firstName: firstName,\n            lastName: lastName,\n            loggedIn: loggedIn,\n            docTitle: docTitle,\n            sorting: res.sorting,\n            keywords: res.keywords,\n            background: bgURL,\n          });\n        });\n    } else {\n      $(\"#login-register\").removeClass(\"d-none\");\n      this.setState({\n        username: username,\n        firstName: firstName,\n        lastName: lastName,\n        loggedIn: loggedIn,\n        docTitle: docTitle,\n        sorting: sorting,\n        bgURL: background,\n        background: background,\n        keywords: keywords,\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.loaded === false && this.state.loggedIn === \"successful\") {\n      this.setState({ loaded: true });\n      this.getLists();\n    }\n  }\n\n  verifyLogin(username, password, authType) {\n    console.log(\"verify login with\", username, password, authType);\n    const url = domain + \"/verifyLogin\";\n    const body = JSON.stringify({\n      username: username,\n      password: password,\n      authType: authType,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        // console.log(res);\n        if (res.success) {\n          this.setState({\n            docTitle: \"Lists | Doozy\",\n            loggedIn: \"successful\",\n            username: username,\n            firstName: res.firstName,\n            lastName: res.lastName,\n            sorting: res.sorting,\n            keywords: res.keywords,\n            background: res.background,\n          });\n          this.getLists();\n          // set a cookie\n          var aWeekFromNow = new Date();\n          aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n          cookies.set(\n            \"DoozyLogin\",\n            {\n              email: username,\n              firstName: res.firstName,\n              lastName: res.lastName,\n            },\n            {\n              path: \"/\",\n              expires: aWeekFromNow,\n            }\n          );\n        } else if (res.info === \"username does not exist\")\n          this.setState({ loggedIn: \"username does not exist\" });\n        else if (res.info === \"auth type\")\n          this.setState({ loggedIn: \"auth type\", loginOrRegister: \"login\" });\n        else if (res.info === \"incorrect password\")\n          this.setState({ loggedIn: \"incorrect password\" });\n      });\n  }\n\n  createAccount(email, firstName, lastName, password, authType) {\n    if (email === \"\" || firstName === \"\" || lastName === \"\" || password === \"\")\n      this.setState({ registered: \"empty field(s)\" });\n    else if (!ValidateEmail(email))\n      this.setState({ registered: \"invalid email\" });\n    else if (password.length < 6)\n      this.setState({ registered: \"password length\" });\n    else {\n      const url = domain + \"/createAccount\";\n      const body = JSON.stringify({\n        username: email,\n        firstName: firstName,\n        lastName: lastName,\n        password: password,\n        authType: authType,\n      });\n\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: body,\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          if (res.success) {\n            this.setState({\n              docTitle: \"Lists | Doozy\",\n              loggedIn: \"successful\",\n              registered: \"successful\",\n              username: email,\n              firstName: firstName,\n              lastName: lastName,\n              sorting: \"dates first\",\n              keywords: true,\n              background: \"random\",\n            });\n            this.getLists();\n            // set a cookie\n            var aWeekFromNow = new Date();\n            aWeekFromNow.setDate(aWeekFromNow.getDate() + 7);\n            cookies.set(\n              \"DoozyLogin\",\n              { email: email, firstName: firstName, lastName: lastName },\n              {\n                path: \"/\",\n                expires: aWeekFromNow,\n              }\n            );\n          } else if (res.info === \"username already exists\") {\n            this.setState({ registered: \"username already exists\" });\n          }\n        });\n    }\n  }\n\n  deleteAllCompletedItems(listName) {\n    if (\n      listName !== \"Today\" &&\n      listName !== \"Next 7 Days\" &&\n      listName !== \"All\"\n    ) {\n      var lists = this.state.lists.slice();\n\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === listName) {\n          var items = lists[i].items;\n          var firstCompletedIndex = 0;\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].completed) {\n              firstCompletedIndex = j;\n              break;\n            }\n          }\n          items = items.slice(0, firstCompletedIndex);\n          break;\n        }\n      }\n\n      const url = domain + \"/deleteCompletedItems\";\n      const body = JSON.stringify({\n        username: this.state.username,\n        listName: listName,\n      });\n\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: body,\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          this.setState({ lists: lists });\n          this.getLists();\n        });\n    }\n  }\n\n  setSelectedItem(itemID) {\n    console.log(itemID);\n    this.setState({\n      currentlySelectedItemID: itemID,\n      addListOverlayDisplaying: false,\n    });\n  }\n\n  setSelectedList(listName) {\n    var index;\n\n    if (listName === \"Today\") index = this.state.lists.length - 3;\n    if (listName === \"Next 7 Days\") index = this.state.lists.length - 2;\n    if (listName === \"All\") index = this.state.lists.length - 1;\n    else {\n      for (let i = 0; i < this.state.lists.length; i++) {\n        if (this.state.lists[i].name === listName) {\n          index = i;\n          break;\n        }\n      }\n    }\n    this.setState({\n      currentlySelectedListName: listName,\n      currentlySelectedListIndex: index,\n      currentlySelectedItemID: \"\",\n      addListOverlayDisplaying: false,\n    });\n  }\n\n  toggleLoginRegister() {\n    if (this.state.loginOrRegister === \"login\")\n      this.setState({\n        docTitle: \"Sign Up | Doozy\",\n        loginOrRegister: \"register\",\n      });\n    else if (this.state.loginOrRegister === \"register\")\n      this.setState({\n        docTitle: \"Log In | Doozy\",\n        loginOrRegister: \"login\",\n      });\n  }\n\n  getCurrentlySelectedItem() {\n    if (this.state.currentlySelectedItemID === \"\")\n      return {\n        title: \"\",\n        description: \"\",\n        dueDate: \"\",\n        priority: \"\",\n        completed: false,\n        itemID: \"\",\n      };\n\n    var items = this.state.lists.slice(this.state.currentlySelectedListIndex)[0]\n      .items;\n\n    for (let i = 0; i < items.length; i++)\n      if (items[i].itemID === this.state.currentlySelectedItemID)\n        return items[i];\n\n    return {\n      title: \"\",\n      description: \"\",\n      dueDate: \"\",\n      priority: \"\",\n      completed: false,\n      itemID: \"\",\n    };\n  }\n\n  // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: this.state.username /*this.props.username*/,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        var lists = res;\n\n        lists = this.appendSmartLists(lists);\n\n        const index =\n          this.state.registered === \"successful\" ? 0 : lists.length - 1;\n        const name = lists[index].name;\n        this.setState({\n          lists: lists,\n          currentlySelectedListIndex: index,\n          currentlySelectedListName: name,\n        });\n      });\n  }\n\n  appendSmartLists(lists) {\n    var next7Days = this.getNext7Days(lists);\n    var today = this.getToday(lists);\n    var all = this.getAll(lists);\n\n    lists.push(today);\n    lists.push(next7Days);\n    lists.push(all);\n\n    return lists;\n  }\n\n  getNext7Days(lists) {\n    var next7Days = {\n      name: \"Next 7 Days\",\n      color: \"\",\n      items: [],\n    };\n\n    for (let i = 0; i < lists.length; i++) {\n      const items = lists[i].items;\n      for (let j = 0; j < items.length; j++) {\n        if (checkIfNext7Days(items[j].dueDate)) {\n          items[j].originalList = lists[i].name;\n          items[j].color = lists[i].color;\n          next7Days.items.push(items[j]);\n        }\n      }\n    }\n    var sortingFunction =\n      this.state.sorting === \"dates first\"\n        ? sortListItemsDatesFirst\n        : sortListItemsPrioritiesFirst;\n    next7Days.items.sort(sortingFunction);\n\n    return next7Days;\n  }\n\n  getAll(lists) {\n    var all = {\n      name: \"All\",\n      color: \"\",\n      items: [],\n    };\n\n    for (let i = 0; i < lists.length; i++) {\n      const items = lists[i].items;\n\n      for (let j = 0; j < items.length; j++) {\n        items[j].originalList = lists[i].name;\n        items[j].color = lists[i].color;\n      }\n\n      all.items = all.items.concat(lists[i].items);\n    }\n\n    var sortingFunction =\n      this.state.sorting === \"dates first\"\n        ? sortListItemsDatesFirst\n        : sortListItemsPrioritiesFirst;\n    all.items.sort(sortingFunction);\n\n    return all;\n  }\n\n  getToday(lists) {\n    var today = {\n      name: \"Today\",\n      color: \"\",\n      items: [],\n    };\n\n    var t = dateToStr(new Date());\n\n    for (let i = 0; i < lists.length; i++) {\n      const items = lists[i].items;\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].dueDate === t) {\n          items[j].originalList = lists[i].name;\n          items[j].color = lists[i].color;\n          today.items.push(items[j]);\n        }\n      }\n    }\n    var sortingFunction =\n      this.state.sorting === \"dates first\"\n        ? sortListItemsDatesFirst\n        : sortListItemsPrioritiesFirst;\n    today.items.sort(sortingFunction);\n\n    return today;\n  }\n\n  addListItem(\n    listName,\n    title,\n    dueDate,\n    description,\n    priority,\n    color,\n    itemID,\n    completed\n  ) {\n    const lists = this.state.lists.slice();\n    var sortingFunction =\n      this.state.sorting === \"dates first\"\n        ? sortListItemsDatesFirst\n        : sortListItemsPrioritiesFirst;\n\n    var id = null;\n    var item = {\n      title: title,\n      description: description,\n      dueDate: dueDate,\n      priority: priority,\n      completed: completed === undefined ? false : completed,\n      originalList: listName,\n      color: color,\n      itemID: itemID === undefined ? new ObjectID().toString() : itemID,\n    };\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        items.push(item);\n        id = item.itemID;\n\n        items.sort(sortingFunction);\n        break;\n      }\n    }\n\n    var today = dateToStr(new Date());\n    if (dueDate === today) {\n      lists[lists.length - 3].items.push(item);\n      lists[lists.length - 3].items.sort(sortingFunction);\n    }\n    if (checkIfNext7Days(dueDate)) {\n      lists[lists.length - 2].items.push(item);\n      lists[lists.length - 2].items.sort(sortingFunction);\n    }\n    lists[lists.length - 1].items.push(item);\n    lists[lists.length - 1].items.sort(sortingFunction);\n\n    this.setState({ lists: lists, currentlySelectedItemID: id });\n\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n      itemID: id,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  deleteListItem(listName, itemID, originalList) {\n    console.log(listName, itemID, originalList);\n    var dueDate = \"\";\n    var item;\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName || lists[i].name === originalList) {\n        var items = lists[i].items;\n        var idx = -1;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            idx = j;\n            dueDate = items[j].dueDate;\n            item = items[j];\n            break;\n          }\n        }\n        items = items.splice(idx, 1);\n      }\n    }\n\n    let index = -1;\n    var today = dateToStr(new Date());\n    if (dueDate === today) {\n      items = lists[lists.length - 3].items;\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].itemID === itemID) {\n          index = j;\n          break;\n        }\n      }\n      items = items.splice(index, 1);\n    }\n    if (checkIfNext7Days(dueDate)) {\n      items = lists[lists.length - 2].items;\n      for (let j = 0; j < items.length; j++) {\n        if (items[j].itemID === itemID) {\n          index = j;\n          break;\n        }\n      }\n      items = items.splice(index, 1);\n    }\n    items = lists[lists.length - 1].items;\n    for (let j = 0; j < items.length; j++) {\n      if (items[j].itemID === itemID) {\n        index = j;\n        break;\n      }\n    }\n    items = items.splice(index, 1);\n\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: \"\",\n      lastDeletedItem: item,\n      lastDeletedItemListName: listName,\n    });\n\n    const url = domain + \"/deleteListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName:\n        listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\"\n          ? item.originalList\n          : listName,\n      itemID: itemID,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    }).then((res) => res.text());\n    this.handleDisplayNotification();\n  }\n\n  setItemTitle(listName, itemID, title) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].title = title;\n            item = items[j];\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].title = title;\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n\n    const url = domain + \"/setItemTitle\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName:\n        listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\"\n          ? item.originalList\n          : listName,\n      itemID: itemID,\n      title: title,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    }).then((res) => res.text());\n  }\n\n  setItemCompleted(listName, itemID, completed) {\n    var sortingFunction =\n      this.state.sorting === \"dates first\"\n        ? sortListItemsDatesFirst\n        : sortListItemsPrioritiesFirst;\n    var lists = this.state.lists.slice();\n    var item = undefined;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].completed = completed;\n            item = items[j];\n            items.sort(sortingFunction);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].completed = completed;\n              items.sort(sortingFunction);\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemCompleted\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName:\n        listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\"\n          ? item.originalList\n          : listName,\n      itemID: itemID,\n      completed: completed,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setItemDueDate(listName, itemID, dueDate) {\n    var sortingFunction =\n      this.state.sorting === \"dates first\"\n        ? sortListItemsDatesFirst\n        : sortListItemsPrioritiesFirst;\n    var lists = this.state.lists.slice();\n    var item = undefined;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].dueDate = dueDate;\n            item = items[j];\n            items.sort(sortingFunction);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].dueDate = dueDate;\n              items.sort(sortingFunction);\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemDueDate\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName:\n        listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\"\n          ? item.originalList\n          : listName,\n      itemID: itemID,\n      dueDate: dueDate,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setItemPriority(listName, itemID, priority) {\n    var sortingFunction =\n      this.state.sorting === \"dates first\"\n        ? sortListItemsDatesFirst\n        : sortListItemsPrioritiesFirst;\n\n    var lists = this.state.lists.slice();\n    var item = undefined;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].priority = priority;\n            item = items[j];\n            items.sort(sortingFunction);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].priority = priority;\n              items.sort(sortingFunction);\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemPriority\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName:\n        listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\"\n          ? item.originalList\n          : listName,\n      itemID: itemID,\n      priority: priority,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setItemDescription(listName, itemID, description) {\n    var lists = this.state.lists.slice();\n    var item = undefined;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].description = description;\n            item = items[j];\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    if (item.originalList !== listName) {\n      for (let i = 0; i < lists.length; i++) {\n        if (lists[i].name === item.originalList) {\n          const items = lists[i].items;\n          for (let j = 0; j < items.length; j++) {\n            if (items[j].itemID === itemID) {\n              items[j].description = description;\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemDescription\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName:\n        listName === \"All\" || listName === \"Next 7 Days\" || listName === \"Today\"\n          ? item.originalList\n          : listName,\n      itemID: itemID,\n      description: description,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  handleLogOut() {\n    // delete the cookie\n    cookies.remove(\"DoozyLogin\");\n\n    // const bgURL = getRandomBGURL();\n\n    // reset state back to start\n    this.setState({\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      lists: [],\n      username: \"\",\n      currentlySelectedListIndex: 0,\n      currentlySelectedListName: \"\",\n      currentlySelectedItemID: \"\",\n      // bgURL: bgURL,\n      firstName: \"\",\n      lastName: \"\",\n      loaded: false,\n    });\n  }\n\n  createEmptyList(listName, color) {\n    var list = { name: listName, color: color, items: [] };\n    var lists = this.state.lists.slice();\n    lists.splice(lists.length - 3, 0, list);\n    this.setState({\n      lists: lists,\n      currentlySelectedListIndex: lists.length - 4,\n      currentlySelectedListName: listName,\n    });\n\n    const url = domain + \"/createEmptyList\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      color: color,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  focusAddListOverlayTitleInput() {\n    this.addListTitleRef.current.focus();\n  }\n\n  focusEditListOverlayTitleInput() {\n    this.editListTitleRef.current.focus();\n  }\n\n  deleteList(listName) {\n    var idx = -1;\n    var lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++)\n      if (lists[i].name === listName) {\n        idx = i;\n        break;\n      }\n    lists.splice(idx, 1);\n\n    lists = lists.slice(0, lists.length - 3);\n    lists = this.appendSmartLists(lists);\n\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: \"\",\n      currentlySelectedListIndex: idx - 1 >= 0 ? idx - 1 : 2,\n      currentlySelectedListName:\n        idx - 1 >= 0 ? lists[idx - 1].name : lists[2].name,\n    });\n\n    const url = domain + \"/deleteList\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  editList(oldName, newName, color) {\n    var lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === oldName) {\n        lists[i].name = newName;\n        lists[i].color = color;\n        var items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          items[j].originalList = newName;\n          items[j].color = color;\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/editList\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      oldName: oldName,\n      newName: newName,\n      color: color,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  handleDisplayNotification() {\n    this.setState({ notificationDisplaying: true });\n    setTimeout(() => {\n      this.setState({ notificationDisplaying: false });\n    }, 4000);\n  }\n\n  handleShowAddListOverlay() {\n    this.setState({ addListOverlayDisplaying: true });\n    $(\".add-list-overlay-color-selected\").removeClass(\n      \".add-list-overlay-color-selected\"\n    );\n    this.addListTitleRef.current.value = \"\";\n    setTimeout(() => {\n      this.addListTitleRef.current.focus();\n    }, 500);\n  }\n\n  handleShowEditListOverlay(listName, color) {\n    this.setState({\n      editListOverlayDisplaying: true,\n      editListColor: color,\n      editListName: listName,\n    });\n\n    this.editListTitleRef.current.value = listName;\n\n    setTimeout(() => {\n      this.editListTitleRef.current.focus();\n    }, 500);\n  }\n\n  handleShowSettingsOverlay() {\n    this.setState({ settingsOverlayDisplaying: true });\n\n    setTimeout(() => {\n      this.settingsRef.current.focus();\n    }, 500);\n  }\n\n  handleHideAddListOverlay() {\n    this.setState({ addListOverlayDisplaying: false });\n  }\n\n  handleHideEditListOverlay() {\n    this.setState({\n      editListOverlayDisplaying: false,\n      editListColor: \"\",\n      editListName: \"\",\n    });\n  }\n\n  setBackgroundSetting(background) {\n    this.setState({\n      background: background,\n      bgURL: 'url(\"' + background + '\")',\n    });\n  }\n\n  setKeywordsSetting(keywordsEnabled) {\n    this.setState({ keywords: keywordsEnabled });\n  }\n\n  setSortingSetting(sortingType) {\n    this.setState({ sorting: sortingType });\n  }\n\n  render() {\n    document.title = this.state.docTitle;\n\n    const listArr = this.state.lists.slice(\n      this.state.currentlySelectedListIndex,\n      this.state.currentlySelectedListIndex + 1\n    );\n\n    var lastDeletedItemTitle = \"\";\n    if (this.state.lastDeletedItem !== undefined)\n      lastDeletedItemTitle = this.state.lastDeletedItem.title;\n\n    const selectedItem = this.getCurrentlySelectedItem();\n    const appClasses =\n      \"row align-items-center\" +\n      (this.state.loggedIn === \"successful\" ? \"\" : \" d-none\");\n    const loginRegClasses =\n      \"container-fluid align-items-center\" +\n      (this.state.loggedIn === \"successful\" ? \" d-none\" : \" d-flex \");\n\n    return (\n      <>\n        <div\n          id=\"login-register\"\n          style={{ backgroundImage: this.state.bgURL }}\n          className={loginRegClasses}\n        >\n          <div\n            className={\n              \"login-section\" +\n              (this.state.loginOrRegister === \"login\" ? \"\" : \" d-none\")\n            }\n          >\n            <Login\n              loginInfo={this.state.loggedIn}\n              verifyLogin={(username, password, authType) =>\n                this.verifyLogin(username, password, authType)\n              }\n              createAccount={(email, fName, lName, password, authType) =>\n                this.createAccount(email, fName, lName, password, authType)\n              }\n              switchToRegister={() => this.toggleLoginRegister()}\n            />\n          </div>\n          <div\n            className={\n              \"register-section\" +\n              (this.state.loginOrRegister === \"register\" ? \"\" : \" d-none\")\n            }\n          >\n            <Register\n              switchToLogin={() => this.toggleLoginRegister()}\n              verifyLogin={(username, password, authType) =>\n                this.verifyLogin(username, password, authType)\n              }\n              createAccount={(email, fName, lName, password, authType) =>\n                this.createAccount(email, fName, lName, password, authType)\n              }\n              registerInfo={this.state.registered}\n            />\n          </div>\n        </div>\n        <div\n          id=\"app\"\n          style={{ backgroundImage: this.state.bgURL }}\n          className={appClasses}\n          onKeyDown={(e) => {\n            console.log(\"registered\");\n            if (e.keyCode === 27) {\n              if (this.state.addListOverlayDisplaying)\n                this.setState({ addListOverlayDisplaying: false });\n              else if (this.state.settingsOverlayDisplaying)\n                this.setState({ settingsOverlayDisplaying: false });\n              else if (this.state.editListOverlayDisplaying)\n                this.setState({ editListOverlayDisplaying: false });\n            }\n          }}\n        >\n          <AddListOverlay\n            id=\"addListOverlay\"\n            displaying={this.state.addListOverlayDisplaying}\n            addListTitleRef={this.addListTitleRef}\n            lists={this.state.lists}\n            hideOverlay={() => this.handleHideAddListOverlay()}\n            createList={(listName, color) =>\n              this.createEmptyList(listName, color)\n            }\n            focusTitleInput={() => this.focusAddListOverlayTitleInput()}\n          />\n          <EditListOverlay\n            id=\"editListOverlay\"\n            displaying={this.state.editListOverlayDisplaying}\n            editListTitleRef={this.editListTitleRef}\n            lists={this.state.lists}\n            hideOverlay={() => this.handleHideEditListOverlay()}\n            focusTitleInput={() => this.focusEditListOverlayTitleInput()}\n            startingName={this.state.editListName}\n            startingColor={this.state.editListColor}\n            editList={(oldName, newName, color) =>\n              this.editList(oldName, newName, color)\n            }\n          />\n          <SettingsOverlay\n            settingsRef={this.settingsRef}\n            displaying={this.state.settingsOverlayDisplaying}\n            sorting={this.state.sorting}\n            keywords={this.state.keywords}\n            background={this.state.background}\n            setKeywordsSetting={(keywords) => this.setKeywordsSetting(keywords)}\n            setSortingSetting={(sorting) => this.setSortingSetting(sorting)}\n            setBackgroundSetting={(bg) => this.setBackgroundSetting(bg)}\n          />\n          <Notification\n            displaying={this.state.notificationDisplaying}\n            hideNotification={() =>\n              this.setState({ notificationDisplaying: false })\n            }\n            title={lastDeletedItemTitle}\n            undo={() => {\n              if (this.state.lastDeletedItem.itemID !== undefined) {\n                this.addListItem(\n                  this.state.lastDeletedItem.originalList,\n                  this.state.lastDeletedItem.title,\n                  this.state.lastDeletedItem.dueDate,\n                  this.state.lastDeletedItem.description,\n                  this.state.lastDeletedItem.priority,\n                  this.state.lastDeletedItem.color,\n                  this.state.lastDeletedItem.itemID,\n                  this.state.lastDeletedItem.completed\n                );\n              }\n            }}\n            listName={this.state.lastDeletedItemListName}\n            originalList={this.state.lastDeletedItem.originalList}\n          />\n          <div id=\"sidebar\" className=\"p-0\">\n            <Sidebar\n              username={this.state.username}\n              lists={this.state.lists}\n              firstName={this.state.firstName}\n              lastName={this.state.lastName}\n              currentlySelectedListName={this.state.currentlySelectedListName}\n              setSelectedList={(listName) => this.setSelectedList(listName)}\n              showAddListOverlay={() => this.handleShowAddListOverlay()}\n              deleteList={(listName) => this.deleteList(listName)}\n              showEditListOverlay={(listName, color) =>\n                this.handleShowEditListOverlay(listName, color)\n              }\n            />\n          </div>\n          {listArr.map((list, i) => {\n            return (\n              <React.Fragment key={list.name}>\n                <div id=\"todolist\" className=\"col-5\">\n                  <Todolist\n                    color={list.color}\n                    name={list.name}\n                    items={list.items}\n                    addListItem={(\n                      listName,\n                      title,\n                      dueDate,\n                      description,\n                      priority,\n                      color\n                    ) =>\n                      this.addListItem(\n                        listName,\n                        title,\n                        dueDate,\n                        description,\n                        priority,\n                        color\n                      )\n                    }\n                    deleteListItem={(listName, itemID, originalList) =>\n                      this.deleteListItem(listName, itemID, originalList)\n                    }\n                    setItemTitle={(listName, itemID, title) =>\n                      this.setItemTitle(listName, itemID, title)\n                    }\n                    setItemCompleted={(listName, itemID, completed) =>\n                      this.setItemCompleted(listName, itemID, completed)\n                    }\n                    setSelectedItem={(itemID) => this.setSelectedItem(itemID)}\n                    selectedItemID={this.state.currentlySelectedItemID}\n                    hideAddListOverlay={() => this.handleHideAddListOverlay()}\n                  />\n                </div>\n                <div id=\"details\" className=\"col-4\">\n                  <Details\n                    listName={list.name}\n                    selectedItemID={selectedItem.itemID}\n                    selectedItemColor={selectedItem.color}\n                    selectedItemList={selectedItem.originalList}\n                    selectedItemTitle={selectedItem.title}\n                    selectedItemDueDate={selectedItem.dueDate}\n                    selectedItemDescription={selectedItem.description}\n                    selectedItemPriority={selectedItem.priority}\n                    selectedItemCompleted={selectedItem.completed}\n                    setItemTitle={(listName, itemID, title) =>\n                      this.setItemTitle(listName, itemID, title)\n                    }\n                    setItemCompleted={(listName, itemID, completed) =>\n                      this.setItemCompleted(listName, itemID, completed)\n                    }\n                    setItemDueDate={(listName, itemID, dueDate) =>\n                      this.setItemDueDate(listName, itemID, dueDate)\n                    }\n                    setItemPriority={(listName, itemID, priority) =>\n                      this.setItemPriority(listName, itemID, priority)\n                    }\n                    setItemDescription={(listName, itemID, description) =>\n                      this.setItemDescription(listName, itemID, description)\n                    }\n                    handleDelete={(listName, itemID, originalList) =>\n                      this.deleteListItem(listName, itemID, originalList)\n                    }\n                    hideAddListOverlay={() => this.handleHideAddListOverlay()}\n                  />\n                </div>\n                <div className=\"col-1\"></div>\n                <div id=\"toolbar\" className=\"row col-1 justify-content-center\">\n                  <Toolbar\n                    handleLogOut={() => this.handleLogOut()}\n                    deleteAllCompletedItems={() => {\n                      this.deleteAllCompletedItems(\n                        this.state.currentlySelectedListName\n                      );\n                    }}\n                    currentlySelectedListName={\n                      this.state.currentlySelectedListName\n                    }\n                    handleShowSettingsOverlay={() =>\n                      this.handleShowSettingsOverlay()\n                    }\n                  />\n                </div>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction sortListItemsDatesFirst(a, b) {\n  if (a.completed && !b.completed) return 1;\n  else if (!a.completed && b.completed) return -1;\n  else if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;\n  else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;\n  else {\n    // both are either completed or incomplete or have a due date set or no due date set\n    if (a.dueDate === b.dueDate) {\n      // sort items due on the same day by priority\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n\n      if (priorityA !== priorityB) return priorityB - priorityA;\n      else {\n        // sort by itemID\n        const itemIDA = a.itemID;\n        const itemIDB = b.itemID;\n        return itemIDA - itemIDB;\n      }\n    } else {\n      // sort items based on date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      return dateA - dateB;\n    }\n  }\n}\n\nfunction sortListItemsPrioritiesFirst(a, b) {\n  if (a.completed && !b.completed) return 1;\n  else if (!a.completed && b.completed) return -1;\n  else {\n    // sort items by priority first\n    const priorities = [\"low\", \"medium\", \"high\"];\n    const priorityA = priorities.indexOf(a.priority);\n    const priorityB = priorities.indexOf(b.priority);\n    // if they have the same priority, sort by due date\n    if (priorityB === priorityA) {\n      if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;\n      else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;\n\n      // sort items based on due date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n\n      if (a.dueDate !== b.dueDate) return dateA - dateB;\n      else {\n        // sort by itemID\n        const itemIDA = a.itemID;\n        const itemIDB = b.itemID;\n        return itemIDA - itemIDB;\n      }\n    } else return priorityB - priorityA;\n  }\n}\n\nfunction ValidateEmail(mail) {\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)) {\n    return true;\n  }\n  return false;\n}\n\nfunction getRandomBGURL() {\n  // visit https://freeimage.host/ to host more background images\n  const backgroundURLs = [\n    \"https://iili.io/J4xbBS.jpg\",\n    \"https://iili.io/J4xtQ2.jpg\",\n    \"https://iili.io/J4z92e.jpg\",\n    \"https://iili.io/J4zdpj.jpg\",\n    \"https://iili.io/J4zJkb.jpg\",\n    \"https://iili.io/J4zWZl.jpg\",\n    \"https://iili.io/J4Weln.jpg\",\n    \"https://iili.io/J4WhoN.jpg\",\n    \"https://iili.io/J4WOKX.jpg\",\n    \"https://iili.io/J4WUN4.jpg\",\n    \"https://iili.io/J4WgDl.jpg\",\n    \"https://iili.io/J4WmDQ.jpg\",\n    \"https://iili.io/J4X9WB.jpg\",\n    \"https://iili.io/J4XHiP.jpg\",\n    \"https://iili.io/J4WyxV.jpg\",\n    \"https://iili.io/JPNuGR.jpg\",\n    \"https://iili.io/JPN53N.jpg\",\n    \"https://iili.io/JPNTCv.jpg\",\n    \"https://iili.io/JiKSp4.jpg\",\n    \"https://iili.io/Jszxun.jpg\",\n    \"https://iili.io/JszAG4.jpg\",\n    \"https://iili.io/JszIZG.jpg\",\n    \"https://iili.io/Jszzjs.jpg\",\n    \"https://iili.io/Jszunf.jpg\",\n  ];\n  var currBackground = Math.floor(\n    Math.random() * Math.floor(backgroundURLs.length)\n  );\n\n  return 'url(\"' + backgroundURLs[currBackground] + '\")';\n}\n\nfunction dateToStr(date) {\n  var day = date.getDate();\n  if (day < 10) day = \"0\" + day.toString();\n\n  var month = date.getMonth() + 1;\n  if (month < 10) month = \"0\" + month.toString();\n\n  var year = date.getFullYear().toString();\n\n  var formatted = year + \"-\" + month + \"-\" + day;\n\n  return formatted;\n}\n\nfunction checkIfNext7Days(dateStr) {\n  var curr = new Date();\n  for (let i = 0; i < 7; i++) {\n    var d = dateToStr(curr);\n    if (dateStr === d) return true;\n    curr.setDate(curr.getDate() + 1);\n  }\n\n  d = dateToStr(curr);\n  if (dateStr === d) return true;\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}