{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\"; // import $ from \"jquery\";\n\nimport Todolist from \"./todolist/Todolist.js\";\nimport Details from \"./todolist/Details.js\";\nimport Login from \"./todolist/Login.js\";\nimport Register from \"./todolist/Register.js\";\nimport Sidebar from \"./todolist/Sidebar.js\";\n\nvar ObjectID = require(\"bson-objectid\");\n\nconst domain = \"http://localhost:9000\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      error: null,\n      lists: [],\n      username: \"\",\n      currentlySelectedListIndex: 0,\n      currentlySelectedListName: \"\",\n      currentlySelectedItemID: \"\",\n      bgURL: \"\",\n      firstName: \"\",\n      lastName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // this will be where you check for the cookie\n    // if the cookie is valid, then\n    // this.setState({\n    //   loggedIn: \"successful\",\n    //   username: \"[whatever was in the cookie]\",\n    // });\n    // visit https://freeimage.host/ to host more background images\n    const backgroundURLs = [\"https://iili.io/J4xbBS.jpg\", \"https://iili.io/J4xtQ2.jpg\", \"https://iili.io/J4z92e.jpg\", \"https://iili.io/J4zdpj.jpg\", \"https://iili.io/J4zJkb.jpg\", \"https://iili.io/J4zWZl.jpg\", \"https://iili.io/J4IBt4.jpg\", \"https://iili.io/J4Weln.jpg\", \"https://iili.io/J4WhoN.jpg\", \"https://iili.io/J4WwPt.jpg\", \"https://iili.io/J4WOKX.jpg\", \"https://iili.io/J4WUN4.jpg\", \"https://iili.io/J4WgDl.jpg\", \"https://iili.io/J4WSRf.jpg\", \"https://iili.io/J4WmDQ.jpg\", \"https://iili.io/J4X9WB.jpg\", \"https://iili.io/J4XHiP.jpg\", \"https://iili.io/J4WyxV.jpg\"];\n    var currBackground = Math.floor(Math.random() * Math.floor(backgroundURLs.length));\n    const bgURL = 'url(\"' + backgroundURLs[currBackground] + '\")';\n    this.setState({\n      bgURL: bgURL\n    });\n  }\n\n  verifyLogin(username, password) {\n    const url = domain + \"/verifyLogin\";\n    const body = JSON.stringify({\n      username: username,\n      password: password\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      if (res.success) {\n        this.setState({\n          docTitle: \"Lists | Doozy\",\n          loggedIn: \"successful\",\n          username: username,\n          firstName: res.firstName,\n          lastName: res.lastName\n        });\n        this.getLists();\n      } else if (res.info === \"username does not exist\") this.setState({\n        loggedIn: \"username does not exist\"\n      });else if (res.info === \"incorrect password\") this.setState({\n        loggedIn: \"incorrect password\"\n      });\n    });\n  }\n\n  setSelectedItem(itemID) {\n    this.setState({\n      currentlySelectedItemID: itemID\n    });\n  }\n\n  setSelectedList(listName) {\n    this.setState({\n      currentlySelectedListName: listName\n    });\n  }\n\n  verifyCookie() {}\n\n  toggleLoginRegister() {\n    if (this.state.loginOrRegister === \"login\") this.setState({\n      docTitle: \"Sign Up | Doozy\",\n      loginOrRegister: \"register\"\n    });else if (this.state.loginOrRegister === \"register\") this.setState({\n      docTitle: \"Log In | Doozy\",\n      loginOrRegister: \"login\"\n    });\n  }\n\n  getCurrentlySelectedItem() {\n    if (this.state.currentlySelectedItemID === \"\") return {\n      title: \"\",\n      description: \"\",\n      dueDate: \"\",\n      priority: \"\",\n      completed: false,\n      itemID: \"\"\n    };\n    var items = this.state.lists.slice(this.state.currentlySelectedListIndex)[0].items;\n\n    for (let i = 0; i < items.length; i++) if (items[i].itemID === this.state.currentlySelectedItemID) return items[i];\n  } // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n\n\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: this.state.username\n      /*this.props.username*/\n\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      var lists = res;\n      this.setState({\n        lists: lists,\n        currentlySelectedListName: lists[0].name\n      });\n    });\n  }\n\n  addListItem(listName, title, dueDate, description, priority) {\n    const lists = this.state.lists.slice();\n    var id = null;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        var item = {\n          title: title,\n          description: description,\n          dueDate: dueDate,\n          priority: priority,\n          completed: false,\n          itemID: new ObjectID().toString()\n        };\n        items.push(item);\n        id = item.itemID;\n        items.sort(sortListItems);\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: id\n    });\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n      itemID: id\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  deleteListItem(listName, itemID) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        var items = lists[i].items;\n        var idx = -1;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            idx = j;\n            break;\n          }\n        }\n\n        items = items.splice(idx, 1);\n      }\n    }\n\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: \"\"\n    });\n    const url = domain + \"/deleteListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.text());\n  }\n\n  setItemTitle(listName, itemID, title) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].title = title;\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemTitle\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      title: title\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.text());\n  }\n\n  setItemCompleted(listName, itemID, completed) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].completed = completed;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemCompleted\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      completed: completed\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setListName(oldListName, newListName) {}\n\n  setItemDueDate(listName, itemID, dueDate) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].dueDate = dueDate;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemDueDate\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      dueDate: dueDate\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setItemPriority(listName, itemID, priority) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].priority = priority;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemPriority\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      priority: priority\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setItemDescription(listName, itemID, description) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].description = description;\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemDescription\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      description: description\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  render() {\n    document.title = this.state.docTitle;\n    const listArr = this.state.lists.slice(this.state.currentlySelectedListIndex, 1);\n    const selectedItem = this.getCurrentlySelectedItem();\n    const appClasses = \"row align-items-center\" + (this.state.loggedIn === \"successful\" ? \"\" : \" d-none\");\n    const loginRegClasses = \"container-fluid align-items-center\" + (this.state.loggedIn === \"successful\" ? \" d-none\" : \" d-flex \");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login-register\",\n      style: {\n        backgroundImage: this.state.bgURL\n      },\n      className: loginRegClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-section\" + (this.state.loginOrRegister === \"login\" ? \"\" : \" d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      loginInfo: this.state.loggedIn,\n      registerInfo: this.state.registered,\n      verifyLogin: (username, password) => this.verifyLogin(username, password),\n      switchToRegister: () => this.toggleLoginRegister(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-section\" + (this.state.loginOrRegister === \"register\" ? \"\" : \" d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Register, {\n      switchToLogin: () => this.toggleLoginRegister(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"app\",\n      style: {\n        backgroundImage: this.state.bgURL\n      },\n      className: appClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sidebar\",\n      className: \"col-2 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      lists: this.state.lists,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      currentlySelectedListName: this.state.currentlySelectedListName,\n      setSelectedList: listName => this.setSelectedList(listName),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 13\n      }\n    })), listArr.map((list, i) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: list.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"todolist\",\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Todolist, {\n        color: list.color,\n        name: list.name,\n        items: list.items,\n        addListItem: (listName, title, dueDate, description, priority) => this.addListItem(listName, title, dueDate, description, priority),\n        deleteListItem: (listName, itemID) => this.deleteListItem(listName, itemID),\n        setItemTitle: (listName, itemID, title) => this.setItemTitle(listName, itemID, title),\n        setItemCompleted: (listName, itemID, completed) => this.setItemCompleted(listName, itemID, completed),\n        setSelectedItem: itemID => this.setSelectedItem(itemID),\n        selectedItemID: this.state.currentlySelectedItemID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"details\",\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Details, {\n        listName: list.name,\n        selectedItemID: selectedItem.itemID,\n        selectedItemTitle: selectedItem.title,\n        selectedItemDueDate: selectedItem.dueDate,\n        selectedItemDescription: selectedItem.description,\n        selectedItemPriority: selectedItem.priority,\n        selectedItemCompleted: selectedItem.completed,\n        setItemTitle: (listName, itemID, title) => this.setItemTitle(listName, itemID, title),\n        setItemCompleted: (listName, itemID, completed) => this.setItemCompleted(listName, itemID, completed),\n        setItemDueDate: (listName, itemID, dueDate) => this.setItemDueDate(listName, itemID, dueDate),\n        setItemPriority: (listName, itemID, priority) => this.setItemPriority(listName, itemID, priority),\n        setItemDescription: (listName, itemID, description) => this.setItemDescription(listName, itemID, description),\n        handleDelete: (listName, itemID) => this.deleteListItem(listName, itemID),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"toolbar\",\n        className: \"pl-5 col-1 h-25 row justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-cogs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-hand-sparkles\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-sign-out-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 21\n        }\n      }))));\n    })));\n  }\n\n}\n\nfunction sortListItems(a, b) {\n  if (a.completed && !b.completed) return 1;else if (!a.completed && b.completed) return -1;else if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;else {\n    // both are either completed or incomplete or have a due date set or no due date set\n    if (a.dueDate === b.dueDate) {\n      // sort items due on the same day by priority\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n      if (priorityA !== priorityB) return priorityB - priorityA;else {\n        // sort by itemID\n        const itemIDA = a.itemID;\n        const itemIDB = b.itemID;\n        return itemIDA - itemIDB;\n      }\n    } else {\n      // sort items based on date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      return dateA - dateB;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js"],"names":["React","Component","Todolist","Details","Login","Register","Sidebar","ObjectID","require","domain","App","constructor","props","state","docTitle","loggedIn","registered","loginOrRegister","error","lists","username","currentlySelectedListIndex","currentlySelectedListName","currentlySelectedItemID","bgURL","firstName","lastName","componentDidMount","backgroundURLs","currBackground","Math","floor","random","length","setState","verifyLogin","password","url","body","JSON","stringify","fetch","method","headers","then","res","json","success","getLists","info","setSelectedItem","itemID","setSelectedList","listName","verifyCookie","toggleLoginRegister","getCurrentlySelectedItem","title","description","dueDate","priority","completed","items","slice","i","name","addListItem","id","item","toString","push","sort","sortListItems","deleteListItem","idx","j","splice","text","setItemTitle","setItemCompleted","setListName","oldListName","newListName","setItemDueDate","setItemPriority","setItemDescription","render","document","listArr","selectedItem","appClasses","loginRegClasses","backgroundImage","map","list","color","a","b","priorities","priorityA","indexOf","priorityB","itemIDA","itemIDB","dateA","Date","dateB"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\n// import $ from \"jquery\";\n\nimport Todolist from \"./todolist/Todolist.js\";\nimport Details from \"./todolist/Details.js\";\nimport Login from \"./todolist/Login.js\";\nimport Register from \"./todolist/Register.js\";\nimport Sidebar from \"./todolist/Sidebar.js\";\n\nvar ObjectID = require(\"bson-objectid\");\n\nconst domain = \"http://localhost:9000\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      error: null,\n      lists: [],\n      username: \"\",\n      currentlySelectedListIndex: 0,\n      currentlySelectedListName: \"\",\n      currentlySelectedItemID: \"\",\n      bgURL: \"\",\n      firstName: \"\",\n      lastName: \"\",\n    };\n  }\n\n  componentDidMount() {\n    // this will be where you check for the cookie\n    // if the cookie is valid, then\n    // this.setState({\n    //   loggedIn: \"successful\",\n    //   username: \"[whatever was in the cookie]\",\n    // });\n\n    // visit https://freeimage.host/ to host more background images\n    const backgroundURLs = [\n      \"https://iili.io/J4xbBS.jpg\",\n      \"https://iili.io/J4xtQ2.jpg\",\n      \"https://iili.io/J4z92e.jpg\",\n      \"https://iili.io/J4zdpj.jpg\",\n      \"https://iili.io/J4zJkb.jpg\",\n      \"https://iili.io/J4zWZl.jpg\",\n      \"https://iili.io/J4IBt4.jpg\",\n      \"https://iili.io/J4Weln.jpg\",\n      \"https://iili.io/J4WhoN.jpg\",\n      \"https://iili.io/J4WwPt.jpg\",\n      \"https://iili.io/J4WOKX.jpg\",\n      \"https://iili.io/J4WUN4.jpg\",\n      \"https://iili.io/J4WgDl.jpg\",\n      \"https://iili.io/J4WSRf.jpg\",\n      \"https://iili.io/J4WmDQ.jpg\",\n      \"https://iili.io/J4X9WB.jpg\",\n      \"https://iili.io/J4XHiP.jpg\",\n      \"https://iili.io/J4WyxV.jpg\",\n    ];\n    var currBackground = Math.floor(\n      Math.random() * Math.floor(backgroundURLs.length)\n    );\n\n    const bgURL = 'url(\"' + backgroundURLs[currBackground] + '\")';\n\n    this.setState({ bgURL: bgURL });\n  }\n\n  verifyLogin(username, password) {\n    const url = domain + \"/verifyLogin\";\n    const body = JSON.stringify({\n      username: username,\n      password: password,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.success) {\n          this.setState({\n            docTitle: \"Lists | Doozy\",\n            loggedIn: \"successful\",\n            username: username,\n            firstName: res.firstName,\n            lastName: res.lastName,\n          });\n          this.getLists();\n        } else if (res.info === \"username does not exist\")\n          this.setState({ loggedIn: \"username does not exist\" });\n        else if (res.info === \"incorrect password\")\n          this.setState({ loggedIn: \"incorrect password\" });\n      });\n  }\n\n  setSelectedItem(itemID) {\n    this.setState({ currentlySelectedItemID: itemID });\n  }\n\n  setSelectedList(listName) {\n    this.setState({ currentlySelectedListName: listName });\n  }\n\n  verifyCookie() {}\n\n  toggleLoginRegister() {\n    if (this.state.loginOrRegister === \"login\")\n      this.setState({\n        docTitle: \"Sign Up | Doozy\",\n        loginOrRegister: \"register\",\n      });\n    else if (this.state.loginOrRegister === \"register\")\n      this.setState({\n        docTitle: \"Log In | Doozy\",\n        loginOrRegister: \"login\",\n      });\n  }\n\n  getCurrentlySelectedItem() {\n    if (this.state.currentlySelectedItemID === \"\")\n      return {\n        title: \"\",\n        description: \"\",\n        dueDate: \"\",\n        priority: \"\",\n        completed: false,\n        itemID: \"\",\n      };\n\n    var items = this.state.lists.slice(this.state.currentlySelectedListIndex)[0]\n      .items;\n\n    for (let i = 0; i < items.length; i++)\n      if (items[i].itemID === this.state.currentlySelectedItemID)\n        return items[i];\n  }\n\n  // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: this.state.username /*this.props.username*/,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        var lists = res;\n        this.setState({\n          lists: lists,\n          currentlySelectedListName: lists[0].name,\n        });\n      });\n  }\n\n  addListItem(listName, title, dueDate, description, priority) {\n    const lists = this.state.lists.slice();\n    var id = null;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        var item = {\n          title: title,\n          description: description,\n          dueDate: dueDate,\n          priority: priority,\n          completed: false,\n          itemID: new ObjectID().toString(),\n        };\n        items.push(item);\n        id = item.itemID;\n        items.sort(sortListItems);\n        break;\n      }\n    }\n\n    this.setState({ lists: lists, currentlySelectedItemID: id });\n\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n      itemID: id,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  deleteListItem(listName, itemID) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        var items = lists[i].items;\n        var idx = -1;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            idx = j;\n            break;\n          }\n        }\n        items = items.splice(idx, 1);\n      }\n    }\n\n    this.setState({ lists: lists, currentlySelectedItemID: \"\" });\n\n    const url = domain + \"/deleteListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    }).then((res) => res.text());\n  }\n\n  setItemTitle(listName, itemID, title) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].title = title;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemTitle\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      title: title,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    }).then((res) => res.text());\n  }\n\n  setItemCompleted(listName, itemID, completed) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].completed = completed;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemCompleted\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      completed: completed,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setListName(oldListName, newListName) {}\n\n  setItemDueDate(listName, itemID, dueDate) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].dueDate = dueDate;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemDueDate\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      dueDate: dueDate,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setItemPriority(listName, itemID, priority) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].priority = priority;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemPriority\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      priority: priority,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setItemDescription(listName, itemID, description) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].description = description;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemDescription\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      description: description,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  render() {\n    document.title = this.state.docTitle;\n\n    const listArr = this.state.lists.slice(\n      this.state.currentlySelectedListIndex,\n      1\n    );\n\n    const selectedItem = this.getCurrentlySelectedItem();\n    const appClasses =\n      \"row align-items-center\" +\n      (this.state.loggedIn === \"successful\" ? \"\" : \" d-none\");\n    const loginRegClasses =\n      \"container-fluid align-items-center\" +\n      (this.state.loggedIn === \"successful\" ? \" d-none\" : \" d-flex \");\n\n    return (\n      <>\n        <div\n          id=\"login-register\"\n          style={{ backgroundImage: this.state.bgURL }}\n          className={loginRegClasses}\n        >\n          <div\n            className={\n              \"login-section\" +\n              (this.state.loginOrRegister === \"login\" ? \"\" : \" d-none\")\n            }\n          >\n            <Login\n              loginInfo={this.state.loggedIn}\n              registerInfo={this.state.registered}\n              verifyLogin={(username, password) =>\n                this.verifyLogin(username, password)\n              }\n              switchToRegister={() => this.toggleLoginRegister()}\n            />\n          </div>\n          <div\n            className={\n              \"register-section\" +\n              (this.state.loginOrRegister === \"register\" ? \"\" : \" d-none\")\n            }\n          >\n            <Register switchToLogin={() => this.toggleLoginRegister()} />\n          </div>\n        </div>\n        <div\n          id=\"app\"\n          style={{ backgroundImage: this.state.bgURL }}\n          className={appClasses}\n        >\n          <div id=\"sidebar\" className=\"col-2 p-0\">\n            <Sidebar\n              lists={this.state.lists}\n              firstName={this.state.firstName}\n              lastName={this.state.lastName}\n              currentlySelectedListName={this.state.currentlySelectedListName}\n              setSelectedList={(listName) => this.setSelectedList(listName)}\n            />\n          </div>\n          {listArr.map((list, i) => {\n            return (\n              <React.Fragment key={list.name}>\n                <div id=\"todolist\" className=\"col-5\">\n                  <Todolist\n                    color={list.color}\n                    name={list.name}\n                    items={list.items}\n                    addListItem={(\n                      listName,\n                      title,\n                      dueDate,\n                      description,\n                      priority\n                    ) =>\n                      this.addListItem(\n                        listName,\n                        title,\n                        dueDate,\n                        description,\n                        priority\n                      )\n                    }\n                    deleteListItem={(listName, itemID) =>\n                      this.deleteListItem(listName, itemID)\n                    }\n                    setItemTitle={(listName, itemID, title) =>\n                      this.setItemTitle(listName, itemID, title)\n                    }\n                    setItemCompleted={(listName, itemID, completed) =>\n                      this.setItemCompleted(listName, itemID, completed)\n                    }\n                    setSelectedItem={(itemID) => this.setSelectedItem(itemID)}\n                    selectedItemID={this.state.currentlySelectedItemID}\n                  />\n                </div>\n                <div id=\"details\" className=\"col-4\">\n                  <Details\n                    listName={list.name}\n                    selectedItemID={selectedItem.itemID}\n                    selectedItemTitle={selectedItem.title}\n                    selectedItemDueDate={selectedItem.dueDate}\n                    selectedItemDescription={selectedItem.description}\n                    selectedItemPriority={selectedItem.priority}\n                    selectedItemCompleted={selectedItem.completed}\n                    setItemTitle={(listName, itemID, title) =>\n                      this.setItemTitle(listName, itemID, title)\n                    }\n                    setItemCompleted={(listName, itemID, completed) =>\n                      this.setItemCompleted(listName, itemID, completed)\n                    }\n                    setItemDueDate={(listName, itemID, dueDate) =>\n                      this.setItemDueDate(listName, itemID, dueDate)\n                    }\n                    setItemPriority={(listName, itemID, priority) =>\n                      this.setItemPriority(listName, itemID, priority)\n                    }\n                    setItemDescription={(listName, itemID, description) =>\n                      this.setItemDescription(listName, itemID, description)\n                    }\n                    handleDelete={(listName, itemID) =>\n                      this.deleteListItem(listName, itemID)\n                    }\n                  />\n                </div>\n                <div\n                  id=\"toolbar\"\n                  className=\"pl-5 col-1 h-25 row justify-content-center\"\n                >\n                  <div className=\"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\">\n                    <i className=\"fas fa-cogs\"></i>\n                  </div>\n                  <div className=\"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\">\n                    <i className=\"fas fa-hand-sparkles\"></i>\n                  </div>\n                  <div className=\"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\">\n                    <i className=\"fas fa-sign-out-alt\"></i>\n                  </div>\n                </div>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction sortListItems(a, b) {\n  if (a.completed && !b.completed) return 1;\n  else if (!a.completed && b.completed) return -1;\n  else if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;\n  else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;\n  else {\n    // both are either completed or incomplete or have a due date set or no due date set\n    if (a.dueDate === b.dueDate) {\n      // sort items due on the same day by priority\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n\n      if (priorityA !== priorityB) return priorityB - priorityA;\n      else {\n        // sort by itemID\n        const itemIDA = a.itemID;\n        const itemIDB = b.itemID;\n        return itemIDA - itemIDB;\n      }\n    } else {\n      // sort items based on date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      return dateA - dateB;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}