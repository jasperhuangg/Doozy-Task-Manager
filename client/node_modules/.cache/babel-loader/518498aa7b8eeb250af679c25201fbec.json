{"ast":null,"code":"const EditCaretPositioning = {};\nexport default EditCaretPositioning;\n\nif (window.getSelection && document.createRange) {\n  //saves caret position(s)\n  EditCaretPositioning.saveSelection = function (containerEl) {\n    var range = window.getSelection().getRangeAt(0);\n    var preSelectionRange = range.cloneRange();\n    preSelectionRange.selectNodeContents(containerEl);\n    preSelectionRange.setEnd(range.startContainer, range.startOffset);\n    var start = preSelectionRange.toString().length;\n    return {\n      start: start,\n      end: start + range.toString().length\n    };\n  }; //restores caret position(s)\n\n\n  EditCaretPositioning.restoreSelection = function (containerEl, savedSel) {\n    var charIndex = 0,\n        range = document.createRange();\n    range.setStart(containerEl, 0);\n    range.collapse(true);\n    var nodeStack = [containerEl],\n        node,\n        foundStart = false,\n        stop = false;\n\n    while (!stop && (node = nodeStack.pop())) {\n      if (node.nodeType === 3) {\n        var nextCharIndex = charIndex + node.length;\n\n        if (!foundStart && savedSel.start >= charIndex && savedSel.start <= nextCharIndex) {\n          range.setStart(node, savedSel.start - charIndex);\n          foundStart = true;\n        }\n\n        if (foundStart && savedSel.end >= charIndex && savedSel.end <= nextCharIndex) {\n          range.setEnd(node, savedSel.end - charIndex);\n          stop = true;\n        }\n\n        charIndex = nextCharIndex;\n      } else {\n        var i = node.childNodes.length;\n\n        while (i--) {\n          nodeStack.push(node.childNodes[i]);\n        }\n      }\n    }\n\n    var sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  };\n} else if (document.selection && document.body.createTextRange) {\n  //saves caret position(s)\n  EditCaretPositioning.saveSelection = function (containerEl) {\n    var selectedTextRange = document.selection.createRange();\n    var preSelectionTextRange = document.body.createTextRange();\n    preSelectionTextRange.moveToElementText(containerEl);\n    preSelectionTextRange.setEndPoint(\"EndToStart\", selectedTextRange);\n    var start = preSelectionTextRange.text.length;\n    return {\n      start: start,\n      end: start + selectedTextRange.text.length\n    };\n  }; //restores caret position(s)\n\n\n  EditCaretPositioning.restoreSelection = function (containerEl, savedSel) {\n    var textRange = document.body.createTextRange();\n    textRange.moveToElementText(containerEl);\n    textRange.collapse(true);\n    textRange.moveEnd(\"character\", savedSel.end);\n    textRange.moveStart(\"character\", savedSel.start);\n    textRange.select();\n  };\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/todolist/EditCaretPositioning.js"],"names":["EditCaretPositioning","window","getSelection","document","createRange","saveSelection","containerEl","range","getRangeAt","preSelectionRange","cloneRange","selectNodeContents","setEnd","startContainer","startOffset","start","toString","length","end","restoreSelection","savedSel","charIndex","setStart","collapse","nodeStack","node","foundStart","stop","pop","nodeType","nextCharIndex","i","childNodes","push","sel","removeAllRanges","addRange","selection","body","createTextRange","selectedTextRange","preSelectionTextRange","moveToElementText","setEndPoint","text","textRange","moveEnd","moveStart","select"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG,EAA7B;AAEA,eAAeA,oBAAf;;AAEA,IAAIC,MAAM,CAACC,YAAP,IAAuBC,QAAQ,CAACC,WAApC,EAAiD;AAC/C;AACAJ,EAAAA,oBAAoB,CAACK,aAArB,GAAqC,UAAUC,WAAV,EAAuB;AAC1D,QAAIC,KAAK,GAAGN,MAAM,CAACC,YAAP,GAAsBM,UAAtB,CAAiC,CAAjC,CAAZ;AACA,QAAIC,iBAAiB,GAAGF,KAAK,CAACG,UAAN,EAAxB;AACAD,IAAAA,iBAAiB,CAACE,kBAAlB,CAAqCL,WAArC;AACAG,IAAAA,iBAAiB,CAACG,MAAlB,CAAyBL,KAAK,CAACM,cAA/B,EAA+CN,KAAK,CAACO,WAArD;AACA,QAAIC,KAAK,GAAGN,iBAAiB,CAACO,QAAlB,GAA6BC,MAAzC;AAEA,WAAO;AACLF,MAAAA,KAAK,EAAEA,KADF;AAELG,MAAAA,GAAG,EAAEH,KAAK,GAAGR,KAAK,CAACS,QAAN,GAAiBC;AAFzB,KAAP;AAID,GAXD,CAF+C,CAc/C;;;AACAjB,EAAAA,oBAAoB,CAACmB,gBAArB,GAAwC,UAAUb,WAAV,EAAuBc,QAAvB,EAAiC;AACvE,QAAIC,SAAS,GAAG,CAAhB;AAAA,QACEd,KAAK,GAAGJ,QAAQ,CAACC,WAAT,EADV;AAEAG,IAAAA,KAAK,CAACe,QAAN,CAAehB,WAAf,EAA4B,CAA5B;AACAC,IAAAA,KAAK,CAACgB,QAAN,CAAe,IAAf;AACA,QAAIC,SAAS,GAAG,CAAClB,WAAD,CAAhB;AAAA,QACEmB,IADF;AAAA,QAEEC,UAAU,GAAG,KAFf;AAAA,QAGEC,IAAI,GAAG,KAHT;;AAKA,WAAO,CAACA,IAAD,KAAUF,IAAI,GAAGD,SAAS,CAACI,GAAV,EAAjB,CAAP,EAA0C;AACxC,UAAIH,IAAI,CAACI,QAAL,KAAkB,CAAtB,EAAyB;AACvB,YAAIC,aAAa,GAAGT,SAAS,GAAGI,IAAI,CAACR,MAArC;;AACA,YACE,CAACS,UAAD,IACAN,QAAQ,CAACL,KAAT,IAAkBM,SADlB,IAEAD,QAAQ,CAACL,KAAT,IAAkBe,aAHpB,EAIE;AACAvB,UAAAA,KAAK,CAACe,QAAN,CAAeG,IAAf,EAAqBL,QAAQ,CAACL,KAAT,GAAiBM,SAAtC;AACAK,UAAAA,UAAU,GAAG,IAAb;AACD;;AACD,YACEA,UAAU,IACVN,QAAQ,CAACF,GAAT,IAAgBG,SADhB,IAEAD,QAAQ,CAACF,GAAT,IAAgBY,aAHlB,EAIE;AACAvB,UAAAA,KAAK,CAACK,MAAN,CAAaa,IAAb,EAAmBL,QAAQ,CAACF,GAAT,GAAeG,SAAlC;AACAM,UAAAA,IAAI,GAAG,IAAP;AACD;;AACDN,QAAAA,SAAS,GAAGS,aAAZ;AACD,OAnBD,MAmBO;AACL,YAAIC,CAAC,GAAGN,IAAI,CAACO,UAAL,CAAgBf,MAAxB;;AACA,eAAOc,CAAC,EAAR,EAAY;AACVP,UAAAA,SAAS,CAACS,IAAV,CAAeR,IAAI,CAACO,UAAL,CAAgBD,CAAhB,CAAf;AACD;AACF;AACF;;AAED,QAAIG,GAAG,GAAGjC,MAAM,CAACC,YAAP,EAAV;AACAgC,IAAAA,GAAG,CAACC,eAAJ;AACAD,IAAAA,GAAG,CAACE,QAAJ,CAAa7B,KAAb;AACD,GAzCD;AA0CD,CAzDD,MAyDO,IAAIJ,QAAQ,CAACkC,SAAT,IAAsBlC,QAAQ,CAACmC,IAAT,CAAcC,eAAxC,EAAyD;AAC9D;AACAvC,EAAAA,oBAAoB,CAACK,aAArB,GAAqC,UAAUC,WAAV,EAAuB;AAC1D,QAAIkC,iBAAiB,GAAGrC,QAAQ,CAACkC,SAAT,CAAmBjC,WAAnB,EAAxB;AACA,QAAIqC,qBAAqB,GAAGtC,QAAQ,CAACmC,IAAT,CAAcC,eAAd,EAA5B;AACAE,IAAAA,qBAAqB,CAACC,iBAAtB,CAAwCpC,WAAxC;AACAmC,IAAAA,qBAAqB,CAACE,WAAtB,CAAkC,YAAlC,EAAgDH,iBAAhD;AACA,QAAIzB,KAAK,GAAG0B,qBAAqB,CAACG,IAAtB,CAA2B3B,MAAvC;AAEA,WAAO;AACLF,MAAAA,KAAK,EAAEA,KADF;AAELG,MAAAA,GAAG,EAAEH,KAAK,GAAGyB,iBAAiB,CAACI,IAAlB,CAAuB3B;AAF/B,KAAP;AAID,GAXD,CAF8D,CAc9D;;;AACAjB,EAAAA,oBAAoB,CAACmB,gBAArB,GAAwC,UAAUb,WAAV,EAAuBc,QAAvB,EAAiC;AACvE,QAAIyB,SAAS,GAAG1C,QAAQ,CAACmC,IAAT,CAAcC,eAAd,EAAhB;AACAM,IAAAA,SAAS,CAACH,iBAAV,CAA4BpC,WAA5B;AACAuC,IAAAA,SAAS,CAACtB,QAAV,CAAmB,IAAnB;AACAsB,IAAAA,SAAS,CAACC,OAAV,CAAkB,WAAlB,EAA+B1B,QAAQ,CAACF,GAAxC;AACA2B,IAAAA,SAAS,CAACE,SAAV,CAAoB,WAApB,EAAiC3B,QAAQ,CAACL,KAA1C;AACA8B,IAAAA,SAAS,CAACG,MAAV;AACD,GAPD;AAQD","sourcesContent":["const EditCaretPositioning = {};\n\nexport default EditCaretPositioning;\n\nif (window.getSelection && document.createRange) {\n  //saves caret position(s)\n  EditCaretPositioning.saveSelection = function (containerEl) {\n    var range = window.getSelection().getRangeAt(0);\n    var preSelectionRange = range.cloneRange();\n    preSelectionRange.selectNodeContents(containerEl);\n    preSelectionRange.setEnd(range.startContainer, range.startOffset);\n    var start = preSelectionRange.toString().length;\n\n    return {\n      start: start,\n      end: start + range.toString().length,\n    };\n  };\n  //restores caret position(s)\n  EditCaretPositioning.restoreSelection = function (containerEl, savedSel) {\n    var charIndex = 0,\n      range = document.createRange();\n    range.setStart(containerEl, 0);\n    range.collapse(true);\n    var nodeStack = [containerEl],\n      node,\n      foundStart = false,\n      stop = false;\n\n    while (!stop && (node = nodeStack.pop())) {\n      if (node.nodeType === 3) {\n        var nextCharIndex = charIndex + node.length;\n        if (\n          !foundStart &&\n          savedSel.start >= charIndex &&\n          savedSel.start <= nextCharIndex\n        ) {\n          range.setStart(node, savedSel.start - charIndex);\n          foundStart = true;\n        }\n        if (\n          foundStart &&\n          savedSel.end >= charIndex &&\n          savedSel.end <= nextCharIndex\n        ) {\n          range.setEnd(node, savedSel.end - charIndex);\n          stop = true;\n        }\n        charIndex = nextCharIndex;\n      } else {\n        var i = node.childNodes.length;\n        while (i--) {\n          nodeStack.push(node.childNodes[i]);\n        }\n      }\n    }\n\n    var sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  };\n} else if (document.selection && document.body.createTextRange) {\n  //saves caret position(s)\n  EditCaretPositioning.saveSelection = function (containerEl) {\n    var selectedTextRange = document.selection.createRange();\n    var preSelectionTextRange = document.body.createTextRange();\n    preSelectionTextRange.moveToElementText(containerEl);\n    preSelectionTextRange.setEndPoint(\"EndToStart\", selectedTextRange);\n    var start = preSelectionTextRange.text.length;\n\n    return {\n      start: start,\n      end: start + selectedTextRange.text.length,\n    };\n  };\n  //restores caret position(s)\n  EditCaretPositioning.restoreSelection = function (containerEl, savedSel) {\n    var textRange = document.body.createTextRange();\n    textRange.moveToElementText(containerEl);\n    textRange.collapse(true);\n    textRange.moveEnd(\"character\", savedSel.end);\n    textRange.moveStart(\"character\", savedSel.start);\n    textRange.select();\n  };\n}\n"]},"metadata":{},"sourceType":"module"}