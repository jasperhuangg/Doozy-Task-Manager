{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\"; // import $ from \"jquery\";\n\nimport Todolist from \"./todolist/Todolist.js\";\nimport Details from \"./todolist/Details.js\";\nimport Login from \"./todolist/Login.js\";\nimport Register from \"./todolist/Register.js\";\nimport Sidebar from \"./todolist/Sidebar.js\";\n\nvar ObjectID = require(\"bson-objectid\");\n\nconst domain = \"http://localhost:9000\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      error: null,\n      lists: [],\n      username: \"\",\n      currentlySelectedList: 0,\n      currentlySelectedItemID: \"\",\n      bgURL: \"\",\n      firstName: \"\",\n      lastName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // this will be where you check for the cookie\n    // if the cookie is valid, then\n    // this.setState({\n    //   loggedIn: \"successful\",\n    //   username: \"[whatever was in the cookie]\",\n    // });\n    // visit https://freeimage.host/ to host more background images\n    const backgroundURLs = [\"https://iili.io/J4xbBS.jpg\", \"https://iili.io/J4xtQ2.jpg\", \"https://iili.io/J4xZhl.jpg\", \"https://iili.io/J4xp49.jpg\", \"https://iili.io/J4xmE7.jpg\", \"https://iili.io/J4z92e.jpg\", \"https://iili.io/J4zdpj.jpg\", \"https://iili.io/J4zJkb.jpg\", \"https://iili.io/J4zHYu.jpg\", \"https://iili.io/J4zWZl.jpg\", \"https://iili.io/J4IBt4.jpg\"];\n    var currBackground = Math.floor(Math.random() * Math.floor(backgroundURLs.length));\n    const bgURL = 'url(\"' + backgroundURLs[currBackground] + '\")';\n    this.setState({\n      bgURL: bgURL\n    });\n  }\n\n  verifyLogin(username, password) {\n    const url = domain + \"/verifyLogin\";\n    const body = JSON.stringify({\n      username: username,\n      password: password\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      if (res.success) {\n        this.setState({\n          docTitle: \"Lists | Doozy\",\n          loggedIn: \"successful\",\n          username: username,\n          firstName: res.firstName,\n          lastName: res.lastName\n        });\n        this.getLists();\n      } else if (res.info === \"username does not exist\") this.setState({\n        loggedIn: \"username does not exist\"\n      });else if (res.info === \"incorrect password\") this.setState({\n        loggedIn: \"incorrect password\"\n      });\n    });\n  }\n\n  setSelectedItem(itemID) {\n    this.setState({\n      currentlySelectedItemID: itemID\n    });\n  }\n\n  verifyCookie() {}\n\n  toggleLoginRegister() {\n    if (this.state.loginOrRegister === \"login\") this.setState({\n      docTitle: \"Sign Up | Doozy\",\n      loginOrRegister: \"register\"\n    });else if (this.state.loginOrRegister === \"register\") this.setState({\n      docTitle: \"Log In | Doozy\",\n      loginOrRegister: \"login\"\n    });\n  }\n\n  getCurrentlySelectedItem() {\n    if (this.state.currentlySelectedItemID === \"\") return {\n      title: \"\",\n      description: \"\",\n      dueDate: \"\",\n      priority: \"\",\n      completed: false,\n      itemID: \"\"\n    };\n    var items = this.state.lists.slice(this.state.currentlySelectedList)[0].items;\n\n    for (let i = 0; i < items.length; i++) if (items[i].itemID === this.state.currentlySelectedItemID) return items[i];\n  } // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n\n\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: this.state.username\n      /*this.props.username*/\n\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      var lists = res;\n      this.setState({\n        lists: lists\n      });\n    });\n  }\n\n  addListItem(listName, title, dueDate, description, priority) {\n    const lists = this.state.lists.slice();\n    var id = null;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        var item = {\n          title: title,\n          description: description,\n          dueDate: dueDate,\n          priority: priority,\n          completed: false,\n          itemID: new ObjectID().toString()\n        };\n        items.push(item);\n        id = item.itemID;\n        items.sort(sortListItems);\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: id\n    });\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n      itemID: id\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  deleteListItem(listName, itemID) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        var items = lists[i].items;\n        var idx = -1;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            idx = j;\n            break;\n          }\n        }\n\n        items = items.splice(idx, 1);\n      }\n    }\n\n    this.setState({\n      lists: lists,\n      currentlySelectedItemID: \"\"\n    });\n    const url = domain + \"/deleteListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.text());\n  }\n\n  setItemTitle(listName, itemID, title) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].title = title;\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemTitle\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      title: title\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    }).then(res => res.text());\n  }\n\n  setItemCompleted(listName, itemID, completed) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].completed = completed;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemCompleted\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      completed: completed\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setListName(oldListName, newListName) {}\n\n  setItemDueDate(listName, itemID, dueDate) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].dueDate = dueDate;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemDueDate\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      dueDate: dueDate\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setItemPriority(listName, itemID, priority) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].priority = priority;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemPriority\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      priority: priority\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  setItemDescription(listName, itemID, description) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].description = description;\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemDescription\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      description: description\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: body\n    });\n  }\n\n  render() {\n    document.title = this.state.docTitle;\n    const listArr = this.state.lists.slice(this.state.currentlySelectedList, 1);\n    const selectedItem = this.getCurrentlySelectedItem();\n    const appClasses = \"row align-items-center\" + (this.state.loggedIn === \"successful\" ? \"\" : \" d-none\");\n    const loginRegClasses = \"container-fluid align-items-center\" + (this.state.loggedIn === \"successful\" ? \" d-none\" : \" d-flex \");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login-register\",\n      style: {\n        backgroundImage: this.state.bgURL\n      },\n      className: loginRegClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-section\" + (this.state.loginOrRegister === \"login\" ? \"\" : \" d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      loginInfo: this.state.loggedIn,\n      registerInfo: this.state.registered,\n      verifyLogin: (username, password) => this.verifyLogin(username, password),\n      switchToRegister: () => this.toggleLoginRegister(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"register-section\" + (this.state.loginOrRegister === \"register\" ? \"\" : \" d-none\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Register, {\n      switchToLogin: () => this.toggleLoginRegister(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"app\",\n      style: {\n        backgroundImage: this.state.bgURL\n      },\n      className: appClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sidebar\",\n      className: \"col-2 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      lists: this.state.lists,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 13\n      }\n    })), listArr.map((list, i) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: list.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"todolist\",\n        className: \"col-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Todolist, {\n        color: list.color,\n        name: list.name,\n        items: list.items,\n        addListItem: (listName, title, dueDate, description, priority) => this.addListItem(listName, title, dueDate, description, priority),\n        deleteListItem: (listName, itemID) => this.deleteListItem(listName, itemID),\n        setItemTitle: (listName, itemID, title) => this.setItemTitle(listName, itemID, title),\n        setItemCompleted: (listName, itemID, completed) => this.setItemCompleted(listName, itemID, completed),\n        setSelectedItem: itemID => this.setSelectedItem(itemID),\n        selectedItemID: this.state.currentlySelectedItemID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"details\",\n        className: \"col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Details, {\n        listName: list.name,\n        selectedItemID: selectedItem.itemID,\n        selectedItemTitle: selectedItem.title,\n        selectedItemDueDate: selectedItem.dueDate,\n        selectedItemDescription: selectedItem.description,\n        selectedItemPriority: selectedItem.priority,\n        selectedItemCompleted: selectedItem.completed,\n        setItemTitle: (listName, itemID, title) => this.setItemTitle(listName, itemID, title),\n        setItemCompleted: (listName, itemID, completed) => this.setItemCompleted(listName, itemID, completed),\n        setItemDueDate: (listName, itemID, dueDate) => this.setItemDueDate(listName, itemID, dueDate),\n        setItemPriority: (listName, itemID, priority) => this.setItemPriority(listName, itemID, priority),\n        setItemDescription: (listName, itemID, description) => this.setItemDescription(listName, itemID, description),\n        handleDelete: (listName, itemID) => this.deleteListItem(listName, itemID),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"toolbar\",\n        className: \"pl-5 col-1 h-25 row justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-cogs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-hand-sparkles\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-sign-out-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }\n      }))));\n    })));\n  }\n\n}\n\nfunction sortListItems(a, b) {\n  if (a.completed && !b.completed) return 1;else if (!a.completed && b.completed) return -1;else if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;else {\n    // both are either completed or incomplete or have a due date set or no due date set\n    if (a.dueDate === b.dueDate) {\n      // sort items due on the same day by priority\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n      if (priorityA !== priorityB) return priorityB - priorityA;else {\n        // sort by itemID\n        const itemIDA = a.itemID;\n        const itemIDB = b.itemID;\n        return itemIDA - itemIDB;\n      }\n    } else {\n      // sort items based on date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      return dateA - dateB;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js"],"names":["React","Component","Todolist","Details","Login","Register","Sidebar","ObjectID","require","domain","App","constructor","props","state","docTitle","loggedIn","registered","loginOrRegister","error","lists","username","currentlySelectedList","currentlySelectedItemID","bgURL","firstName","lastName","componentDidMount","backgroundURLs","currBackground","Math","floor","random","length","setState","verifyLogin","password","url","body","JSON","stringify","fetch","method","headers","then","res","json","success","getLists","info","setSelectedItem","itemID","verifyCookie","toggleLoginRegister","getCurrentlySelectedItem","title","description","dueDate","priority","completed","items","slice","i","addListItem","listName","id","name","item","toString","push","sort","sortListItems","deleteListItem","idx","j","splice","text","setItemTitle","setItemCompleted","setListName","oldListName","newListName","setItemDueDate","setItemPriority","setItemDescription","render","document","listArr","selectedItem","appClasses","loginRegClasses","backgroundImage","map","list","color","a","b","priorities","priorityA","indexOf","priorityB","itemIDA","itemIDB","dateA","Date","dateB"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\n// import $ from \"jquery\";\n\nimport Todolist from \"./todolist/Todolist.js\";\nimport Details from \"./todolist/Details.js\";\nimport Login from \"./todolist/Login.js\";\nimport Register from \"./todolist/Register.js\";\nimport Sidebar from \"./todolist/Sidebar.js\";\n\nvar ObjectID = require(\"bson-objectid\");\n\nconst domain = \"http://localhost:9000\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      docTitle: \"Log in | Doozy\",\n      loggedIn: \"not yet\",\n      registered: \"not yet\",\n      loginOrRegister: \"login\",\n      error: null,\n      lists: [],\n      username: \"\",\n      currentlySelectedList: 0,\n      currentlySelectedItemID: \"\",\n      bgURL: \"\",\n      firstName: \"\",\n      lastName: \"\",\n    };\n  }\n\n  componentDidMount() {\n    // this will be where you check for the cookie\n    // if the cookie is valid, then\n    // this.setState({\n    //   loggedIn: \"successful\",\n    //   username: \"[whatever was in the cookie]\",\n    // });\n\n    // visit https://freeimage.host/ to host more background images\n    const backgroundURLs = [\n      \"https://iili.io/J4xbBS.jpg\",\n      \"https://iili.io/J4xtQ2.jpg\",\n      \"https://iili.io/J4xZhl.jpg\",\n      \"https://iili.io/J4xp49.jpg\",\n      \"https://iili.io/J4xmE7.jpg\",\n      \"https://iili.io/J4z92e.jpg\",\n      \"https://iili.io/J4zdpj.jpg\",\n      \"https://iili.io/J4zJkb.jpg\",\n      \"https://iili.io/J4zHYu.jpg\",\n      \"https://iili.io/J4zWZl.jpg\",\n      \"https://iili.io/J4IBt4.jpg\",\n    ];\n    var currBackground = Math.floor(\n      Math.random() * Math.floor(backgroundURLs.length)\n    );\n\n    const bgURL = 'url(\"' + backgroundURLs[currBackground] + '\")';\n\n    this.setState({ bgURL: bgURL });\n  }\n\n  verifyLogin(username, password) {\n    const url = domain + \"/verifyLogin\";\n    const body = JSON.stringify({\n      username: username,\n      password: password,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.success) {\n          this.setState({\n            docTitle: \"Lists | Doozy\",\n            loggedIn: \"successful\",\n            username: username,\n            firstName: res.firstName,\n            lastName: res.lastName,\n          });\n          this.getLists();\n        } else if (res.info === \"username does not exist\")\n          this.setState({ loggedIn: \"username does not exist\" });\n        else if (res.info === \"incorrect password\")\n          this.setState({ loggedIn: \"incorrect password\" });\n      });\n  }\n\n  setSelectedItem(itemID) {\n    this.setState({ currentlySelectedItemID: itemID });\n  }\n\n  verifyCookie() {}\n\n  toggleLoginRegister() {\n    if (this.state.loginOrRegister === \"login\")\n      this.setState({\n        docTitle: \"Sign Up | Doozy\",\n        loginOrRegister: \"register\",\n      });\n    else if (this.state.loginOrRegister === \"register\")\n      this.setState({\n        docTitle: \"Log In | Doozy\",\n        loginOrRegister: \"login\",\n      });\n  }\n\n  getCurrentlySelectedItem() {\n    if (this.state.currentlySelectedItemID === \"\")\n      return {\n        title: \"\",\n        description: \"\",\n        dueDate: \"\",\n        priority: \"\",\n        completed: false,\n        itemID: \"\",\n      };\n\n    var items = this.state.lists.slice(this.state.currentlySelectedList)[0]\n      .items;\n\n    for (let i = 0; i < items.length; i++)\n      if (items[i].itemID === this.state.currentlySelectedItemID)\n        return items[i];\n  }\n\n  // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: this.state.username /*this.props.username*/,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        var lists = res;\n        this.setState({ lists: lists });\n      });\n  }\n\n  addListItem(listName, title, dueDate, description, priority) {\n    const lists = this.state.lists.slice();\n    var id = null;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        var item = {\n          title: title,\n          description: description,\n          dueDate: dueDate,\n          priority: priority,\n          completed: false,\n          itemID: new ObjectID().toString(),\n        };\n        items.push(item);\n        id = item.itemID;\n        items.sort(sortListItems);\n        break;\n      }\n    }\n\n    this.setState({ lists: lists, currentlySelectedItemID: id });\n\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n      itemID: id,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  deleteListItem(listName, itemID) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        var items = lists[i].items;\n        var idx = -1;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            idx = j;\n            break;\n          }\n        }\n        items = items.splice(idx, 1);\n      }\n    }\n\n    this.setState({ lists: lists, currentlySelectedItemID: \"\" });\n\n    const url = domain + \"/deleteListItem\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    }).then((res) => res.text());\n  }\n\n  setItemTitle(listName, itemID, title) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].title = title;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemTitle\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      title: title,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    }).then((res) => res.text());\n  }\n\n  setItemCompleted(listName, itemID, completed) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].completed = completed;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemCompleted\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      completed: completed,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setListName(oldListName, newListName) {}\n\n  setItemDueDate(listName, itemID, dueDate) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].dueDate = dueDate;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemDueDate\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      dueDate: dueDate,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setItemPriority(listName, itemID, priority) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].priority = priority;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemPriority\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      priority: priority,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  setItemDescription(listName, itemID, description) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].description = description;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemDescription\";\n    const body = JSON.stringify({\n      username: this.state.username,\n      listName: listName,\n      itemID: itemID,\n      description: description,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: body,\n    });\n  }\n\n  render() {\n    document.title = this.state.docTitle;\n\n    const listArr = this.state.lists.slice(this.state.currentlySelectedList, 1);\n\n    const selectedItem = this.getCurrentlySelectedItem();\n    const appClasses =\n      \"row align-items-center\" +\n      (this.state.loggedIn === \"successful\" ? \"\" : \" d-none\");\n    const loginRegClasses =\n      \"container-fluid align-items-center\" +\n      (this.state.loggedIn === \"successful\" ? \" d-none\" : \" d-flex \");\n\n    return (\n      <>\n        <div\n          id=\"login-register\"\n          style={{ backgroundImage: this.state.bgURL }}\n          className={loginRegClasses}\n        >\n          <div\n            className={\n              \"login-section\" +\n              (this.state.loginOrRegister === \"login\" ? \"\" : \" d-none\")\n            }\n          >\n            <Login\n              loginInfo={this.state.loggedIn}\n              registerInfo={this.state.registered}\n              verifyLogin={(username, password) =>\n                this.verifyLogin(username, password)\n              }\n              switchToRegister={() => this.toggleLoginRegister()}\n            />\n          </div>\n          <div\n            className={\n              \"register-section\" +\n              (this.state.loginOrRegister === \"register\" ? \"\" : \" d-none\")\n            }\n          >\n            <Register switchToLogin={() => this.toggleLoginRegister()} />\n          </div>\n        </div>\n        <div\n          id=\"app\"\n          style={{ backgroundImage: this.state.bgURL }}\n          className={appClasses}\n        >\n          <div id=\"sidebar\" className=\"col-2 p-0\">\n            <Sidebar\n              lists={this.state.lists}\n              firstName={this.state.firstName}\n              lastName={this.state.lastName}\n            />\n          </div>\n          {listArr.map((list, i) => {\n            return (\n              <React.Fragment key={list.name}>\n                <div id=\"todolist\" className=\"col-5\">\n                  <Todolist\n                    color={list.color}\n                    name={list.name}\n                    items={list.items}\n                    addListItem={(\n                      listName,\n                      title,\n                      dueDate,\n                      description,\n                      priority\n                    ) =>\n                      this.addListItem(\n                        listName,\n                        title,\n                        dueDate,\n                        description,\n                        priority\n                      )\n                    }\n                    deleteListItem={(listName, itemID) =>\n                      this.deleteListItem(listName, itemID)\n                    }\n                    setItemTitle={(listName, itemID, title) =>\n                      this.setItemTitle(listName, itemID, title)\n                    }\n                    setItemCompleted={(listName, itemID, completed) =>\n                      this.setItemCompleted(listName, itemID, completed)\n                    }\n                    setSelectedItem={(itemID) => this.setSelectedItem(itemID)}\n                    selectedItemID={this.state.currentlySelectedItemID}\n                  />\n                </div>\n                <div id=\"details\" className=\"col-4\">\n                  <Details\n                    listName={list.name}\n                    selectedItemID={selectedItem.itemID}\n                    selectedItemTitle={selectedItem.title}\n                    selectedItemDueDate={selectedItem.dueDate}\n                    selectedItemDescription={selectedItem.description}\n                    selectedItemPriority={selectedItem.priority}\n                    selectedItemCompleted={selectedItem.completed}\n                    setItemTitle={(listName, itemID, title) =>\n                      this.setItemTitle(listName, itemID, title)\n                    }\n                    setItemCompleted={(listName, itemID, completed) =>\n                      this.setItemCompleted(listName, itemID, completed)\n                    }\n                    setItemDueDate={(listName, itemID, dueDate) =>\n                      this.setItemDueDate(listName, itemID, dueDate)\n                    }\n                    setItemPriority={(listName, itemID, priority) =>\n                      this.setItemPriority(listName, itemID, priority)\n                    }\n                    setItemDescription={(listName, itemID, description) =>\n                      this.setItemDescription(listName, itemID, description)\n                    }\n                    handleDelete={(listName, itemID) =>\n                      this.deleteListItem(listName, itemID)\n                    }\n                  />\n                </div>\n                <div\n                  id=\"toolbar\"\n                  className=\"pl-5 col-1 h-25 row justify-content-center\"\n                >\n                  <div className=\"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\">\n                    <i className=\"fas fa-cogs\"></i>\n                  </div>\n                  <div className=\"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\">\n                    <i className=\"fas fa-hand-sparkles\"></i>\n                  </div>\n                  <div className=\"toolbar-icon col-10 mx-1 text-center d-flex justify-content-center align-items-center\">\n                    <i className=\"fas fa-sign-out-alt\"></i>\n                  </div>\n                </div>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction sortListItems(a, b) {\n  if (a.completed && !b.completed) return 1;\n  else if (!a.completed && b.completed) return -1;\n  else if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;\n  else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;\n  else {\n    // both are either completed or incomplete or have a due date set or no due date set\n    if (a.dueDate === b.dueDate) {\n      // sort items due on the same day by priority\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n\n      if (priorityA !== priorityB) return priorityB - priorityA;\n      else {\n        // sort by itemID\n        const itemIDA = a.itemID;\n        const itemIDB = b.itemID;\n        return itemIDA - itemIDB;\n      }\n    } else {\n      // sort items based on date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      return dateA - dateB;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}