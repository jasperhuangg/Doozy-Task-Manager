{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Todolist from \"./todolist/Todolist.js\";\nconst domain = \"http://localhost:9000\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponse: \"\",\n      isLoaded: false,\n      error: null,\n      lists: []\n    };\n  } // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n\n\n  getLists() {\n    const url = domain + \"/getLists?username=Jasper\";\n    /* + this.props.username*/\n    // const body = JSON.stringify({\n    //   username: \"Jasper\" /*this.props.username*/,\n    // });\n\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      } // body: body,\n\n    }).then(res => res.json()).then(res => this.setState({\n      isLoaded: true,\n      lists: res\n    }), error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    })).catch(err => err);\n  }\n\n  componentDidMount() {\n    this.callAPI();\n    this.getLists();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, this.state.apiResponse), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, this.state.lists.map((item, i) => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, item))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js"],"names":["React","Component","Todolist","domain","App","constructor","props","state","apiResponse","isLoaded","error","lists","getLists","url","fetch","method","headers","then","res","json","setState","callAPI","text","catch","err","componentDidMount","render","map","item","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,MAAMC,MAAM,GAAG,uBAAf;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACzCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,QAAQ,EAAE,KAA7B;AAAoCC,MAAAA,KAAK,EAAE,IAA3C;AAAiDC,MAAAA,KAAK,EAAE;AAAxD,KAAb;AACD,GAJwC,CAMzC;AACA;;;AACAC,EAAAA,QAAQ,GAAG;AACT,UAAMC,GAAG,GAAGV,MAAM,GAAG,2BAArB;AAAkD;AAClD;AACA;AACA;;AAEAW,IAAAA,KAAK,CAACD,GAAD,EAAM;AACTE,MAAAA,MAAM,EAAE,KADC;AAETC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT,CAEP;;AAFO,OAFA,CAMT;;AANS,KAAN,CAAL,CAQGC,IARH,CAQSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARjB,EASGF,IATH,CAUKC,GAAD,IAAS,KAAKE,QAAL,CAAc;AAAEX,MAAAA,QAAQ,EAAE,IAAZ;AAAkBE,MAAAA,KAAK,EAAEO;AAAzB,KAAd,CAVb,EAWKR,KAAD,IAAW;AACT,WAAKU,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA;AAFY,OAAd;AAID,KAhBL;AAkBD;;AAEDW,EAAAA,OAAO,GAAG;AACRP,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGG,IADH,CACSC,GAAD,IAASA,GAAG,CAACI,IAAJ,EADjB,EAEGL,IAFH,CAESC,GAAD,IAAS,KAAKE,QAAL,CAAc;AAAEZ,MAAAA,WAAW,EAAEU;AAAf,KAAd,CAFjB,EAGGK,KAHH,CAGUC,GAAD,IAASA,GAHlB;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,OAAL;AACA,SAAKT,QAAL;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKnB,KAAL,CAAWC,WAAf,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWI,KAAX,CAAiBgB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,CAAP,kBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAL,CADD,CADH,CAFF,CADF;AAUD;;AAzDwC","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Todolist from \"./todolist/Todolist.js\";\n\nconst domain = \"http://localhost:9000\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { apiResponse: \"\", isLoaded: false, error: null, lists: [] };\n  }\n\n  // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n  getLists() {\n    const url = domain + \"/getLists?username=Jasper\"; /* + this.props.username*/\n    // const body = JSON.stringify({\n    //   username: \"Jasper\" /*this.props.username*/,\n    // });\n\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      // body: body,\n    })\n      .then((res) => res.json())\n      .then(\n        (res) => this.setState({ isLoaded: true, lists: res }),\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\")\n      .then((res) => res.text())\n      .then((res) => this.setState({ apiResponse: res }))\n      .catch((err) => err);\n  }\n\n  componentDidMount() {\n    this.callAPI();\n    this.getLists();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p>{this.state.apiResponse}</p>\n        <ul>\n          {this.state.lists.map((item, i) => (\n            <li>{item}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}