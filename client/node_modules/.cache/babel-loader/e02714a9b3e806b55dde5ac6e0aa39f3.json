{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/AddListOverlay.js\";\nimport React, { Component } from \"react\";\nexport default class AddListOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedColor: \"\",\n      listName: \"\",\n      listNameExists: false\n    };\n  }\n\n  selectColor(e) {\n    const color = e.currentTarget.dataset.color;\n    this.setState({\n      selectedColor: color\n    });\n  }\n\n  handleSubmit() {\n    const listName = this.state.listName;\n    const color = this.state.selectedColor;\n    if (listNameExists(this.props.lists, listName)) this.setState({\n      listNameExists: true\n    });else {// call create list function\n    }\n  }\n\n  render() {\n    const colors = [\"#FDC5F5\", \"#861388\", \"#5E0B15\", \"#e01e37\", \"#EF476F\", \"#FFD166\", \"#fb5607\", \"#ffcdb2\", \"#8cb369\", \"#29BF12\", \"#06EFB1\", \"#0496FF\", \"#5390d9\", \"#023e7d\", \"#5448C8\", \"#131200\", \"#d9d9d9\"];\n    const classes = \"add-list-overlay shadow font-grey p-4\" + (this.props.displaying ? \" add-list-overlay-displayed\" : \"\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Add List\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"add-list-title-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"add-list-title-input\",\n      className: \"form-control form-control-sm\",\n      ref: this.props.addListTitleRef,\n      onChange: e => {\n        this.setState({\n          listName: e.currentTarget.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"add-list-color-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Color\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, colors.map((color, index) => {\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: \"fa fa-circle add-list-overlay-color\" + (this.state.selectedColor === {\n          color\n        } ? \" add-list-overlay-color-selected\" : \"\"),\n        style: {\n          color: color\n        },\n        \"data-color\": color,\n        onClick: e => this.selectColor(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      });\n    })));\n  }\n\n}\n\nfunction listNameExists(lists, listName) {\n  for (let i = 0; i < lists.length; i++) if (lists.name === listName) return true;\n\n  return false;\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/AddListOverlay.js"],"names":["React","Component","AddListOverlay","constructor","props","state","selectedColor","listName","listNameExists","selectColor","e","color","currentTarget","dataset","setState","handleSubmit","lists","render","colors","classes","displaying","addListTitleRef","value","map","index","i","length","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class AddListOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selectedColor: \"\", listName: \"\", listNameExists: false };\n  }\n\n  selectColor(e) {\n    const color = e.currentTarget.dataset.color;\n    this.setState({ selectedColor: color });\n  }\n\n  handleSubmit() {\n    const listName = this.state.listName;\n    const color = this.state.selectedColor;\n\n    if (listNameExists(this.props.lists, listName))\n      this.setState({ listNameExists: true });\n    else {\n      // call create list function\n    }\n  }\n\n  render() {\n    const colors = [\n      \"#FDC5F5\",\n      \"#861388\",\n      \"#5E0B15\",\n      \"#e01e37\",\n      \"#EF476F\",\n      \"#FFD166\",\n      \"#fb5607\",\n      \"#ffcdb2\",\n      \"#8cb369\",\n      \"#29BF12\",\n      \"#06EFB1\",\n      \"#0496FF\",\n      \"#5390d9\",\n      \"#023e7d\",\n      \"#5448C8\",\n      \"#131200\",\n      \"#d9d9d9\",\n    ];\n    const classes =\n      \"add-list-overlay shadow font-grey p-4\" +\n      (this.props.displaying ? \" add-list-overlay-displayed\" : \"\");\n    return (\n      <div className={classes}>\n        <div className=\"text-center\">\n          <h5>Add List</h5>\n        </div>\n        <label htmlFor=\"add-list-title-input\">Title</label>\n        <input\n          id=\"add-list-title-input\"\n          className=\"form-control form-control-sm\"\n          ref={this.props.addListTitleRef}\n          onChange={(e) => {\n            this.setState({ listName: e.currentTarget.value });\n          }}\n        />\n        <br />\n        <label htmlFor=\"add-list-color-input\">Color</label>\n\n        <div className=\"d-flex justify-content-around\">\n          {colors.map((color, index) => {\n            <i\n              className={\n                \"fa fa-circle add-list-overlay-color\" +\n                (this.state.selectedColor === { color }\n                  ? \" add-list-overlay-color-selected\"\n                  : \"\")\n              }\n              style={{ color: color }}\n              data-color={color}\n              onClick={(e) => this.selectColor(e)}\n            />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction listNameExists(lists, listName) {\n  for (let i = 0; i < lists.length; i++)\n    if (lists.name === listName) return true;\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}