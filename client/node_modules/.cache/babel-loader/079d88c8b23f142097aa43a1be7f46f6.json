{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/EditListOverlay.js\";\nimport React, { Component } from \"react\";\nexport default class EditListOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedColor: undefined,\n      listName: undefined,\n      issue: \"\"\n    };\n  }\n\n  selectColor(e) {\n    const color = e.currentTarget.dataset.color;\n    this.setState({\n      selectedColor: color\n    });\n    this.props.focusTitleInput();\n  }\n\n  handleSubmit() {\n    const listName = this.state.listName;\n    const color = this.state.selectedColor;\n\n    if (!listNameExists(this.props.startingName, this.props.lists, listName)) {\n      this.setState({\n        selectedColor: undefined,\n        listName: undefined\n      });\n      this.props.editList(this.props.startingName, listName, color); // close the overlay\n\n      this.props.hideOverlay();\n    } else {\n      this.setState({\n        issue: \"List name already exists.\"\n      });\n    }\n  }\n\n  render() {\n    var issueText = this.state.issue;\n\n    if ((this.state.listName === undefined || this.state.selectedColor === undefined) && this.props.startingColor !== \"\" && this.props.startingName !== \"\") {\n      this.setState({\n        selectedColor: this.props.startingColor,\n        listName: this.props.startingName\n      });\n    }\n\n    const colors = [\"#FDC5F5\", \"#861388\", \"#80242f\", \"#f76f90\", \"#e01e37\", \"#FFD166\", \"#fb5607\", \"#ffcdb2\", \"#8cb369\", \"#29BF12\", \"#06EFB1\", \"#0496FF\", \"#5390d9\", \"#023e7d\", \"#5448C8\", \"#131200\", \"#d9d9d9\"];\n    const classes = \"add-list-overlay shadow font-grey p-4\" + (this.props.displaying ? \" add-list-overlay-displayed\" : \"\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      onKeyDown: e => {\n        if (e.keyCode === 13 && this.state.listName !== \"\" && this.state.selectedColor !== \"\") this.handleSubmit();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      style: {\n        pointerEvents: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Edit List\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"add-list-title-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"add-list-title-input\",\n      className: \"form-control form-control-sm\",\n      ref: this.props.editListTitleRef,\n      onChange: e => {\n        this.setState({\n          listName: e.currentTarget.value,\n          issue: \"\"\n        });\n      },\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-right text-danger\" + (this.state.issue !== \"\" ? \"\" : \" invisible\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, issueText)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"add-list-color-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, \"Color\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, colors.map((color, index) => {\n      var shadedColor = shadeColor(color, -30) + \"BB\";\n      return /*#__PURE__*/React.createElement(\"i\", {\n        key: color,\n        className: \"fa fa-circle add-list-overlay-color\" + (this.state.selectedColor === color ? \" add-list-overlay-color-selected\" : \"\"),\n        style: {\n          fontSize: \"13px\",\n          color: color,\n          borderColor: this.state.selectedColor === color ? shadedColor : \"rgba(0, 0, 0, 0)\",\n          backgroundColor: this.state.selectedColor === color ? shadedColor : \"rgba(0, 0, 0, 0)\"\n        },\n        \"data-color\": color,\n        onClick: e => this.selectColor(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mt-5 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-secondary mr-2 px-3\",\n      style: {\n        borderRadius: \"5px\"\n      },\n      onClick: () => {\n        this.setState({\n          selectedColor: undefined,\n          listName: undefined\n        });\n        this.props.hideOverlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary ml-2 px-3\",\n      style: {\n        borderRadius: \"5px\"\n      },\n      onClick: () => this.handleSubmit(),\n      disabled: this.state.listName === \"\" || this.state.selectedColor === \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, \"Save\")));\n  }\n\n}\n\nfunction listNameExists(originalName, lists, listName) {\n  for (let i = 0; i < lists.length; i++) if (lists[i].name === listName && lists[i].name !== originalName) return true;\n\n  return false;\n}\n\nfunction shadeColor(color, percent) {\n  var R = parseInt(color.substring(1, 3), 16);\n  var G = parseInt(color.substring(3, 5), 16);\n  var B = parseInt(color.substring(5, 7), 16);\n  R = parseInt(R * (100 + percent) / 100);\n  G = parseInt(G * (100 + percent) / 100);\n  B = parseInt(B * (100 + percent) / 100);\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n  var RR = R.toString(16).length === 1 ? \"0\" + R.toString(16) : R.toString(16);\n  var GG = G.toString(16).length === 1 ? \"0\" + G.toString(16) : G.toString(16);\n  var BB = B.toString(16).length === 1 ? \"0\" + B.toString(16) : B.toString(16);\n  return \"#\" + RR + GG + BB;\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/EditListOverlay.js"],"names":["React","Component","EditListOverlay","constructor","props","state","selectedColor","undefined","listName","issue","selectColor","e","color","currentTarget","dataset","setState","focusTitleInput","handleSubmit","listNameExists","startingName","lists","editList","hideOverlay","render","issueText","startingColor","colors","classes","displaying","keyCode","pointerEvents","editListTitleRef","value","map","index","shadedColor","shadeColor","fontSize","borderColor","backgroundColor","borderRadius","originalName","i","length","name","percent","R","parseInt","substring","G","B","RR","toString","GG","BB"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class EditListOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedColor: undefined,\n      listName: undefined,\n      issue: \"\",\n    };\n  }\n\n  selectColor(e) {\n    const color = e.currentTarget.dataset.color;\n    this.setState({ selectedColor: color });\n    this.props.focusTitleInput();\n  }\n\n  handleSubmit() {\n    const listName = this.state.listName;\n    const color = this.state.selectedColor;\n\n    if (!listNameExists(this.props.startingName, this.props.lists, listName)) {\n      this.setState({ selectedColor: undefined, listName: undefined });\n\n      this.props.editList(this.props.startingName, listName, color);\n\n      // close the overlay\n      this.props.hideOverlay();\n    } else {\n      this.setState({ issue: \"List name already exists.\" });\n    }\n  }\n\n  render() {\n    var issueText = this.state.issue;\n    if (\n      (this.state.listName === undefined ||\n        this.state.selectedColor === undefined) &&\n      this.props.startingColor !== \"\" &&\n      this.props.startingName !== \"\"\n    ) {\n      this.setState({\n        selectedColor: this.props.startingColor,\n        listName: this.props.startingName,\n      });\n    }\n\n    const colors = [\n      \"#FDC5F5\",\n      \"#861388\",\n      \"#80242f\",\n      \"#f76f90\",\n      \"#e01e37\",\n      \"#FFD166\",\n      \"#fb5607\",\n      \"#ffcdb2\",\n      \"#8cb369\",\n      \"#29BF12\",\n      \"#06EFB1\",\n      \"#0496FF\",\n      \"#5390d9\",\n      \"#023e7d\",\n      \"#5448C8\",\n      \"#131200\",\n      \"#d9d9d9\",\n    ];\n\n    const classes =\n      \"add-list-overlay shadow font-grey p-4\" +\n      (this.props.displaying ? \" add-list-overlay-displayed\" : \"\");\n    return (\n      <div\n        className={classes}\n        onKeyDown={(e) => {\n          if (\n            e.keyCode === 13 &&\n            this.state.listName !== \"\" &&\n            this.state.selectedColor !== \"\"\n          )\n            this.handleSubmit();\n        }}\n      >\n        <div className=\"text-center\" style={{ pointerEvents: \"none\" }}>\n          <h5>Edit List</h5>\n        </div>\n        <label htmlFor=\"add-list-title-input\">Title</label>\n        <input\n          id=\"add-list-title-input\"\n          className=\"form-control form-control-sm\"\n          ref={this.props.editListTitleRef}\n          onChange={(e) => {\n            this.setState({\n              listName: e.currentTarget.value,\n              issue: \"\",\n            });\n          }}\n          autoComplete=\"off\"\n        />\n        <span className=\"text-right\">\n          <small\n            className={\n              \"text-right text-danger\" +\n              (this.state.issue !== \"\" ? \"\" : \" invisible\")\n            }\n          >\n            {issueText}\n          </small>\n        </span>\n        <br />\n\n        <label htmlFor=\"add-list-color-input\">Color</label>\n\n        <div className=\"d-flex justify-content-around\">\n          {colors.map((color, index) => {\n            var shadedColor = shadeColor(color, -30) + \"BB\";\n            return (\n              <i\n                key={color}\n                className={\n                  \"fa fa-circle add-list-overlay-color\" +\n                  (this.state.selectedColor === color\n                    ? \" add-list-overlay-color-selected\"\n                    : \"\")\n                }\n                style={{\n                  fontSize: \"13px\",\n                  color: color,\n                  borderColor:\n                    this.state.selectedColor === color\n                      ? shadedColor\n                      : \"rgba(0, 0, 0, 0)\",\n                  backgroundColor:\n                    this.state.selectedColor === color\n                      ? shadedColor\n                      : \"rgba(0, 0, 0, 0)\",\n                }}\n                data-color={color}\n                onClick={(e) => this.selectColor(e)}\n              />\n            );\n          })}\n        </div>\n        <div className=\"d-flex justify-content-center mt-5 pb-2\">\n          <button\n            className=\"btn btn-sm btn-secondary mr-2 px-3\"\n            style={{ borderRadius: \"5px\" }}\n            onClick={() => {\n              this.setState({\n                selectedColor: undefined,\n                listName: undefined,\n              });\n              this.props.hideOverlay();\n            }}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"btn btn-sm btn-primary ml-2 px-3\"\n            style={{ borderRadius: \"5px\" }}\n            onClick={() => this.handleSubmit()}\n            disabled={\n              this.state.listName === \"\" || this.state.selectedColor === \"\"\n            }\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction listNameExists(originalName, lists, listName) {\n  for (let i = 0; i < lists.length; i++)\n    if (lists[i].name === listName && lists[i].name !== originalName)\n      return true;\n\n  return false;\n}\n\nfunction shadeColor(color, percent) {\n  var R = parseInt(color.substring(1, 3), 16);\n  var G = parseInt(color.substring(3, 5), 16);\n  var B = parseInt(color.substring(5, 7), 16);\n\n  R = parseInt((R * (100 + percent)) / 100);\n  G = parseInt((G * (100 + percent)) / 100);\n  B = parseInt((B * (100 + percent)) / 100);\n\n  R = R < 255 ? R : 255;\n  G = G < 255 ? G : 255;\n  B = B < 255 ? B : 255;\n\n  var RR = R.toString(16).length === 1 ? \"0\" + R.toString(16) : R.toString(16);\n  var GG = G.toString(16).length === 1 ? \"0\" + G.toString(16) : G.toString(16);\n  var BB = B.toString(16).length === 1 ? \"0\" + B.toString(16) : B.toString(16);\n\n  return \"#\" + RR + GG + BB;\n}\n"]},"metadata":{},"sourceType":"module"}