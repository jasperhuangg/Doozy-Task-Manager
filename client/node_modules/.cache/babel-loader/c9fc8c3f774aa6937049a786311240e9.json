{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/EditListOverlay.js\";\nimport React, { Component } from \"react\";\nexport default class EditListOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedColor: undefined,\n      listName: undefined,\n      issue: \"\"\n    };\n  }\n\n  selectColor(e) {\n    const color = e.currentTarget.dataset.color;\n    console.log(color);\n    this.setState({\n      selectedColor: color\n    });\n    this.props.focusTitleInput();\n  }\n\n  handleSubmit() {\n    const listName = this.state.listName;\n    const color = this.state.selectedColor;\n\n    if (!listNameExists(this.props.startingName, this.props.lists, listName)) {\n      this.setState({\n        selectedColor: undefined,\n        listName: undefined\n      });\n      this.props.editList(this.props.startingName, listName, color); // close the overlay\n\n      this.props.hideOverlay();\n    } else {\n      this.setState({\n        issue: \"List name already exists.\"\n      });\n    }\n  }\n\n  render() {\n    var issueText = this.state.issue;\n\n    if ((this.state.listName === undefined || this.state.selectedColor === undefined) && this.props.startingColor !== \"\" && this.props.startingName !== \"\") {\n      console.log(\"setting\");\n      this.setState({\n        selectedColor: this.props.startingColor,\n        listName: this.props.startingName\n      });\n    }\n\n    const colors = [\"#FDC5F5\", \"#861388\", \"#5E0B15\", \"#f76f90\", \"#e01e37\", \"#FFD166\", \"#fb5607\", \"#ffcdb2\", \"#8cb369\", \"#29BF12\", \"#06EFB1\", \"#0496FF\", \"#5390d9\", \"#023e7d\", \"#5448C8\", \"#131200\", \"#d9d9d9\"];\n    const classes = \"add-list-overlay shadow font-grey p-4\" + (this.props.displaying ? \" add-list-overlay-displayed\" : \"\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      onKeyDown: e => {\n        if (e.keyCode === 13) this.handleSubmit();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      style: {\n        pointerEvents: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Edit List\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"add-list-title-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"add-list-title-input\",\n      className: \"form-control form-control-sm\",\n      ref: this.props.editListTitleRef,\n      onChange: e => {\n        this.setState({\n          listName: e.currentTarget.value,\n          issue: \"\"\n        });\n      },\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-right text-danger\" + (this.state.issue !== \"\" ? \"\" : \" invisible\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, issueText)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"add-list-color-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, \"Color\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, colors.map((color, index) => {\n      return /*#__PURE__*/React.createElement(\"i\", {\n        key: color,\n        className: \"fa fa-circle add-list-overlay-color\" + (this.state.selectedColor === color ? \" add-list-overlay-color-selected\" : \"\"),\n        style: {\n          color: color\n        },\n        \"data-color\": color,\n        onClick: e => this.selectColor(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mt-5 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-secondary mr-2 px-3\",\n      style: {\n        borderRadius: \"5px\"\n      },\n      onClick: () => {\n        this.setState({\n          selectedColor: undefined,\n          listName: undefined\n        });\n        this.props.hideOverlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary ml-2 px-3\",\n      style: {\n        borderRadius: \"5px\"\n      },\n      onClick: () => this.handleSubmit(),\n      disabled: this.state.listName === \"\" || this.state.selectedColor === \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, \"Save\")));\n  }\n\n}\n\nfunction listNameExists(originalName, lists, listName) {\n  for (let i = 0; i < lists.length; i++) if (lists[i].name === listName && lists[i].name !== originalName) return true;\n\n  return false;\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/EditListOverlay.js"],"names":["React","Component","EditListOverlay","constructor","props","state","selectedColor","undefined","listName","issue","selectColor","e","color","currentTarget","dataset","console","log","setState","focusTitleInput","handleSubmit","listNameExists","startingName","lists","editList","hideOverlay","render","issueText","startingColor","colors","classes","displaying","keyCode","pointerEvents","editListTitleRef","value","map","index","borderRadius","originalName","i","length","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class EditListOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedColor: undefined,\n      listName: undefined,\n      issue: \"\",\n    };\n  }\n\n  selectColor(e) {\n    const color = e.currentTarget.dataset.color;\n    console.log(color);\n    this.setState({ selectedColor: color });\n    this.props.focusTitleInput();\n  }\n\n  handleSubmit() {\n    const listName = this.state.listName;\n    const color = this.state.selectedColor;\n\n    if (!listNameExists(this.props.startingName, this.props.lists, listName)) {\n      this.setState({ selectedColor: undefined, listName: undefined });\n\n      this.props.editList(this.props.startingName, listName, color);\n\n      // close the overlay\n      this.props.hideOverlay();\n    } else {\n      this.setState({ issue: \"List name already exists.\" });\n    }\n  }\n\n  render() {\n    var issueText = this.state.issue;\n    if (\n      (this.state.listName === undefined ||\n        this.state.selectedColor === undefined) &&\n      this.props.startingColor !== \"\" &&\n      this.props.startingName !== \"\"\n    ) {\n      console.log(\"setting\");\n      this.setState({\n        selectedColor: this.props.startingColor,\n        listName: this.props.startingName,\n      });\n    }\n\n    const colors = [\n      \"#FDC5F5\",\n      \"#861388\",\n      \"#5E0B15\",\n      \"#f76f90\",\n      \"#e01e37\",\n      \"#FFD166\",\n      \"#fb5607\",\n      \"#ffcdb2\",\n      \"#8cb369\",\n      \"#29BF12\",\n      \"#06EFB1\",\n      \"#0496FF\",\n      \"#5390d9\",\n      \"#023e7d\",\n      \"#5448C8\",\n      \"#131200\",\n      \"#d9d9d9\",\n    ];\n\n    const classes =\n      \"add-list-overlay shadow font-grey p-4\" +\n      (this.props.displaying ? \" add-list-overlay-displayed\" : \"\");\n    return (\n      <div\n        className={classes}\n        onKeyDown={(e) => {\n          if (e.keyCode === 13) this.handleSubmit();\n        }}\n      >\n        <div className=\"text-center\" style={{ pointerEvents: \"none\" }}>\n          <h5>Edit List</h5>\n        </div>\n        <label htmlFor=\"add-list-title-input\">Title</label>\n        <input\n          id=\"add-list-title-input\"\n          className=\"form-control form-control-sm\"\n          ref={this.props.editListTitleRef}\n          onChange={(e) => {\n            this.setState({\n              listName: e.currentTarget.value,\n              issue: \"\",\n            });\n          }}\n          autoComplete=\"off\"\n        />\n        <span className=\"text-right\">\n          <small\n            className={\n              \"text-right text-danger\" +\n              (this.state.issue !== \"\" ? \"\" : \" invisible\")\n            }\n          >\n            {issueText}\n          </small>\n        </span>\n        <br />\n\n        <label htmlFor=\"add-list-color-input\">Color</label>\n\n        <div className=\"d-flex justify-content-around\">\n          {colors.map((color, index) => {\n            return (\n              <i\n                key={color}\n                className={\n                  \"fa fa-circle add-list-overlay-color\" +\n                  (this.state.selectedColor === color\n                    ? \" add-list-overlay-color-selected\"\n                    : \"\")\n                }\n                style={{ color: color }}\n                data-color={color}\n                onClick={(e) => this.selectColor(e)}\n              />\n            );\n          })}\n        </div>\n        <div className=\"d-flex justify-content-center mt-5 pb-2\">\n          <button\n            className=\"btn btn-sm btn-secondary mr-2 px-3\"\n            style={{ borderRadius: \"5px\" }}\n            onClick={() => {\n              this.setState({\n                selectedColor: undefined,\n                listName: undefined,\n              });\n              this.props.hideOverlay();\n            }}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"btn btn-sm btn-primary ml-2 px-3\"\n            style={{ borderRadius: \"5px\" }}\n            onClick={() => this.handleSubmit()}\n            disabled={\n              this.state.listName === \"\" || this.state.selectedColor === \"\"\n            }\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction listNameExists(originalName, lists, listName) {\n  for (let i = 0; i < lists.length; i++)\n    if (lists[i].name === listName && lists[i].name !== originalName)\n      return true;\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}