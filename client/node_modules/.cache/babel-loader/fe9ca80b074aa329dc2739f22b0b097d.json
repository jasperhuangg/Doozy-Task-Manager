{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/AddListOverlay.js\";\nimport React, { Component } from \"react\"; // import ColorShader from \"./ColorShader.js\";\n\nexport default class AddListOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedColor: \"\",\n      listName: \"\",\n      issue: \"\"\n    };\n  }\n\n  selectColor(e) {\n    const color = e.currentTarget.dataset.color;\n    console.log(color);\n    this.setState({\n      selectedColor: color\n    });\n    this.props.focusTitleInput();\n  }\n\n  handleSubmit() {\n    console.log(\"triggered in addlistoverlay\");\n    const listName = this.state.listName;\n    const color = this.state.selectedColor;\n\n    if (listNameExists(this.props.lists, listName)) {\n      this.setState({\n        issue: \"List name already exists.\"\n      });\n    } else {\n      // call create list function\n      this.props.createList(listName, color); // close the overlay\n\n      this.props.hideOverlay();\n      this.setState({\n        selectedColor: \"\",\n        listName: \"\",\n        issue: \"\"\n      });\n    }\n  }\n\n  render() {\n    var issueText = this.state.issue;\n    const colors = [\"#FDC5F5\", \"#861388\", \"#5E0B15\", \"#f76f90\", \"#e01e37\", \"#FFD166\", \"#fb5607\", \"#ffcdb2\", \"#8cb369\", \"#29BF12\", \"#06EFB1\", \"#0496FF\", \"#5390d9\", \"#023e7d\", \"#5448C8\", \"#131200\", \"#d9d9d9\"];\n    const classes = \"add-list-overlay shadow font-grey p-4\" + (this.props.displaying ? \" add-list-overlay-displayed\" : \"\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      onKeyDown: e => {\n        if (e.keyCode === 13 && this.state.listName !== \"\" && this.state.selectedColor !== \"\") this.handleSubmit();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      style: {\n        pointerEvents: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Add List\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"add-list-title-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"add-list-title-input\",\n      className: \"form-control form-control-sm\",\n      ref: this.props.addListTitleRef,\n      onChange: e => {\n        this.setState({\n          listName: e.currentTarget.value,\n          issue: \"\"\n        });\n      },\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-right text-danger\" + (this.state.issue !== \"\" ? \"\" : \" invisible\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, issueText)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"add-list-color-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, \"Color\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, colors.map((color, index) => {\n      var shadedColor = ColorShader(-0.5, color);\n      return /*#__PURE__*/React.createElement(\"i\", {\n        key: color,\n        className: \"fa fa-circle add-list-overlay-color\" + (this.state.selectedColor === color ? \" add-list-overlay-color-selected\" : \"\"),\n        style: {\n          color: color,\n          borderColor: this.state.selectedColor === color ? shadedColor : \"rgba(0, 0, 0, 0)\"\n        },\n        \"data-color\": color,\n        onClick: e => this.selectColor(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mt-5 pb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-secondary mr-2 px-3\",\n      style: {\n        borderRadius: \"5px\"\n      },\n      onClick: () => {\n        this.setState({\n          selectedColor: \"\",\n          listName: \"\",\n          listNameExists: false\n        });\n        this.props.hideOverlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-sm btn-primary ml-2 px-3\",\n      style: {\n        borderRadius: \"5px\"\n      },\n      onClick: () => this.handleSubmit(),\n      disabled: this.state.listName === \"\" || this.state.selectedColor === \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"Save\")));\n  }\n\n}\n\nfunction listNameExists(lists, listName) {\n  console.log(lists);\n\n  for (let i = 0; i < lists.length; i++) if (lists[i].name === listName) return true;\n\n  return false;\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/AddListOverlay.js"],"names":["React","Component","AddListOverlay","constructor","props","state","selectedColor","listName","issue","selectColor","e","color","currentTarget","dataset","console","log","setState","focusTitleInput","handleSubmit","listNameExists","lists","createList","hideOverlay","render","issueText","colors","classes","displaying","keyCode","pointerEvents","addListTitleRef","value","map","index","shadedColor","ColorShader","borderColor","borderRadius","i","length","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AAEA,eAAe,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACpDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,aAAa,EAAE,EAAjB;AAAqBC,MAAAA,QAAQ,EAAE,EAA/B;AAAmCC,MAAAA,KAAK,EAAE;AAA1C,KAAb;AACD;;AAEDC,EAAAA,WAAW,CAACC,CAAD,EAAI;AACb,UAAMC,KAAK,GAAGD,CAAC,CAACE,aAAF,CAAgBC,OAAhB,CAAwBF,KAAtC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,SAAKK,QAAL,CAAc;AAAEV,MAAAA,aAAa,EAAEK;AAAjB,KAAd;AACA,SAAKP,KAAL,CAAWa,eAAX;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACbJ,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,UAAMR,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA5B;AACA,UAAMI,KAAK,GAAG,KAAKN,KAAL,CAAWC,aAAzB;;AAEA,QAAIa,cAAc,CAAC,KAAKf,KAAL,CAAWgB,KAAZ,EAAmBb,QAAnB,CAAlB,EAAgD;AAC9C,WAAKS,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAFD,MAEO;AACL;AACA,WAAKJ,KAAL,CAAWiB,UAAX,CAAsBd,QAAtB,EAAgCI,KAAhC,EAFK,CAGL;;AACA,WAAKP,KAAL,CAAWkB,WAAX;AACA,WAAKN,QAAL,CAAc;AAAEV,QAAAA,aAAa,EAAE,EAAjB;AAAqBC,QAAAA,QAAQ,EAAE,EAA/B;AAAmCC,QAAAA,KAAK,EAAE;AAA1C,OAAd;AACD;AACF;;AAEDe,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,KAAKnB,KAAL,CAAWG,KAA3B;AAEA,UAAMiB,MAAM,GAAG,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,EAOb,SAPa,EAQb,SARa,EASb,SATa,EAUb,SAVa,EAWb,SAXa,EAYb,SAZa,EAab,SAba,EAcb,SAda,EAeb,SAfa,EAgBb,SAhBa,EAiBb,SAjBa,CAAf;AAoBA,UAAMC,OAAO,GACX,2CACC,KAAKtB,KAAL,CAAWuB,UAAX,GAAwB,6BAAxB,GAAwD,EADzD,CADF;AAGA,wBACE;AACE,MAAA,SAAS,EAAED,OADb;AAEE,MAAA,SAAS,EAAGhB,CAAD,IAAO;AAChB,YACEA,CAAC,CAACkB,OAAF,KAAc,EAAd,IACA,KAAKvB,KAAL,CAAWE,QAAX,KAAwB,EADxB,IAEA,KAAKF,KAAL,CAAWC,aAAX,KAA6B,EAH/B,EAKE,KAAKY,YAAL;AACH,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE;AAAEW,QAAAA,aAAa,EAAE;AAAjB,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAXF,eAcE;AAAO,MAAA,OAAO,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF,eAeE;AACE,MAAA,EAAE,EAAC,sBADL;AAEE,MAAA,SAAS,EAAC,8BAFZ;AAGE,MAAA,GAAG,EAAE,KAAKzB,KAAL,CAAW0B,eAHlB;AAIE,MAAA,QAAQ,EAAGpB,CAAD,IAAO;AACf,aAAKM,QAAL,CAAc;AACZT,UAAAA,QAAQ,EAAEG,CAAC,CAACE,aAAF,CAAgBmB,KADd;AAEZvB,UAAAA,KAAK,EAAE;AAFK,SAAd;AAID,OATH;AAUE,MAAA,YAAY,EAAC,KAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,eA2BE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EACP,4BACC,KAAKH,KAAL,CAAWG,KAAX,KAAqB,EAArB,GAA0B,EAA1B,GAA+B,YADhC,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGgB,SANH,CADF,CA3BF,eAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCF,eAuCE;AAAO,MAAA,OAAO,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvCF,eAyCE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,MAAM,CAACO,GAAP,CAAW,CAACrB,KAAD,EAAQsB,KAAR,KAAkB;AAC5B,UAAIC,WAAW,GAAGC,WAAW,CAAC,CAAC,GAAF,EAAOxB,KAAP,CAA7B;AACA,0BACE;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,SAAS,EACP,yCACC,KAAKN,KAAL,CAAWC,aAAX,KAA6BK,KAA7B,GACG,kCADH,GAEG,EAHJ,CAHJ;AAQE,QAAA,KAAK,EAAE;AACLA,UAAAA,KAAK,EAAEA,KADF;AAELyB,UAAAA,WAAW,EACT,KAAK/B,KAAL,CAAWC,aAAX,KAA6BK,KAA7B,GACIuB,WADJ,GAEI;AALD,SART;AAeE,sBAAYvB,KAfd;AAgBE,QAAA,OAAO,EAAGD,CAAD,IAAO,KAAKD,WAAL,CAAiBC,CAAjB,CAhBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAoBD,KAtBA,CADH,CAzCF,eAkEE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,oCADZ;AAEE,MAAA,KAAK,EAAE;AAAE2B,QAAAA,YAAY,EAAE;AAAhB,OAFT;AAGE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKrB,QAAL,CAAc;AACZV,UAAAA,aAAa,EAAE,EADH;AAEZC,UAAAA,QAAQ,EAAE,EAFE;AAGZY,UAAAA,cAAc,EAAE;AAHJ,SAAd;AAKA,aAAKf,KAAL,CAAWkB,WAAX;AACD,OAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,KAAK,EAAE;AAAEe,QAAAA,YAAY,EAAE;AAAhB,OAFT;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKnB,YAAL,EAHjB;AAIE,MAAA,QAAQ,EACN,KAAKb,KAAL,CAAWE,QAAX,KAAwB,EAAxB,IAA8B,KAAKF,KAAL,CAAWC,aAAX,KAA6B,EAL/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,CAlEF,CADF;AA+FD;;AAtJmD;;AAyJtD,SAASa,cAAT,CAAwBC,KAAxB,EAA+Bb,QAA/B,EAAyC;AACvCO,EAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;;AACA,OAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,KAAK,CAACmB,MAA1B,EAAkCD,CAAC,EAAnC,EACE,IAAIlB,KAAK,CAACkB,CAAD,CAAL,CAASE,IAAT,KAAkBjC,QAAtB,EAAgC,OAAO,IAAP;;AAElC,SAAO,KAAP;AACD","sourcesContent":["import React, { Component } from \"react\";\n\n// import ColorShader from \"./ColorShader.js\";\n\nexport default class AddListOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selectedColor: \"\", listName: \"\", issue: \"\" };\n  }\n\n  selectColor(e) {\n    const color = e.currentTarget.dataset.color;\n    console.log(color);\n    this.setState({ selectedColor: color });\n    this.props.focusTitleInput();\n  }\n\n  handleSubmit() {\n    console.log(\"triggered in addlistoverlay\");\n    const listName = this.state.listName;\n    const color = this.state.selectedColor;\n\n    if (listNameExists(this.props.lists, listName)) {\n      this.setState({ issue: \"List name already exists.\" });\n    } else {\n      // call create list function\n      this.props.createList(listName, color);\n      // close the overlay\n      this.props.hideOverlay();\n      this.setState({ selectedColor: \"\", listName: \"\", issue: \"\" });\n    }\n  }\n\n  render() {\n    var issueText = this.state.issue;\n\n    const colors = [\n      \"#FDC5F5\",\n      \"#861388\",\n      \"#5E0B15\",\n      \"#f76f90\",\n      \"#e01e37\",\n      \"#FFD166\",\n      \"#fb5607\",\n      \"#ffcdb2\",\n      \"#8cb369\",\n      \"#29BF12\",\n      \"#06EFB1\",\n      \"#0496FF\",\n      \"#5390d9\",\n      \"#023e7d\",\n      \"#5448C8\",\n      \"#131200\",\n      \"#d9d9d9\",\n    ];\n\n    const classes =\n      \"add-list-overlay shadow font-grey p-4\" +\n      (this.props.displaying ? \" add-list-overlay-displayed\" : \"\");\n    return (\n      <div\n        className={classes}\n        onKeyDown={(e) => {\n          if (\n            e.keyCode === 13 &&\n            this.state.listName !== \"\" &&\n            this.state.selectedColor !== \"\"\n          )\n            this.handleSubmit();\n        }}\n      >\n        <div className=\"text-center\" style={{ pointerEvents: \"none\" }}>\n          <h5>Add List</h5>\n        </div>\n        <label htmlFor=\"add-list-title-input\">Title</label>\n        <input\n          id=\"add-list-title-input\"\n          className=\"form-control form-control-sm\"\n          ref={this.props.addListTitleRef}\n          onChange={(e) => {\n            this.setState({\n              listName: e.currentTarget.value,\n              issue: \"\",\n            });\n          }}\n          autoComplete=\"off\"\n        />\n        <span className=\"text-right\">\n          <small\n            className={\n              \"text-right text-danger\" +\n              (this.state.issue !== \"\" ? \"\" : \" invisible\")\n            }\n          >\n            {issueText}\n          </small>\n        </span>\n        <br />\n\n        <label htmlFor=\"add-list-color-input\">Color</label>\n\n        <div className=\"d-flex justify-content-around\">\n          {colors.map((color, index) => {\n            var shadedColor = ColorShader(-0.5, color);\n            return (\n              <i\n                key={color}\n                className={\n                  \"fa fa-circle add-list-overlay-color\" +\n                  (this.state.selectedColor === color\n                    ? \" add-list-overlay-color-selected\"\n                    : \"\")\n                }\n                style={{\n                  color: color,\n                  borderColor:\n                    this.state.selectedColor === color\n                      ? shadedColor\n                      : \"rgba(0, 0, 0, 0)\",\n                }}\n                data-color={color}\n                onClick={(e) => this.selectColor(e)}\n              />\n            );\n          })}\n        </div>\n        <div className=\"d-flex justify-content-center mt-5 pb-2\">\n          <button\n            className=\"btn btn-sm btn-secondary mr-2 px-3\"\n            style={{ borderRadius: \"5px\" }}\n            onClick={() => {\n              this.setState({\n                selectedColor: \"\",\n                listName: \"\",\n                listNameExists: false,\n              });\n              this.props.hideOverlay();\n            }}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"btn btn-sm btn-primary ml-2 px-3\"\n            style={{ borderRadius: \"5px\" }}\n            onClick={() => this.handleSubmit()}\n            disabled={\n              this.state.listName === \"\" || this.state.selectedColor === \"\"\n            }\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction listNameExists(lists, listName) {\n  console.log(lists);\n  for (let i = 0; i < lists.length; i++)\n    if (lists[i].name === listName) return true;\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}