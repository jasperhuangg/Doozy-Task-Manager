{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/todolist/Todolist.js\";\nimport React, { Component } from \"react\";\nimport Details from \"./Details.js\";\nimport ListItem from \"./ListItem.js\";\nimport CalendarOverlay from \"./CalendarOverlay.js\";\nimport PrioritiesOverlay from \"./PrioritiesOverlay.js\";\nimport \"./Todolist.css\";\nconst domain = \"http://localhost:9000\";\nexport default class Todolist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calendarOverlayDisplaying: false,\n      addItemValue: \"\",\n      addItemDate: \"\"\n    };\n  }\n\n  keyPress(e) {\n    const val = document.getElementById(\"addItemInput\").value; // hardcoded date and priority values as UI components not yet implemented\n\n    if (e.keyCode == 13 && val !== \"\") {\n      this.addListItem(this.props.name, this.state.addItemValue, \"2020-06-15\", \"\", \"low\");\n      document.getElementById(\"addItemInput\").value = \"\";\n      this.props.rerender();\n    }\n  }\n\n  handleInput(e) {\n    this.setState({\n      addItemValue: e.target.value\n    });\n  }\n\n  addListItem(listName, title, dueDate, description, priority) {\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: \"Jasper\",\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: body\n    }).then(res => res.text());\n  }\n\n  setAddItemDate(date) {\n    this.setState({\n      addItemDate: date\n    });\n  }\n\n  handleCalendarOverlayOK() {\n    console.log(this.state.addItemDate);\n    document.getElementById(\"calendar-overlay\").classList.add(\"d-none\");\n  }\n\n  handleShowCalendarOverlay() {\n    this.setState({\n      calendarOverlayDisplaying: true\n    });\n  } // setCompleted(listName, )\n\n\n  render() {\n    const name = this.props.name;\n    const items = this.props.items;\n    const color = this.props.color;\n    const calendarOverlayClasslist = this.state.calendarOverlayDisplaying ? \"\" : \"d-none\";\n    const placeholder = 'Add a task to \"' + name + '\"';\n    return (\n      /*#__PURE__*/\n      // w-50 class is temporary\n      React.createElement(\"div\", {\n        className: \"container-fluid w-50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-right my-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: \"addItemInput\",\n        className: \"form-control\",\n        type: \"text\",\n        placeholder: placeholder,\n        onInput: e => this.handleInput(e),\n        onKeyDown: e => this.keyPress(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"input-group-text icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-balance-scale-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group-append\",\n        onClick: () => this.handleShowCalendarOverlay(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"input-group-text icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-calendar-alt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(CalendarOverlay, {\n        className: calendarOverlayClasslist,\n        setAddItemDate: date => this.setAddItemDate(date),\n        handleCalendarOverlayOK: () => this.handleCalendarOverlayOK(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }), items.map((item, i) => /*#__PURE__*/React.createElement(ListItem, {\n        key: i,\n        title: item.title,\n        description: item.description,\n        priority: item.priority,\n        dueDate: item.dueDate,\n        completed: item.completed,\n        itemID: item.itemID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      })))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/todolist/Todolist.js"],"names":["React","Component","Details","ListItem","CalendarOverlay","PrioritiesOverlay","domain","Todolist","constructor","props","state","calendarOverlayDisplaying","addItemValue","addItemDate","keyPress","e","val","document","getElementById","value","keyCode","addListItem","name","rerender","handleInput","setState","target","listName","title","dueDate","description","priority","url","body","JSON","stringify","username","fetch","method","headers","then","res","text","setAddItemDate","date","handleCalendarOverlayOK","console","log","classList","add","handleShowCalendarOverlay","render","items","color","calendarOverlayClasslist","placeholder","map","item","i","completed","itemID"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Details from \"./Details.js\";\nimport ListItem from \"./ListItem.js\";\nimport CalendarOverlay from \"./CalendarOverlay.js\";\nimport PrioritiesOverlay from \"./PrioritiesOverlay.js\";\n\nimport \"./Todolist.css\";\n\nconst domain = \"http://localhost:9000\";\n\nexport default class Todolist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calendarOverlayDisplaying: false,\n      addItemValue: \"\",\n      addItemDate: \"\",\n    };\n  }\n\n  keyPress(e) {\n    const val = document.getElementById(\"addItemInput\").value;\n    // hardcoded date and priority values as UI components not yet implemented\n    if (e.keyCode == 13 && val !== \"\") {\n      this.addListItem(\n        this.props.name,\n        this.state.addItemValue,\n        \"2020-06-15\",\n        \"\",\n        \"low\"\n      );\n      document.getElementById(\"addItemInput\").value = \"\";\n      this.props.rerender();\n    }\n  }\n\n  handleInput(e) {\n    this.setState({ addItemValue: e.target.value });\n  }\n\n  addListItem(listName, title, dueDate, description, priority) {\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: \"Jasper\",\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: body,\n    }).then((res) => res.text());\n  }\n\n  setAddItemDate(date) {\n    this.setState({ addItemDate: date });\n  }\n\n  handleCalendarOverlayOK() {\n    console.log(this.state.addItemDate);\n    document.getElementById(\"calendar-overlay\").classList.add(\"d-none\");\n  }\n\n  handleShowCalendarOverlay() {\n    this.setState({ calendarOverlayDisplaying: true });\n  }\n\n  // setCompleted(listName, )\n\n  render() {\n    const name = this.props.name;\n    const items = this.props.items;\n    const color = this.props.color;\n    const calendarOverlayClasslist = this.state.calendarOverlayDisplaying\n      ? \"\"\n      : \"d-none\";\n\n    const placeholder = 'Add a task to \"' + name + '\"';\n\n    return (\n      // w-50 class is temporary\n      <div className=\"container-fluid w-50\">\n        <h1 className=\"text-right my-4\">{name}</h1>\n        <div className=\"input-group mb-4\">\n          <input\n            id=\"addItemInput\"\n            className=\"form-control\"\n            type=\"text\"\n            placeholder={placeholder}\n            onInput={(e) => this.handleInput(e)}\n            onKeyDown={(e) => this.keyPress(e)}\n          />\n          <div className=\"input-group-append\">\n            <span className=\"input-group-text icon\">\n              <i className=\"fas fa-balance-scale-left\"></i>\n            </span>\n          </div>\n          {/* <PrioritiesOverlay /> */}\n          <div\n            className=\"input-group-append\"\n            onClick={() => this.handleShowCalendarOverlay()}\n          >\n            <span className=\"input-group-text icon\">\n              <i className=\"fas fa-calendar-alt\"></i>\n            </span>\n          </div>\n        </div>\n        <CalendarOverlay\n          className={calendarOverlayClasslist}\n          setAddItemDate={(date) => this.setAddItemDate(date)}\n          handleCalendarOverlayOK={() => this.handleCalendarOverlayOK()}\n        />\n        {items.map((item, i) => (\n          <ListItem\n            key={i}\n            title={item.title}\n            description={item.description}\n            priority={item.priority}\n            dueDate={item.dueDate}\n            completed={item.completed}\n            itemID={item.itemID}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}