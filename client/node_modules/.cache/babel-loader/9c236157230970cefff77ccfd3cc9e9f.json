{"ast":null,"code":"var _jsxFileName = \"/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Todolist from \"./todolist/Todolist.js\";\nconst domain = \"http://localhost:9000\";\n\nvar ObjectID = require(\"bson-objectid\");\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      error: null,\n      lists: [{\n        name: \"test list\",\n        items: [{\n          title: \"1\",\n          description: \"\",\n          dueDate: \"\",\n          priority: \"medium\",\n          completed: false,\n          itemID: \"5ee343409cde2d25e96d4878\"\n        }, {\n          title: \"2\",\n          description: \"\",\n          dueDate: \"\",\n          priority: \"medium\",\n          completed: false,\n          itemID: \"5ee343409cde2d25e96d4875\"\n        }, {\n          title: \"3\",\n          description: \"\",\n          dueDate: \"\",\n          priority: \"medium\",\n          completed: false,\n          itemID: \"5ee343409cde2d25e96d4874\"\n        }, {\n          title: \"4\",\n          description: \"\",\n          dueDate: \"\",\n          priority: \"medium\",\n          completed: false,\n          itemID: \"5ee343409cde2d25e96d4872\"\n        }]\n      }]\n    };\n  } // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n\n\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: \"Jasper\"\n      /*this.props.username*/\n\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: body\n    }).then(res => res.json()).then(res => {\n      var lists = res;\n      this.setState({\n        lists: lists,\n        isLoaded: true\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getLists();\n  } // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.isLoaded !== prevState.isLoaded) this.getLists();\n  // }\n\n\n  addListItem(listName, title, dueDate, description, priority) {\n    const lists = this.state.lists.slice();\n    var objID = null;\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        var item = {\n          title: title,\n          description: description,\n          dueDate: dueDate,\n          priority: priority,\n          completed: false,\n          itemID: new ObjectID()\n        };\n        items.push(item);\n        objID = item.itemID;\n        items.sort(sortListItems);\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: \"Jasper\",\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n      itemID: objID\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: body\n    });\n  }\n\n  setItemTitle(listName, itemID, title) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].title = title;\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemTitle\";\n    const body = JSON.stringify({\n      username: \"Jasper\",\n      listName: listName,\n      itemID: itemID,\n      title: title\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: body\n    });\n  }\n\n  setItemCompleted(listName, itemID, completed) {\n    const lists = this.state.lists.slice();\n\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].completed = completed;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n\n        break;\n      }\n    }\n\n    this.setState({\n      lists: lists\n    });\n    const url = domain + \"/setItemCompleted\";\n    const body = JSON.stringify({\n      username: \"Jasper\",\n      listName: listName,\n      itemID: itemID,\n      completed: completed\n    });\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: body\n    });\n  }\n\n  setItemDueDate(dueDate) {}\n\n  setItemPriority(priority) {}\n\n  setItemDescription(description) {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, this.state.lists.map((list, i) => /*#__PURE__*/React.createElement(Todolist, {\n      key: i,\n      color: list.color,\n      name: list.name,\n      items: list.items,\n      addListItem: (listName, title, dueDate, description, priority) => this.addListItem(listName, title, dueDate, description, priority),\n      setItemTitle: (listName, itemID, title) => this.setItemTitle(listName, itemID, title),\n      setItemCompleted: (listName, itemID, completed) => this.setItemCompleted(listName, itemID, completed),\n      setItemDueDate: (listName, itemID, dueDate) => this.setItemDueDate(listName, itemID, dueDate),\n      setItemPriority: (listName, itemID, priority) => this.setItemPriority(listName, itemID, priority),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nfunction sortListItems(a, b) {\n  if (a.completed && !b.completed) return 1;else if (!a.completed && b.completed) return -1;else if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;else {\n    // both are either completed or incomplete or have a due date set or no due date set\n    if (a.dueDate === b.dueDate) {\n      // sort items due on the same day by priority\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n      return priorityB - priorityA;\n    } else {\n      // sort items based on date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      return dateA - dateB;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/mern-todolist/client/src/App.js"],"names":["React","Component","Todolist","domain","ObjectID","require","App","constructor","props","state","isLoaded","error","lists","name","items","title","description","dueDate","priority","completed","itemID","getLists","url","body","JSON","stringify","username","fetch","method","headers","then","res","json","setState","componentDidMount","addListItem","listName","slice","objID","i","length","item","push","sort","sortListItems","setItemTitle","j","setItemCompleted","setItemDueDate","setItemPriority","setItemDescription","render","map","list","color","a","b","priorities","priorityA","indexOf","priorityB","dateA","Date","dateB"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Todolist from \"./todolist/Todolist.js\";\n\nconst domain = \"http://localhost:9000\";\nvar ObjectID = require(\"bson-objectid\");\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      error: null,\n      lists: [\n        {\n          name: \"test list\",\n          items: [\n            {\n              title: \"1\",\n              description: \"\",\n              dueDate: \"\",\n              priority: \"medium\",\n              completed: false,\n              itemID: \"5ee343409cde2d25e96d4878\",\n            },\n            {\n              title: \"2\",\n              description: \"\",\n              dueDate: \"\",\n              priority: \"medium\",\n              completed: false,\n              itemID: \"5ee343409cde2d25e96d4875\",\n            },\n            {\n              title: \"3\",\n              description: \"\",\n              dueDate: \"\",\n              priority: \"medium\",\n              completed: false,\n              itemID: \"5ee343409cde2d25e96d4874\",\n            },\n            {\n              title: \"4\",\n              description: \"\",\n              dueDate: \"\",\n              priority: \"medium\",\n              completed: false,\n              itemID: \"5ee343409cde2d25e96d4872\",\n            },\n          ],\n        },\n      ],\n    };\n  }\n\n  // for now assume we are getting the user's username from the props\n  // that are being passed in by a Login component (to be created)\n  getLists() {\n    const url = domain + \"/getLists\";\n    const body = JSON.stringify({\n      username: \"Jasper\" /*this.props.username*/,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: body,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        var lists = res;\n        this.setState({ lists: lists, isLoaded: true });\n      });\n  }\n\n  componentDidMount() {\n    this.getLists();\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.isLoaded !== prevState.isLoaded) this.getLists();\n  // }\n\n  addListItem(listName, title, dueDate, description, priority) {\n    const lists = this.state.lists.slice();\n    var objID = null;\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        var item = {\n          title: title,\n          description: description,\n          dueDate: dueDate,\n          priority: priority,\n          completed: false,\n          itemID: new ObjectID(),\n        };\n        items.push(item);\n        objID = item.itemID;\n        items.sort(sortListItems);\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/addListItem\";\n    const body = JSON.stringify({\n      username: \"Jasper\",\n      listName: listName,\n      title: title,\n      dueDate: dueDate,\n      description: description,\n      priority: priority,\n      itemID: objID,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: body,\n    });\n  }\n\n  setItemTitle(listName, itemID, title) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].title = title;\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemTitle\";\n    const body = JSON.stringify({\n      username: \"Jasper\",\n      listName: listName,\n      itemID: itemID,\n      title: title,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: body,\n    });\n  }\n\n  setItemCompleted(listName, itemID, completed) {\n    const lists = this.state.lists.slice();\n    for (let i = 0; i < lists.length; i++) {\n      if (lists[i].name === listName) {\n        const items = lists[i].items;\n        for (let j = 0; j < items.length; j++) {\n          if (items[j].itemID === itemID) {\n            items[j].completed = completed;\n            items.sort(sortListItems);\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    this.setState({ lists: lists });\n\n    const url = domain + \"/setItemCompleted\";\n    const body = JSON.stringify({\n      username: \"Jasper\",\n      listName: listName,\n      itemID: itemID,\n      completed: completed,\n    });\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: body,\n    });\n  }\n\n  setItemDueDate(dueDate) {}\n\n  setItemPriority(priority) {}\n\n  setItemDescription(description) {}\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.lists.map((list, i) => (\n          <Todolist\n            key={i}\n            color={list.color}\n            name={list.name}\n            items={list.items}\n            addListItem={(listName, title, dueDate, description, priority) =>\n              this.addListItem(listName, title, dueDate, description, priority)\n            }\n            setItemTitle={(listName, itemID, title) =>\n              this.setItemTitle(listName, itemID, title)\n            }\n            setItemCompleted={(listName, itemID, completed) =>\n              this.setItemCompleted(listName, itemID, completed)\n            }\n            setItemDueDate={(listName, itemID, dueDate) =>\n              this.setItemDueDate(listName, itemID, dueDate)\n            }\n            setItemPriority={(listName, itemID, priority) =>\n              this.setItemPriority(listName, itemID, priority)\n            }\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nfunction sortListItems(a, b) {\n  if (a.completed && !b.completed) return 1;\n  else if (!a.completed && b.completed) return -1;\n  else if (a.dueDate === \"\" && b.dueDate !== \"\") return 1;\n  else if (a.dueDate !== \"\" && b.dueDate === \"\") return -1;\n  else {\n    // both are either completed or incomplete or have a due date set or no due date set\n    if (a.dueDate === b.dueDate) {\n      // sort items due on the same day by priority\n      const priorities = [\"low\", \"medium\", \"high\"];\n      const priorityA = priorities.indexOf(a.priority);\n      const priorityB = priorities.indexOf(b.priority);\n      return priorityB - priorityA;\n    } else {\n      // sort items based on date\n      const dateA = new Date(a.dueDate + \" 00:00\");\n      const dateB = new Date(b.dueDate + \" 00:00\");\n      return dateA - dateB;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}