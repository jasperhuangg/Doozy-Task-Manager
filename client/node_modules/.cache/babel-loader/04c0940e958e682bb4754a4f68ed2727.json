{"ast":null,"code":"export default function PriorityParser(str){var priorities=[\"!high\",\"!medium\",\"!low\"];var words=str.toLowerCase().split(\" \");// get an array of all the words the string in lowercase\nvar keywords=\"\";// search for any occurences of priority strings\nfor(var i=0;i<words.length;i++){var word=words[i];if(priorities.indexOf(word)!==-1){keywords=word;break;}}// no date found\nif(keywords===\"\")return{priority:\"low\",keywords:\"\"};else{// there exist priority strings\nvar priority=keywords.substring(1,keywords.length);return{priority:priority,keywords:keywords};}}// console.log(PriorityParser(\"go to the gym today !medium\"));","map":{"version":3,"sources":["/Users/jasper.huang/Desktop/Personal_Projects/doozy_task_manager/client/src/todolist/PriorityParser.js"],"names":["PriorityParser","str","priorities","words","toLowerCase","split","keywords","i","length","word","indexOf","priority","substring"],"mappings":"AAAA,cAAe,SAASA,CAAAA,cAAT,CAAwBC,GAAxB,CAA6B,CAC1C,GAAMC,CAAAA,UAAU,CAAG,CAAC,OAAD,CAAU,SAAV,CAAqB,MAArB,CAAnB,CAEA,GAAIC,CAAAA,KAAK,CAAGF,GAAG,CAACG,WAAJ,GAAkBC,KAAlB,CAAwB,GAAxB,CAAZ,CAA0C;AAE1C,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CAEA;AACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,KAAK,CAACK,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC,GAAIE,CAAAA,IAAI,CAAGN,KAAK,CAACI,CAAD,CAAhB,CACA,GAAIL,UAAU,CAACQ,OAAX,CAAmBD,IAAnB,IAA6B,CAAC,CAAlC,CAAqC,CACnCH,QAAQ,CAAGG,IAAX,CACA,MACD,CACF,CAED;AACA,GAAIH,QAAQ,GAAK,EAAjB,CAAqB,MAAO,CAAEK,QAAQ,CAAE,KAAZ,CAAmBL,QAAQ,CAAE,EAA7B,CAAP,CAArB,IACK,CACH;AACA,GAAMK,CAAAA,QAAQ,CAAGL,QAAQ,CAACM,SAAT,CAAmB,CAAnB,CAAsBN,QAAQ,CAACE,MAA/B,CAAjB,CACA,MAAO,CAAEG,QAAQ,CAAEA,QAAZ,CAAsBL,QAAQ,CAAEA,QAAhC,CAAP,CACD,CACF,CAED","sourcesContent":["export default function PriorityParser(str) {\n  const priorities = [\"!high\", \"!medium\", \"!low\"];\n\n  var words = str.toLowerCase().split(\" \"); // get an array of all the words the string in lowercase\n\n  var keywords = \"\";\n\n  // search for any occurences of priority strings\n  for (let i = 0; i < words.length; i++) {\n    var word = words[i];\n    if (priorities.indexOf(word) !== -1) {\n      keywords = word;\n      break;\n    }\n  }\n\n  // no date found\n  if (keywords === \"\") return { priority: \"low\", keywords: \"\" };\n  else {\n    // there exist priority strings\n    const priority = keywords.substring(1, keywords.length);\n    return { priority: priority, keywords: keywords };\n  }\n}\n\n// console.log(PriorityParser(\"go to the gym today !medium\"));\n"]},"metadata":{},"sourceType":"module"}